/*
 * generated by Xtext 2.17.0.M3
 */
package br.ufes.inf.nemo.ml2.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ML2GrammarAccess extends AbstractGrammarElementFinder {
	
	public class ML2ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ML2Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cIncludeKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cIncludesAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cIncludesML2ModelCrossReference_3_0_1_0 = (CrossReference)cIncludesAssignment_3_0_1.eContents().get(0);
		private final RuleCall cIncludesML2ModelQualifiedNameParserRuleCall_3_0_1_0_1 = (RuleCall)cIncludesML2ModelCrossReference_3_0_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Assignment cElementsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cElementsModelElementParserRuleCall_3_1_0 = (RuleCall)cElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ML2Model:
		//	'module' name=QualifiedName '{' ('include' includes+=[ML2Model|QualifiedName] ';' | elements+=ModelElement)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=QualifiedName '{' ('include' includes+=[ML2Model|QualifiedName] ';' | elements+=ModelElement)* '}'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('include' includes+=[ML2Model|QualifiedName] ';' | elements+=ModelElement)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'include' includes+=[ML2Model|QualifiedName] ';'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'include'
		public Keyword getIncludeKeyword_3_0_0() { return cIncludeKeyword_3_0_0; }
		
		//includes+=[ML2Model|QualifiedName]
		public Assignment getIncludesAssignment_3_0_1() { return cIncludesAssignment_3_0_1; }
		
		//[ML2Model|QualifiedName]
		public CrossReference getIncludesML2ModelCrossReference_3_0_1_0() { return cIncludesML2ModelCrossReference_3_0_1_0; }
		
		//QualifiedName
		public RuleCall getIncludesML2ModelQualifiedNameParserRuleCall_3_0_1_0_1() { return cIncludesML2ModelQualifiedNameParserRuleCall_3_0_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_0_2() { return cSemicolonKeyword_3_0_2; }
		
		//elements+=ModelElement
		public Assignment getElementsAssignment_3_1() { return cElementsAssignment_3_1; }
		
		//ModelElement
		public RuleCall getElementsModelElementParserRuleCall_3_1_0() { return cElementsModelElementParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.*'?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName '.*'?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//'.*'?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	'import' importedNamespace=QualifiedNameWithWildcard;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}
	public class ModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ModelElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cImportParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cEntityDeclarationParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cGeneralizationSetParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ModelElement:
		//	(Import | EntityDeclaration | GeneralizationSet) ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(Import | EntityDeclaration | GeneralizationSet) ';'
		public Group getGroup() { return cGroup; }
		
		//Import | EntityDeclaration | GeneralizationSet
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//Import
		public RuleCall getImportParserRuleCall_0_0() { return cImportParserRuleCall_0_0; }
		
		//EntityDeclaration
		public RuleCall getEntityDeclarationParserRuleCall_0_1() { return cEntityDeclarationParserRuleCall_0_1; }
		
		//GeneralizationSet
		public RuleCall getGeneralizationSetParserRuleCall_0_2() { return cGeneralizationSetParserRuleCall_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class EntityDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.EntityDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cML2ClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIndividualParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EntityDeclaration:
		//	ML2Class | Individual;
		@Override public ParserRule getRule() { return rule; }
		
		//ML2Class | Individual
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ML2Class
		public RuleCall getML2ClassParserRuleCall_0() { return cML2ClassParserRuleCall_0; }
		
		//Individual
		public RuleCall getIndividualParserRuleCall_1() { return cIndividualParserRuleCall_1; }
	}
	public class IndividualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Individual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndividualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInstantiatedClassesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInstantiatedClassesML2ClassCrossReference_3_0 = (CrossReference)cInstantiatedClassesAssignment_3.eContents().get(0);
		private final RuleCall cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cInstantiatedClassesML2ClassCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cInstantiatedClassesML2ClassCrossReference_4_1_0 = (CrossReference)cInstantiatedClassesAssignment_4_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cInstantiatedClassesML2ClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssignmentsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_5_1_0 = (RuleCall)cAssignmentsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//Individual:
		//	'individual' name=ID
		//	':' instantiatedClasses+=[ML2Class|QualifiedName] (',' instantiatedClasses+=[ML2Class|QualifiedName])* ('{'
		//	assignments+=FeatureAssignment* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'individual' name=ID ':' instantiatedClasses+=[ML2Class|QualifiedName] (','
		//instantiatedClasses+=[ML2Class|QualifiedName])* ('{' assignments+=FeatureAssignment* '}')?
		public Group getGroup() { return cGroup; }
		
		//'individual'
		public Keyword getIndividualKeyword_0() { return cIndividualKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//instantiatedClasses+=[ML2Class|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_3() { return cInstantiatedClassesAssignment_3; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getInstantiatedClassesML2ClassCrossReference_3_0() { return cInstantiatedClassesML2ClassCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesML2ClassQualifiedNameParserRuleCall_3_0_1() { return cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_3_0_1; }
		
		//(',' instantiatedClasses+=[ML2Class|QualifiedName])*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//instantiatedClasses+=[ML2Class|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_4_1() { return cInstantiatedClassesAssignment_4_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getInstantiatedClassesML2ClassCrossReference_4_1_0() { return cInstantiatedClassesML2ClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesML2ClassQualifiedNameParserRuleCall_4_1_0_1() { return cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//('{' assignments+=FeatureAssignment* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }
		
		//assignments+=FeatureAssignment*
		public Assignment getAssignmentsAssignment_5_1() { return cAssignmentsAssignment_5_1; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_5_1_0() { return cAssignmentsFeatureAssignmentParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_2() { return cRightCurlyBracketKeyword_5_2; }
	}
	public class ML2ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ML2Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cSomeFOClassParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cNonFOClassParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cAssignmentsAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_1_1_0_0 = (RuleCall)cAssignmentsAssignment_1_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_1_1_1_0 = (RuleCall)cFeaturesAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//ML2Class:
		//	(SomeFOClass | NonFOClass) ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//(SomeFOClass | NonFOClass) ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup() { return cGroup; }
		
		//SomeFOClass | NonFOClass
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//SomeFOClass
		public RuleCall getSomeFOClassParserRuleCall_0_0() { return cSomeFOClassParserRuleCall_0_0; }
		
		//NonFOClass
		public RuleCall getNonFOClassParserRuleCall_0_1() { return cNonFOClassParserRuleCall_0_1; }
		
		//('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(assignments+=FeatureAssignment | features+=Feature)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//assignments+=FeatureAssignment
		public Assignment getAssignmentsAssignment_1_1_0() { return cAssignmentsAssignment_1_1_0; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_1_1_0_0() { return cAssignmentsFeatureAssignmentParserRuleCall_1_1_0_0; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_1_1_1() { return cFeaturesAssignment_1_1_1; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_1_1_1_0() { return cFeaturesFeatureParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class SomeFOClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SomeFOClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cFOClassParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cDataTypeParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cInstantiatedClassesML2ClassCrossReference_1_1_0 = (CrossReference)cInstantiatedClassesAssignment_1_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cInstantiatedClassesML2ClassCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesML2ClassCrossReference_1_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_1_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_2_1_0_1 = (RuleCall)cInstantiatedClassesML2ClassCrossReference_1_2_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSpecializesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperClassesML2ClassCrossReference_2_1_0 = (CrossReference)cSuperClassesAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperClassesML2ClassQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cSuperClassesML2ClassCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cSuperClassesML2ClassCrossReference_2_2_1_0 = (CrossReference)cSuperClassesAssignment_2_2_1.eContents().get(0);
		private final RuleCall cSuperClassesML2ClassQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cSuperClassesML2ClassCrossReference_2_2_1_0.eContents().get(1);
		
		//SomeFOClass ML2Class:
		//	(FOClass | DataType) (':' instantiatedClasses+=[ML2Class|QualifiedName] (','
		//	instantiatedClasses+=[ML2Class|QualifiedName])*)? ('specializes' superClasses+=[ML2Class|QualifiedName] (','
		//	superClasses+=[ML2Class|QualifiedName])*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(FOClass | DataType) (':' instantiatedClasses+=[ML2Class|QualifiedName] (','
		//instantiatedClasses+=[ML2Class|QualifiedName])*)? ('specializes' superClasses+=[ML2Class|QualifiedName] (','
		//superClasses+=[ML2Class|QualifiedName])*)?
		public Group getGroup() { return cGroup; }
		
		//FOClass | DataType
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//FOClass
		public RuleCall getFOClassParserRuleCall_0_0() { return cFOClassParserRuleCall_0_0; }
		
		//DataType
		public RuleCall getDataTypeParserRuleCall_0_1() { return cDataTypeParserRuleCall_0_1; }
		
		//(':' instantiatedClasses+=[ML2Class|QualifiedName] (',' instantiatedClasses+=[ML2Class|QualifiedName])*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }
		
		//instantiatedClasses+=[ML2Class|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_1_1() { return cInstantiatedClassesAssignment_1_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getInstantiatedClassesML2ClassCrossReference_1_1_0() { return cInstantiatedClassesML2ClassCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_1_0_1() { return cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_1_0_1; }
		
		//(',' instantiatedClasses+=[ML2Class|QualifiedName])*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//instantiatedClasses+=[ML2Class|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_1_2_1() { return cInstantiatedClassesAssignment_1_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getInstantiatedClassesML2ClassCrossReference_1_2_1_0() { return cInstantiatedClassesML2ClassCrossReference_1_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_2_1_0_1() { return cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_2_1_0_1; }
		
		//('specializes' superClasses+=[ML2Class|QualifiedName] (',' superClasses+=[ML2Class|QualifiedName])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_2_0() { return cSpecializesKeyword_2_0; }
		
		//superClasses+=[ML2Class|QualifiedName]
		public Assignment getSuperClassesAssignment_2_1() { return cSuperClassesAssignment_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSuperClassesML2ClassCrossReference_2_1_0() { return cSuperClassesML2ClassCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesML2ClassQualifiedNameParserRuleCall_2_1_0_1() { return cSuperClassesML2ClassQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' superClasses+=[ML2Class|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//superClasses+=[ML2Class|QualifiedName]
		public Assignment getSuperClassesAssignment_2_2_1() { return cSuperClassesAssignment_2_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSuperClassesML2ClassCrossReference_2_2_1_0() { return cSuperClassesML2ClassCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesML2ClassQualifiedNameParserRuleCall_2_2_1_0_1() { return cSuperClassesML2ClassQualifiedNameParserRuleCall_2_2_1_0_1; }
	}
	public class NonFOClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.NonFOClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cHOClassParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cOrderlessClassParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cInstantiatedClassesML2ClassCrossReference_1_1_0 = (CrossReference)cInstantiatedClassesAssignment_1_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cInstantiatedClassesML2ClassCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesML2ClassCrossReference_1_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_1_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_2_1_0_1 = (RuleCall)cInstantiatedClassesML2ClassCrossReference_1_2_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSpecializesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperClassesML2ClassCrossReference_2_1_0 = (CrossReference)cSuperClassesAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperClassesML2ClassQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cSuperClassesML2ClassCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cSuperClassesML2ClassCrossReference_2_2_1_0 = (CrossReference)cSuperClassesAssignment_2_2_1.eContents().get(0);
		private final RuleCall cSuperClassesML2ClassQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cSuperClassesML2ClassCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSubordinatedToKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSubordinatorsML2ClassCrossReference_3_1_0 = (CrossReference)cSubordinatorsAssignment_3_1.eContents().get(0);
		private final RuleCall cSubordinatorsML2ClassQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cSubordinatorsML2ClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSubordinatorsML2ClassCrossReference_3_2_1_0 = (CrossReference)cSubordinatorsAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSubordinatorsML2ClassQualifiedNameParserRuleCall_3_2_1_0_1 = (RuleCall)cSubordinatorsML2ClassCrossReference_3_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cCategorizationTypeAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cCategorizationTypeCategorizationTypeEnumRuleCall_4_0_0_0 = (RuleCall)cCategorizationTypeAssignment_4_0_0.eContents().get(0);
		private final Assignment cCategorizedClassAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final CrossReference cCategorizedClassML2ClassCrossReference_4_0_1_0 = (CrossReference)cCategorizedClassAssignment_4_0_1.eContents().get(0);
		private final RuleCall cCategorizedClassML2ClassQualifiedNameParserRuleCall_4_0_1_0_1 = (RuleCall)cCategorizedClassML2ClassCrossReference_4_0_1_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cIsPowertypeOfKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cPowertypeOfAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final CrossReference cPowertypeOfML2ClassCrossReference_4_1_1_0 = (CrossReference)cPowertypeOfAssignment_4_1_1.eContents().get(0);
		private final RuleCall cPowertypeOfML2ClassQualifiedNameParserRuleCall_4_1_1_0_1 = (RuleCall)cPowertypeOfML2ClassCrossReference_4_1_1_0.eContents().get(1);
		
		//NonFOClass ML2Class:
		//	(HOClass | OrderlessClass) (':' instantiatedClasses+=[ML2Class|QualifiedName] (','
		//	instantiatedClasses+=[ML2Class|QualifiedName])*)? ('specializes' superClasses+=[ML2Class|QualifiedName] (','
		//	superClasses+=[ML2Class|QualifiedName])*)? ('subordinatedTo' subordinators+=[ML2Class|QualifiedName] (','
		//	subordinators+=[ML2Class|QualifiedName])*)? (categorizationType=CategorizationType
		//	categorizedClass=[ML2Class|QualifiedName] | 'isPowertypeOf' powertypeOf=[ML2Class|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//(HOClass | OrderlessClass) (':' instantiatedClasses+=[ML2Class|QualifiedName] (','
		//instantiatedClasses+=[ML2Class|QualifiedName])*)? ('specializes' superClasses+=[ML2Class|QualifiedName] (','
		//superClasses+=[ML2Class|QualifiedName])*)? ('subordinatedTo' subordinators+=[ML2Class|QualifiedName] (','
		//subordinators+=[ML2Class|QualifiedName])*)? (categorizationType=CategorizationType
		//categorizedClass=[ML2Class|QualifiedName] | 'isPowertypeOf' powertypeOf=[ML2Class|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//HOClass | OrderlessClass
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//HOClass
		public RuleCall getHOClassParserRuleCall_0_0() { return cHOClassParserRuleCall_0_0; }
		
		//OrderlessClass
		public RuleCall getOrderlessClassParserRuleCall_0_1() { return cOrderlessClassParserRuleCall_0_1; }
		
		//(':' instantiatedClasses+=[ML2Class|QualifiedName] (',' instantiatedClasses+=[ML2Class|QualifiedName])*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }
		
		//instantiatedClasses+=[ML2Class|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_1_1() { return cInstantiatedClassesAssignment_1_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getInstantiatedClassesML2ClassCrossReference_1_1_0() { return cInstantiatedClassesML2ClassCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_1_0_1() { return cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_1_0_1; }
		
		//(',' instantiatedClasses+=[ML2Class|QualifiedName])*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//instantiatedClasses+=[ML2Class|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_1_2_1() { return cInstantiatedClassesAssignment_1_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getInstantiatedClassesML2ClassCrossReference_1_2_1_0() { return cInstantiatedClassesML2ClassCrossReference_1_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_2_1_0_1() { return cInstantiatedClassesML2ClassQualifiedNameParserRuleCall_1_2_1_0_1; }
		
		//('specializes' superClasses+=[ML2Class|QualifiedName] (',' superClasses+=[ML2Class|QualifiedName])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_2_0() { return cSpecializesKeyword_2_0; }
		
		//superClasses+=[ML2Class|QualifiedName]
		public Assignment getSuperClassesAssignment_2_1() { return cSuperClassesAssignment_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSuperClassesML2ClassCrossReference_2_1_0() { return cSuperClassesML2ClassCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesML2ClassQualifiedNameParserRuleCall_2_1_0_1() { return cSuperClassesML2ClassQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' superClasses+=[ML2Class|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//superClasses+=[ML2Class|QualifiedName]
		public Assignment getSuperClassesAssignment_2_2_1() { return cSuperClassesAssignment_2_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSuperClassesML2ClassCrossReference_2_2_1_0() { return cSuperClassesML2ClassCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesML2ClassQualifiedNameParserRuleCall_2_2_1_0_1() { return cSuperClassesML2ClassQualifiedNameParserRuleCall_2_2_1_0_1; }
		
		//('subordinatedTo' subordinators+=[ML2Class|QualifiedName] (',' subordinators+=[ML2Class|QualifiedName])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'subordinatedTo'
		public Keyword getSubordinatedToKeyword_3_0() { return cSubordinatedToKeyword_3_0; }
		
		//subordinators+=[ML2Class|QualifiedName]
		public Assignment getSubordinatorsAssignment_3_1() { return cSubordinatorsAssignment_3_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSubordinatorsML2ClassCrossReference_3_1_0() { return cSubordinatorsML2ClassCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsML2ClassQualifiedNameParserRuleCall_3_1_0_1() { return cSubordinatorsML2ClassQualifiedNameParserRuleCall_3_1_0_1; }
		
		//(',' subordinators+=[ML2Class|QualifiedName])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//subordinators+=[ML2Class|QualifiedName]
		public Assignment getSubordinatorsAssignment_3_2_1() { return cSubordinatorsAssignment_3_2_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSubordinatorsML2ClassCrossReference_3_2_1_0() { return cSubordinatorsML2ClassCrossReference_3_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsML2ClassQualifiedNameParserRuleCall_3_2_1_0_1() { return cSubordinatorsML2ClassQualifiedNameParserRuleCall_3_2_1_0_1; }
		
		//(categorizationType=CategorizationType categorizedClass=[ML2Class|QualifiedName] | 'isPowertypeOf'
		//powertypeOf=[ML2Class|QualifiedName])?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//categorizationType=CategorizationType categorizedClass=[ML2Class|QualifiedName]
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//categorizationType=CategorizationType
		public Assignment getCategorizationTypeAssignment_4_0_0() { return cCategorizationTypeAssignment_4_0_0; }
		
		//CategorizationType
		public RuleCall getCategorizationTypeCategorizationTypeEnumRuleCall_4_0_0_0() { return cCategorizationTypeCategorizationTypeEnumRuleCall_4_0_0_0; }
		
		//categorizedClass=[ML2Class|QualifiedName]
		public Assignment getCategorizedClassAssignment_4_0_1() { return cCategorizedClassAssignment_4_0_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getCategorizedClassML2ClassCrossReference_4_0_1_0() { return cCategorizedClassML2ClassCrossReference_4_0_1_0; }
		
		//QualifiedName
		public RuleCall getCategorizedClassML2ClassQualifiedNameParserRuleCall_4_0_1_0_1() { return cCategorizedClassML2ClassQualifiedNameParserRuleCall_4_0_1_0_1; }
		
		//'isPowertypeOf' powertypeOf=[ML2Class|QualifiedName]
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'isPowertypeOf'
		public Keyword getIsPowertypeOfKeyword_4_1_0() { return cIsPowertypeOfKeyword_4_1_0; }
		
		//powertypeOf=[ML2Class|QualifiedName]
		public Assignment getPowertypeOfAssignment_4_1_1() { return cPowertypeOfAssignment_4_1_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getPowertypeOfML2ClassCrossReference_4_1_1_0() { return cPowertypeOfML2ClassCrossReference_4_1_1_0; }
		
		//QualifiedName
		public RuleCall getPowertypeOfML2ClassQualifiedNameParserRuleCall_4_1_1_0_1() { return cPowertypeOfML2ClassQualifiedNameParserRuleCall_4_1_1_0_1; }
	}
	public class FOClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.FOClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//FOClass:
		//	'class' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'class' name=ID
		public Group getGroup() { return cGroup; }
		
		//'class'
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//DataType:
		//	'datatype' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'datatype' name=ID
		public Group getGroup() { return cGroup; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class HOClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.HOClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOrderAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOrderINTTerminalRuleCall_1_0 = (RuleCall)cOrderAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//HOClass:
		//	'order' order=INT 'class' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'order' order=INT 'class' name=ID
		public Group getGroup() { return cGroup; }
		
		//'order'
		public Keyword getOrderKeyword_0() { return cOrderKeyword_0; }
		
		//order=INT
		public Assignment getOrderAssignment_1() { return cOrderAssignment_1; }
		
		//INT
		public RuleCall getOrderINTTerminalRuleCall_1_0() { return cOrderINTTerminalRuleCall_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}
	public class OrderlessClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.OrderlessClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderlessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//OrderlessClass:
		//	'orderless' 'class' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'orderless' 'class' name=ID
		public Group getGroup() { return cGroup; }
		
		//'orderless'
		public Keyword getOrderlessKeyword_0() { return cOrderlessKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class GeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.GeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cIsDisjointAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cIsDisjointDisjointKeyword_0_0_0 = (Keyword)cIsDisjointAssignment_0_0.eContents().get(0);
		private final Assignment cIsCompleteAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final Keyword cIsCompleteCompleteKeyword_0_1_0 = (Keyword)cIsCompleteAssignment_0_1.eContents().get(0);
		private final Keyword cGensetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cGeneralKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGeneralAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cGeneralML2ClassCrossReference_4_0 = (CrossReference)cGeneralAssignment_4.eContents().get(0);
		private final RuleCall cGeneralML2ClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cGeneralML2ClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCategorizerKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCategorizerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cCategorizerML2ClassCrossReference_5_1_0 = (CrossReference)cCategorizerAssignment_5_1.eContents().get(0);
		private final RuleCall cCategorizerML2ClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cCategorizerML2ClassCrossReference_5_1_0.eContents().get(1);
		private final Keyword cSpecificsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSpecificsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSpecificsML2ClassCrossReference_7_0 = (CrossReference)cSpecificsAssignment_7.eContents().get(0);
		private final RuleCall cSpecificsML2ClassQualifiedNameParserRuleCall_7_0_1 = (RuleCall)cSpecificsML2ClassCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cSpecificsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cSpecificsML2ClassCrossReference_8_1_0 = (CrossReference)cSpecificsAssignment_8_1.eContents().get(0);
		private final RuleCall cSpecificsML2ClassQualifiedNameParserRuleCall_8_1_0_1 = (RuleCall)cSpecificsML2ClassCrossReference_8_1_0.eContents().get(1);
		
		//GeneralizationSet:
		//	(isDisjoint?='disjoint'? & isComplete?='complete'?) 'genset' name=ID?
		//	'general' general=[ML2Class|QualifiedName] ('categorizer' categorizer=[ML2Class|QualifiedName])?
		//	'specifics' specifics+=[ML2Class|QualifiedName] (',' specifics+=[ML2Class|QualifiedName])+;
		@Override public ParserRule getRule() { return rule; }
		
		//(isDisjoint?='disjoint'? & isComplete?='complete'?) 'genset' name=ID? 'general' general=[ML2Class|QualifiedName]
		//('categorizer' categorizer=[ML2Class|QualifiedName])? 'specifics' specifics+=[ML2Class|QualifiedName] (','
		//specifics+=[ML2Class|QualifiedName])+
		public Group getGroup() { return cGroup; }
		
		//isDisjoint?='disjoint'? & isComplete?='complete'?
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//isDisjoint?='disjoint'?
		public Assignment getIsDisjointAssignment_0_0() { return cIsDisjointAssignment_0_0; }
		
		//'disjoint'
		public Keyword getIsDisjointDisjointKeyword_0_0_0() { return cIsDisjointDisjointKeyword_0_0_0; }
		
		//isComplete?='complete'?
		public Assignment getIsCompleteAssignment_0_1() { return cIsCompleteAssignment_0_1; }
		
		//'complete'
		public Keyword getIsCompleteCompleteKeyword_0_1_0() { return cIsCompleteCompleteKeyword_0_1_0; }
		
		//'genset'
		public Keyword getGensetKeyword_1() { return cGensetKeyword_1; }
		
		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'general'
		public Keyword getGeneralKeyword_3() { return cGeneralKeyword_3; }
		
		//general=[ML2Class|QualifiedName]
		public Assignment getGeneralAssignment_4() { return cGeneralAssignment_4; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getGeneralML2ClassCrossReference_4_0() { return cGeneralML2ClassCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getGeneralML2ClassQualifiedNameParserRuleCall_4_0_1() { return cGeneralML2ClassQualifiedNameParserRuleCall_4_0_1; }
		
		//('categorizer' categorizer=[ML2Class|QualifiedName])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'categorizer'
		public Keyword getCategorizerKeyword_5_0() { return cCategorizerKeyword_5_0; }
		
		//categorizer=[ML2Class|QualifiedName]
		public Assignment getCategorizerAssignment_5_1() { return cCategorizerAssignment_5_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getCategorizerML2ClassCrossReference_5_1_0() { return cCategorizerML2ClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getCategorizerML2ClassQualifiedNameParserRuleCall_5_1_0_1() { return cCategorizerML2ClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//'specifics'
		public Keyword getSpecificsKeyword_6() { return cSpecificsKeyword_6; }
		
		//specifics+=[ML2Class|QualifiedName]
		public Assignment getSpecificsAssignment_7() { return cSpecificsAssignment_7; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSpecificsML2ClassCrossReference_7_0() { return cSpecificsML2ClassCrossReference_7_0; }
		
		//QualifiedName
		public RuleCall getSpecificsML2ClassQualifiedNameParserRuleCall_7_0_1() { return cSpecificsML2ClassQualifiedNameParserRuleCall_7_0_1; }
		
		//(',' specifics+=[ML2Class|QualifiedName])+
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//specifics+=[ML2Class|QualifiedName]
		public Assignment getSpecificsAssignment_8_1() { return cSpecificsAssignment_8_1; }
		
		//[ML2Class|QualifiedName]
		public CrossReference getSpecificsML2ClassCrossReference_8_1_0() { return cSpecificsML2ClassCrossReference_8_1_0; }
		
		//QualifiedName
		public RuleCall getSpecificsML2ClassQualifiedNameParserRuleCall_8_1_0_1() { return cSpecificsML2ClassQualifiedNameParserRuleCall_8_1_0_1; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Feature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommonFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRegularityFeatureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Feature:
		//	CommonFeature | RegularityFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//CommonFeature | RegularityFeature
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CommonFeature
		public RuleCall getCommonFeatureParserRuleCall_0() { return cCommonFeatureParserRuleCall_0; }
		
		//RegularityFeature
		public RuleCall getRegularityFeatureParserRuleCall_1() { return cRegularityFeatureParserRuleCall_1; }
	}
	public class CommonFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.CommonFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CommonFeature Feature:
		//	Attribute | Reference;
		@Override public ParserRule getRule() { return rule; }
		
		//Attribute | Reference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }
		
		//Reference
		public RuleCall getReferenceParserRuleCall_1() { return cReferenceParserRuleCall_1; }
	}
	public class RegularityFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularityAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRegularityReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RegularityFeature Feature:
		//	RegularityAttribute | RegularityReference;
		@Override public ParserRule getRule() { return rule; }
		
		//RegularityAttribute | RegularityReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RegularityAttribute
		public RuleCall getRegularityAttributeParserRuleCall_0() { return cRegularityAttributeParserRuleCall_0; }
		
		//RegularityReference
		public RuleCall getRegularityReferenceParserRuleCall_1() { return cRegularityReferenceParserRuleCall_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0 = (RuleCall)cLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0 = (RuleCall)cUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cPrimitiveTypeAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeEnumRuleCall_4_0_0 = (RuleCall)cPrimitiveTypeAssignment_4_0.eContents().get(0);
		private final Assignment c_typeAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference c_typeDataTypeCrossReference_4_1_0 = (CrossReference)c_typeAssignment_4_1.eContents().get(0);
		private final RuleCall c_typeDataTypeQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)c_typeDataTypeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubsetsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_5_1_0 = (CrossReference)cSubsetOfAssignment_5_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_5_2_1_0 = (CrossReference)cSubsetOfAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_5_2_1_0.eContents().get(1);
		
		//Attribute:
		//	'att'? name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')? (primitiveType=PrimitiveType |
		//	_type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//	subsetOf+=[Attribute|QualifiedName])*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'att'? name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')? (primitiveType=PrimitiveType |
		//_type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup() { return cGroup; }
		
		//'att'?
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//lowerBound=ELEMENTBOUND
		public Assignment getLowerBoundAssignment_3_1() { return cLowerBoundAssignment_3_1; }
		
		//ELEMENTBOUND
		public RuleCall getLowerBoundELEMENTBOUNDParserRuleCall_3_1_0() { return cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }
		
		//upperBound=ELEMENTBOUND
		public Assignment getUpperBoundAssignment_3_3() { return cUpperBoundAssignment_3_3; }
		
		//ELEMENTBOUND
		public RuleCall getUpperBoundELEMENTBOUNDParserRuleCall_3_3_0() { return cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//primitiveType=PrimitiveType | _type=[DataType|QualifiedName]
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//primitiveType=PrimitiveType
		public Assignment getPrimitiveTypeAssignment_4_0() { return cPrimitiveTypeAssignment_4_0; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypePrimitiveTypeEnumRuleCall_4_0_0() { return cPrimitiveTypePrimitiveTypeEnumRuleCall_4_0_0; }
		
		//_type=[DataType|QualifiedName]
		public Assignment get_typeAssignment_4_1() { return c_typeAssignment_4_1; }
		
		//[DataType|QualifiedName]
		public CrossReference get_typeDataTypeCrossReference_4_1_0() { return c_typeDataTypeCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall get_typeDataTypeQualifiedNameParserRuleCall_4_1_0_1() { return c_typeDataTypeQualifiedNameParserRuleCall_4_1_0_1; }
		
		//('subsets' subsetOf+=[Attribute|QualifiedName] (',' subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_5_0() { return cSubsetsKeyword_5_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_5_1() { return cSubsetOfAssignment_5_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_5_1_0() { return cSubsetOfAttributeCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_5_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' subsetOf+=[Attribute|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_5_2_1() { return cSubsetOfAssignment_5_2_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_5_2_1_0() { return cSubsetOfAttributeCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_5_2_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_5_2_1_0_1; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0 = (RuleCall)cLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0 = (RuleCall)cUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment c_typeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference c_typeML2ClassCrossReference_4_0 = (CrossReference)c_typeAssignment_4.eContents().get(0);
		private final RuleCall c_typeML2ClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)c_typeML2ClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubsetsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_5_1_0 = (CrossReference)cSubsetOfAssignment_5_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_5_2_1_0 = (CrossReference)cSubsetOfAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_5_2_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cIsOppositeToKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOppositeToAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cOppositeToReferenceCrossReference_6_1_0 = (CrossReference)cOppositeToAssignment_6_1.eContents().get(0);
		private final RuleCall cOppositeToReferenceQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cOppositeToReferenceCrossReference_6_1_0.eContents().get(1);
		
		//Reference:
		//	'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')? _type=[ML2Class|QualifiedName]
		//	('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo'
		//	oppositeTo=[Reference|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')? _type=[ML2Class|QualifiedName]
		//('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo'
		//oppositeTo=[Reference|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//lowerBound=ELEMENTBOUND
		public Assignment getLowerBoundAssignment_3_1() { return cLowerBoundAssignment_3_1; }
		
		//ELEMENTBOUND
		public RuleCall getLowerBoundELEMENTBOUNDParserRuleCall_3_1_0() { return cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }
		
		//upperBound=ELEMENTBOUND
		public Assignment getUpperBoundAssignment_3_3() { return cUpperBoundAssignment_3_3; }
		
		//ELEMENTBOUND
		public RuleCall getUpperBoundELEMENTBOUNDParserRuleCall_3_3_0() { return cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//_type=[ML2Class|QualifiedName]
		public Assignment get_typeAssignment_4() { return c_typeAssignment_4; }
		
		//[ML2Class|QualifiedName]
		public CrossReference get_typeML2ClassCrossReference_4_0() { return c_typeML2ClassCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall get_typeML2ClassQualifiedNameParserRuleCall_4_0_1() { return c_typeML2ClassQualifiedNameParserRuleCall_4_0_1; }
		
		//('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_5_0() { return cSubsetsKeyword_5_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_5_1() { return cSubsetOfAssignment_5_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_5_1_0() { return cSubsetOfReferenceCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_5_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' subsetOf+=[Reference|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_5_2_1() { return cSubsetOfAssignment_5_2_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_5_2_1_0() { return cSubsetOfReferenceCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_5_2_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'isOppositeTo'
		public Keyword getIsOppositeToKeyword_6_0() { return cIsOppositeToKeyword_6_0; }
		
		//oppositeTo=[Reference|QualifiedName]
		public Assignment getOppositeToAssignment_6_1() { return cOppositeToAssignment_6_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getOppositeToReferenceCrossReference_6_1_0() { return cOppositeToReferenceCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getOppositeToReferenceQualifiedNameParserRuleCall_6_1_0_1() { return cOppositeToReferenceQualifiedNameParserRuleCall_6_1_0_1; }
	}
	public class RegularityAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegularityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAttKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerBoundELEMENTBOUNDParserRuleCall_4_1_0 = (RuleCall)cLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cUpperBoundELEMENTBOUNDParserRuleCall_4_3_0 = (RuleCall)cUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cPrimitiveTypeAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0 = (RuleCall)cPrimitiveTypeAssignment_5_0.eContents().get(0);
		private final Assignment c_typeAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final CrossReference c_typeDataTypeCrossReference_5_1_0 = (CrossReference)c_typeAssignment_5_1.eContents().get(0);
		private final RuleCall c_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)c_typeDataTypeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubsetsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_6_1_0 = (CrossReference)cSubsetOfAssignment_6_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_6_2_1_0 = (CrossReference)cSubsetOfAssignment_6_2_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_6_2_1_0.eContents().get(1);
		private final Assignment cRegularityTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0 = (RuleCall)cRegularityTypeAssignment_7.eContents().get(0);
		private final Assignment cRegulatedFeatureAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cRegulatedFeatureFeatureCrossReference_8_0 = (CrossReference)cRegulatedFeatureAssignment_8.eContents().get(0);
		private final RuleCall cRegulatedFeatureFeatureQualifiedNameParserRuleCall_8_0_1 = (RuleCall)cRegulatedFeatureFeatureCrossReference_8_0.eContents().get(1);
		
		//RegularityAttribute Attribute:
		//	'regularity' 'att'? name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//	(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//	subsetOf+=[Attribute|QualifiedName])*)?
		//	regularityType=RegularityFeatureType regulatedFeature=[Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'regularity' 'att'? name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//subsetOf+=[Attribute|QualifiedName])*)? regularityType=RegularityFeatureType regulatedFeature=[Feature|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'regularity'
		public Keyword getRegularityKeyword_0() { return cRegularityKeyword_0; }
		
		//'att'?
		public Keyword getAttKeyword_1() { return cAttKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//lowerBound=ELEMENTBOUND
		public Assignment getLowerBoundAssignment_4_1() { return cLowerBoundAssignment_4_1; }
		
		//ELEMENTBOUND
		public RuleCall getLowerBoundELEMENTBOUNDParserRuleCall_4_1_0() { return cLowerBoundELEMENTBOUNDParserRuleCall_4_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }
		
		//upperBound=ELEMENTBOUND
		public Assignment getUpperBoundAssignment_4_3() { return cUpperBoundAssignment_4_3; }
		
		//ELEMENTBOUND
		public RuleCall getUpperBoundELEMENTBOUNDParserRuleCall_4_3_0() { return cUpperBoundELEMENTBOUNDParserRuleCall_4_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
		
		//primitiveType=PrimitiveType | _type=[DataType|QualifiedName]
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//primitiveType=PrimitiveType
		public Assignment getPrimitiveTypeAssignment_5_0() { return cPrimitiveTypeAssignment_5_0; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0() { return cPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0; }
		
		//_type=[DataType|QualifiedName]
		public Assignment get_typeAssignment_5_1() { return c_typeAssignment_5_1; }
		
		//[DataType|QualifiedName]
		public CrossReference get_typeDataTypeCrossReference_5_1_0() { return c_typeDataTypeCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall get_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1() { return c_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1; }
		
		//('subsets' subsetOf+=[Attribute|QualifiedName] (',' subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_6_0() { return cSubsetsKeyword_6_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_6_1() { return cSubsetOfAssignment_6_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_6_1_0() { return cSubsetOfAttributeCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1; }
		
		//(',' subsetOf+=[Attribute|QualifiedName])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_6_2_1() { return cSubsetOfAssignment_6_2_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_6_2_1_0() { return cSubsetOfAttributeCrossReference_6_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1; }
		
		//regularityType=RegularityFeatureType
		public Assignment getRegularityTypeAssignment_7() { return cRegularityTypeAssignment_7; }
		
		//RegularityFeatureType
		public RuleCall getRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0() { return cRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0; }
		
		//regulatedFeature=[Feature|QualifiedName]
		public Assignment getRegulatedFeatureAssignment_8() { return cRegulatedFeatureAssignment_8; }
		
		//[Feature|QualifiedName]
		public CrossReference getRegulatedFeatureFeatureCrossReference_8_0() { return cRegulatedFeatureFeatureCrossReference_8_0; }
		
		//QualifiedName
		public RuleCall getRegulatedFeatureFeatureQualifiedNameParserRuleCall_8_0_1() { return cRegulatedFeatureFeatureQualifiedNameParserRuleCall_8_0_1; }
	}
	public class RegularityReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegularityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerBoundELEMENTBOUNDParserRuleCall_4_1_0 = (RuleCall)cLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cUpperBoundELEMENTBOUNDParserRuleCall_4_3_0 = (RuleCall)cUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Assignment c_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference c_typeML2ClassCrossReference_5_0 = (CrossReference)c_typeAssignment_5.eContents().get(0);
		private final RuleCall c_typeML2ClassQualifiedNameParserRuleCall_5_0_1 = (RuleCall)c_typeML2ClassCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubsetsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_6_1_0 = (CrossReference)cSubsetOfAssignment_6_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_6_2_1_0 = (CrossReference)cSubsetOfAssignment_6_2_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_6_2_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIsOppositeToKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOppositeToAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cOppositeToReferenceCrossReference_7_1_0 = (CrossReference)cOppositeToAssignment_7_1.eContents().get(0);
		private final RuleCall cOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cOppositeToReferenceCrossReference_7_1_0.eContents().get(1);
		private final Assignment cRegularityTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0 = (RuleCall)cRegularityTypeAssignment_8.eContents().get(0);
		private final Assignment cRegulatedFeatureAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cRegulatedFeatureFeatureCrossReference_9_0 = (CrossReference)cRegulatedFeatureAssignment_9.eContents().get(0);
		private final RuleCall cRegulatedFeatureFeatureQualifiedNameParserRuleCall_9_0_1 = (RuleCall)cRegulatedFeatureFeatureCrossReference_9_0.eContents().get(1);
		
		//RegularityReference Reference:
		//	'regularity' 'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//	_type=[ML2Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
		//	subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		//	regularityType=RegularityFeatureType regulatedFeature=[Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'regularity' 'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//_type=[ML2Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
		//subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		//regularityType=RegularityFeatureType regulatedFeature=[Feature|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'regularity'
		public Keyword getRegularityKeyword_0() { return cRegularityKeyword_0; }
		
		//'ref'
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//lowerBound=ELEMENTBOUND
		public Assignment getLowerBoundAssignment_4_1() { return cLowerBoundAssignment_4_1; }
		
		//ELEMENTBOUND
		public RuleCall getLowerBoundELEMENTBOUNDParserRuleCall_4_1_0() { return cLowerBoundELEMENTBOUNDParserRuleCall_4_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }
		
		//upperBound=ELEMENTBOUND
		public Assignment getUpperBoundAssignment_4_3() { return cUpperBoundAssignment_4_3; }
		
		//ELEMENTBOUND
		public RuleCall getUpperBoundELEMENTBOUNDParserRuleCall_4_3_0() { return cUpperBoundELEMENTBOUNDParserRuleCall_4_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
		
		//_type=[ML2Class|QualifiedName]
		public Assignment get_typeAssignment_5() { return c_typeAssignment_5; }
		
		//[ML2Class|QualifiedName]
		public CrossReference get_typeML2ClassCrossReference_5_0() { return c_typeML2ClassCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall get_typeML2ClassQualifiedNameParserRuleCall_5_0_1() { return c_typeML2ClassQualifiedNameParserRuleCall_5_0_1; }
		
		//('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_6_0() { return cSubsetsKeyword_6_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_6_1() { return cSubsetOfAssignment_6_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_6_1_0() { return cSubsetOfReferenceCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1; }
		
		//(',' subsetOf+=[Reference|QualifiedName])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_6_2_1() { return cSubsetOfAssignment_6_2_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_6_2_1_0() { return cSubsetOfReferenceCrossReference_6_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1; }
		
		//('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'isOppositeTo'
		public Keyword getIsOppositeToKeyword_7_0() { return cIsOppositeToKeyword_7_0; }
		
		//oppositeTo=[Reference|QualifiedName]
		public Assignment getOppositeToAssignment_7_1() { return cOppositeToAssignment_7_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getOppositeToReferenceCrossReference_7_1_0() { return cOppositeToReferenceCrossReference_7_1_0; }
		
		//QualifiedName
		public RuleCall getOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1() { return cOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1; }
		
		//regularityType=RegularityFeatureType
		public Assignment getRegularityTypeAssignment_8() { return cRegularityTypeAssignment_8; }
		
		//RegularityFeatureType
		public RuleCall getRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0() { return cRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0; }
		
		//regulatedFeature=[Feature|QualifiedName]
		public Assignment getRegulatedFeatureAssignment_9() { return cRegulatedFeatureAssignment_9; }
		
		//[Feature|QualifiedName]
		public CrossReference getRegulatedFeatureFeatureCrossReference_9_0() { return cRegulatedFeatureFeatureCrossReference_9_0; }
		
		//QualifiedName
		public RuleCall getRegulatedFeatureFeatureQualifiedNameParserRuleCall_9_0_1() { return cRegulatedFeatureFeatureQualifiedNameParserRuleCall_9_0_1; }
	}
	public class ELEMENTBOUNDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ELEMENTBOUND ecore::EInt:
		//	'*' | INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class FeatureAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSingleAttributeAssignmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultipleAttributeAssignmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferenceAssignmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FeatureAssignment:
		//	SingleAttributeAssignment | MultipleAttributeAssignment | ReferenceAssignment;
		@Override public ParserRule getRule() { return rule; }
		
		//SingleAttributeAssignment | MultipleAttributeAssignment | ReferenceAssignment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SingleAttributeAssignment
		public RuleCall getSingleAttributeAssignmentParserRuleCall_0() { return cSingleAttributeAssignmentParserRuleCall_0; }
		
		//MultipleAttributeAssignment
		public RuleCall getMultipleAttributeAssignmentParserRuleCall_1() { return cMultipleAttributeAssignmentParserRuleCall_1; }
		
		//ReferenceAssignment
		public RuleCall getReferenceAssignmentParserRuleCall_2() { return cReferenceAssignmentParserRuleCall_2; }
	}
	public class SingleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SingleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cIndividualAssignmentsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final CrossReference cIndividualAssignmentsIndividualCrossReference_3_0_0 = (CrossReference)cIndividualAssignmentsAssignment_3_0.eContents().get(0);
		private final RuleCall cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_3_0_0_1 = (RuleCall)cIndividualAssignmentsIndividualCrossReference_3_0_0.eContents().get(1);
		private final Assignment cUnnamedIndividualAssignmentsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_3_1_0 = (RuleCall)cUnnamedIndividualAssignmentsAssignment_3_1.eContents().get(0);
		private final Assignment cLiteralAssignmentsAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cLiteralAssignmentsLiteralParserRuleCall_3_2_0 = (RuleCall)cLiteralAssignmentsAssignment_3_2.eContents().get(0);
		
		//SingleAttributeAssignment AttributeAssignment:
		//	'att'? attribute=[Attribute|QualifiedName] '=' (individualAssignments+=[Individual|QualifiedName] |
		//	unnamedIndividualAssignments+=UnnamedIndividual
		//	| literalAssignments+=Literal);
		@Override public ParserRule getRule() { return rule; }
		
		//'att'? attribute=[Attribute|QualifiedName] '=' (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual | literalAssignments+=Literal)
		public Group getGroup() { return cGroup; }
		
		//'att'?
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual |
		//literalAssignments+=Literal
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//individualAssignments+=[Individual|QualifiedName]
		public Assignment getIndividualAssignmentsAssignment_3_0() { return cIndividualAssignmentsAssignment_3_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getIndividualAssignmentsIndividualCrossReference_3_0_0() { return cIndividualAssignmentsIndividualCrossReference_3_0_0; }
		
		//QualifiedName
		public RuleCall getIndividualAssignmentsIndividualQualifiedNameParserRuleCall_3_0_0_1() { return cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_3_0_0_1; }
		
		//unnamedIndividualAssignments+=UnnamedIndividual
		public Assignment getUnnamedIndividualAssignmentsAssignment_3_1() { return cUnnamedIndividualAssignmentsAssignment_3_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_3_1_0() { return cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_3_1_0; }
		
		//literalAssignments+=Literal
		public Assignment getLiteralAssignmentsAssignment_3_2() { return cLiteralAssignmentsAssignment_3_2; }
		
		//Literal
		public RuleCall getLiteralAssignmentsLiteralParserRuleCall_3_2_0() { return cLiteralAssignmentsLiteralParserRuleCall_3_2_0; }
	}
	public class MultipleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.MultipleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cLiteralAssignmentsAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cLiteralAssignmentsLiteralParserRuleCall_4_0_0_0 = (RuleCall)cLiteralAssignmentsAssignment_4_0_0.eContents().get(0);
		private final Group cGroup_4_0_1 = (Group)cGroup_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_0_1_0 = (Keyword)cGroup_4_0_1.eContents().get(0);
		private final Assignment cLiteralAssignmentsAssignment_4_0_1_1 = (Assignment)cGroup_4_0_1.eContents().get(1);
		private final RuleCall cLiteralAssignmentsLiteralParserRuleCall_4_0_1_1_0 = (RuleCall)cLiteralAssignmentsAssignment_4_0_1_1.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Alternatives cAlternatives_4_1_0 = (Alternatives)cGroup_4_1.eContents().get(0);
		private final Assignment cIndividualAssignmentsAssignment_4_1_0_0 = (Assignment)cAlternatives_4_1_0.eContents().get(0);
		private final CrossReference cIndividualAssignmentsIndividualCrossReference_4_1_0_0_0 = (CrossReference)cIndividualAssignmentsAssignment_4_1_0_0.eContents().get(0);
		private final RuleCall cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_4_1_0_0_0_1 = (RuleCall)cIndividualAssignmentsIndividualCrossReference_4_1_0_0_0.eContents().get(1);
		private final Assignment cUnnamedIndividualAssignmentsAssignment_4_1_0_1 = (Assignment)cAlternatives_4_1_0.eContents().get(1);
		private final RuleCall cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_0_1_0 = (RuleCall)cUnnamedIndividualAssignmentsAssignment_4_1_0_1.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cGroup_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Alternatives cAlternatives_4_1_1_1 = (Alternatives)cGroup_4_1_1.eContents().get(1);
		private final Assignment cIndividualAssignmentsAssignment_4_1_1_1_0 = (Assignment)cAlternatives_4_1_1_1.eContents().get(0);
		private final CrossReference cIndividualAssignmentsIndividualCrossReference_4_1_1_1_0_0 = (CrossReference)cIndividualAssignmentsAssignment_4_1_1_1_0.eContents().get(0);
		private final RuleCall cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_4_1_1_1_0_0_1 = (RuleCall)cIndividualAssignmentsIndividualCrossReference_4_1_1_1_0_0.eContents().get(1);
		private final Assignment cUnnamedIndividualAssignmentsAssignment_4_1_1_1_1 = (Assignment)cAlternatives_4_1_1_1.eContents().get(1);
		private final RuleCall cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_1_1_1_0 = (RuleCall)cUnnamedIndividualAssignmentsAssignment_4_1_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MultipleAttributeAssignment AttributeAssignment:
		//	'att'? attribute=[Attribute|QualifiedName] '=' '{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* |
		//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
		//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'att'? attribute=[Attribute|QualifiedName] '=' '{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* |
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*)? '}'
		public Group getGroup() { return cGroup; }
		
		//'att'?
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(literalAssignments+=Literal (',' literalAssignments+=Literal)* | (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual) (',' (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual))*)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//literalAssignments+=Literal (',' literalAssignments+=Literal)*
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//literalAssignments+=Literal
		public Assignment getLiteralAssignmentsAssignment_4_0_0() { return cLiteralAssignmentsAssignment_4_0_0; }
		
		//Literal
		public RuleCall getLiteralAssignmentsLiteralParserRuleCall_4_0_0_0() { return cLiteralAssignmentsLiteralParserRuleCall_4_0_0_0; }
		
		//(',' literalAssignments+=Literal)*
		public Group getGroup_4_0_1() { return cGroup_4_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_0_1_0() { return cCommaKeyword_4_0_1_0; }
		
		//literalAssignments+=Literal
		public Assignment getLiteralAssignmentsAssignment_4_0_1_1() { return cLiteralAssignmentsAssignment_4_0_1_1; }
		
		//Literal
		public RuleCall getLiteralAssignmentsLiteralParserRuleCall_4_0_1_1_0() { return cLiteralAssignmentsLiteralParserRuleCall_4_0_1_1_0; }
		
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual
		public Alternatives getAlternatives_4_1_0() { return cAlternatives_4_1_0; }
		
		//individualAssignments+=[Individual|QualifiedName]
		public Assignment getIndividualAssignmentsAssignment_4_1_0_0() { return cIndividualAssignmentsAssignment_4_1_0_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getIndividualAssignmentsIndividualCrossReference_4_1_0_0_0() { return cIndividualAssignmentsIndividualCrossReference_4_1_0_0_0; }
		
		//QualifiedName
		public RuleCall getIndividualAssignmentsIndividualQualifiedNameParserRuleCall_4_1_0_0_0_1() { return cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_4_1_0_0_0_1; }
		
		//unnamedIndividualAssignments+=UnnamedIndividual
		public Assignment getUnnamedIndividualAssignmentsAssignment_4_1_0_1() { return cUnnamedIndividualAssignmentsAssignment_4_1_0_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_0_1_0() { return cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_0_1_0; }
		
		//(',' (individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//','
		public Keyword getCommaKeyword_4_1_1_0() { return cCommaKeyword_4_1_1_0; }
		
		//individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual
		public Alternatives getAlternatives_4_1_1_1() { return cAlternatives_4_1_1_1; }
		
		//individualAssignments+=[Individual|QualifiedName]
		public Assignment getIndividualAssignmentsAssignment_4_1_1_1_0() { return cIndividualAssignmentsAssignment_4_1_1_1_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getIndividualAssignmentsIndividualCrossReference_4_1_1_1_0_0() { return cIndividualAssignmentsIndividualCrossReference_4_1_1_1_0_0; }
		
		//QualifiedName
		public RuleCall getIndividualAssignmentsIndividualQualifiedNameParserRuleCall_4_1_1_1_0_0_1() { return cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_4_1_1_1_0_0_1; }
		
		//unnamedIndividualAssignments+=UnnamedIndividual
		public Assignment getUnnamedIndividualAssignmentsAssignment_4_1_1_1_1() { return cUnnamedIndividualAssignmentsAssignment_4_1_1_1_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_1_1_1_0() { return cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ReferenceAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ReferenceAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceReferenceCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceReferenceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cReferenceReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cAssignmentsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final CrossReference cAssignmentsEntityDeclarationCrossReference_3_0_0 = (CrossReference)cAssignmentsAssignment_3_0.eContents().get(0);
		private final RuleCall cAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_0_0_1 = (RuleCall)cAssignmentsEntityDeclarationCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAssignmentsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cAssignmentsEntityDeclarationCrossReference_3_1_1_0 = (CrossReference)cAssignmentsAssignment_3_1_1.eContents().get(0);
		private final RuleCall cAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_1_1_0_1 = (RuleCall)cAssignmentsEntityDeclarationCrossReference_3_1_1_0.eContents().get(1);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cCommaKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cAssignmentsAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final CrossReference cAssignmentsEntityDeclarationCrossReference_3_1_2_1_0 = (CrossReference)cAssignmentsAssignment_3_1_2_1.eContents().get(0);
		private final RuleCall cAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_1_2_1_0_1 = (RuleCall)cAssignmentsEntityDeclarationCrossReference_3_1_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3_1_3 = (Keyword)cGroup_3_1.eContents().get(3);
		
		//ReferenceAssignment:
		//	'ref' reference=[Reference|QualifiedName] '=' (assignments+=[EntityDeclaration|QualifiedName] | '{'
		//	assignments+=[EntityDeclaration|QualifiedName] (',' assignments+=[EntityDeclaration|QualifiedName])* '}');
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' reference=[Reference|QualifiedName] '=' (assignments+=[EntityDeclaration|QualifiedName] | '{'
		//assignments+=[EntityDeclaration|QualifiedName] (',' assignments+=[EntityDeclaration|QualifiedName])* '}')
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//reference=[Reference|QualifiedName]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getReferenceReferenceCrossReference_1_0() { return cReferenceReferenceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getReferenceReferenceQualifiedNameParserRuleCall_1_0_1() { return cReferenceReferenceQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//assignments+=[EntityDeclaration|QualifiedName] | '{' assignments+=[EntityDeclaration|QualifiedName] (','
		//assignments+=[EntityDeclaration|QualifiedName])* '}'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//assignments+=[EntityDeclaration|QualifiedName]
		public Assignment getAssignmentsAssignment_3_0() { return cAssignmentsAssignment_3_0; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getAssignmentsEntityDeclarationCrossReference_3_0_0() { return cAssignmentsEntityDeclarationCrossReference_3_0_0; }
		
		//QualifiedName
		public RuleCall getAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_0_0_1() { return cAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_0_0_1; }
		
		//'{' assignments+=[EntityDeclaration|QualifiedName] (',' assignments+=[EntityDeclaration|QualifiedName])* '}'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1_0() { return cLeftCurlyBracketKeyword_3_1_0; }
		
		//assignments+=[EntityDeclaration|QualifiedName]
		public Assignment getAssignmentsAssignment_3_1_1() { return cAssignmentsAssignment_3_1_1; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getAssignmentsEntityDeclarationCrossReference_3_1_1_0() { return cAssignmentsEntityDeclarationCrossReference_3_1_1_0; }
		
		//QualifiedName
		public RuleCall getAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_1_1_0_1() { return cAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_1_1_0_1; }
		
		//(',' assignments+=[EntityDeclaration|QualifiedName])*
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//','
		public Keyword getCommaKeyword_3_1_2_0() { return cCommaKeyword_3_1_2_0; }
		
		//assignments+=[EntityDeclaration|QualifiedName]
		public Assignment getAssignmentsAssignment_3_1_2_1() { return cAssignmentsAssignment_3_1_2_1; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getAssignmentsEntityDeclarationCrossReference_3_1_2_1_0() { return cAssignmentsEntityDeclarationCrossReference_3_1_2_1_0; }
		
		//QualifiedName
		public RuleCall getAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_1_2_1_0_1() { return cAssignmentsEntityDeclarationQualifiedNameParserRuleCall_3_1_2_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1_3() { return cRightCurlyBracketKeyword_3_1_3; }
	}
	public class LiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Literal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cML2StringParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cML2NumberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cML2BooleanParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Literal:
		//	ML2String | ML2Number | ML2Boolean;
		@Override public ParserRule getRule() { return rule; }
		
		//ML2String | ML2Number | ML2Boolean
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ML2String
		public RuleCall getML2StringParserRuleCall_0() { return cML2StringParserRuleCall_0; }
		
		//ML2Number
		public RuleCall getML2NumberParserRuleCall_1() { return cML2NumberParserRuleCall_1; }
		
		//ML2Boolean
		public RuleCall getML2BooleanParserRuleCall_2() { return cML2BooleanParserRuleCall_2; }
	}
	public class ML2StringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ML2String");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ML2String:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class ML2NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ML2Number");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNUMBERParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ML2Number:
		//	value=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NUMBER
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_0() { return cValueNUMBERParserRuleCall_0; }
	}
	public class ML2BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ML2Boolean");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEANParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ML2Boolean:
		//	value=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN
		public RuleCall getValueBOOLEANParserRuleCall_0() { return cValueBOOLEANParserRuleCall_0; }
	}
	public class BOOLEANElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.BOOLEAN");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BOOLEAN ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.NUMBER");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//NUMBER ecore::EDouble:
		//	'-'? INT ('.' INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT ('.' INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//('.' INT)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2_1() { return cINTTerminalRuleCall_2_1; }
	}
	public class UnnamedIndividualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIndividualAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAssignmentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0 = (RuleCall)cAssignmentsAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//UnnamedIndividual Individual:
		//	{Individual} '[' assignments+=SimpleAttributeAssignment* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{Individual} '[' assignments+=SimpleAttributeAssignment* ']'
		public Group getGroup() { return cGroup; }
		
		//{Individual}
		public Action getIndividualAction_0() { return cIndividualAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//assignments+=SimpleAttributeAssignment*
		public Assignment getAssignmentsAssignment_2() { return cAssignmentsAssignment_2; }
		
		//SimpleAttributeAssignment
		public RuleCall getAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0() { return cAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SimpleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SimpleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cIndividualAssignmentsAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cIndividualAssignmentsIndividualCrossReference_2_0_0 = (CrossReference)cIndividualAssignmentsAssignment_2_0.eContents().get(0);
		private final RuleCall cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_0_0_1 = (RuleCall)cIndividualAssignmentsIndividualCrossReference_2_0_0.eContents().get(1);
		private final Assignment cUnnamedIndividualAssignmentsAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_1_0 = (RuleCall)cUnnamedIndividualAssignmentsAssignment_2_1.eContents().get(0);
		private final Assignment cLiteralAssignmentsAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cLiteralAssignmentsLiteralParserRuleCall_2_2_0 = (RuleCall)cLiteralAssignmentsAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Alternatives cAlternatives_2_3_1 = (Alternatives)cGroup_2_3.eContents().get(1);
		private final Group cGroup_2_3_1_0 = (Group)cAlternatives_2_3_1.eContents().get(0);
		private final Assignment cLiteralAssignmentsAssignment_2_3_1_0_0 = (Assignment)cGroup_2_3_1_0.eContents().get(0);
		private final RuleCall cLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_0_0 = (RuleCall)cLiteralAssignmentsAssignment_2_3_1_0_0.eContents().get(0);
		private final Group cGroup_2_3_1_0_1 = (Group)cGroup_2_3_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_1_0_1_0 = (Keyword)cGroup_2_3_1_0_1.eContents().get(0);
		private final Assignment cLiteralAssignmentsAssignment_2_3_1_0_1_1 = (Assignment)cGroup_2_3_1_0_1.eContents().get(1);
		private final RuleCall cLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_1_1_0 = (RuleCall)cLiteralAssignmentsAssignment_2_3_1_0_1_1.eContents().get(0);
		private final Group cGroup_2_3_1_1 = (Group)cAlternatives_2_3_1.eContents().get(1);
		private final Alternatives cAlternatives_2_3_1_1_0 = (Alternatives)cGroup_2_3_1_1.eContents().get(0);
		private final Assignment cIndividualAssignmentsAssignment_2_3_1_1_0_0 = (Assignment)cAlternatives_2_3_1_1_0.eContents().get(0);
		private final CrossReference cIndividualAssignmentsIndividualCrossReference_2_3_1_1_0_0_0 = (CrossReference)cIndividualAssignmentsAssignment_2_3_1_1_0_0.eContents().get(0);
		private final RuleCall cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_3_1_1_0_0_0_1 = (RuleCall)cIndividualAssignmentsIndividualCrossReference_2_3_1_1_0_0_0.eContents().get(1);
		private final Assignment cUnnamedIndividualAssignmentsAssignment_2_3_1_1_0_1 = (Assignment)cAlternatives_2_3_1_1_0.eContents().get(1);
		private final RuleCall cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_0_1_0 = (RuleCall)cUnnamedIndividualAssignmentsAssignment_2_3_1_1_0_1.eContents().get(0);
		private final Group cGroup_2_3_1_1_1 = (Group)cGroup_2_3_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_1_1_1_0 = (Keyword)cGroup_2_3_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2_3_1_1_1_1 = (Alternatives)cGroup_2_3_1_1_1.eContents().get(1);
		private final Assignment cIndividualAssignmentsAssignment_2_3_1_1_1_1_0 = (Assignment)cAlternatives_2_3_1_1_1_1.eContents().get(0);
		private final CrossReference cIndividualAssignmentsIndividualCrossReference_2_3_1_1_1_1_0_0 = (CrossReference)cIndividualAssignmentsAssignment_2_3_1_1_1_1_0.eContents().get(0);
		private final RuleCall cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_3_1_1_1_1_0_0_1 = (RuleCall)cIndividualAssignmentsIndividualCrossReference_2_3_1_1_1_1_0_0.eContents().get(1);
		private final Assignment cUnnamedIndividualAssignmentsAssignment_2_3_1_1_1_1_1 = (Assignment)cAlternatives_2_3_1_1_1_1.eContents().get(1);
		private final RuleCall cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_1_1_1_0 = (RuleCall)cUnnamedIndividualAssignmentsAssignment_2_3_1_1_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		
		//SimpleAttributeAssignment AttributeAssignment:
		//	attribute=[Attribute|QualifiedName] '=' (individualAssignments+=[Individual|QualifiedName] |
		//	unnamedIndividualAssignments+=UnnamedIndividual
		//	| literalAssignments+=Literal
		//	| '{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* |
		//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
		//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*)? '}');
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|QualifiedName] '=' (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual | literalAssignments+=Literal | '{' (literalAssignments+=Literal (','
		//literalAssignments+=Literal)* | (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual) (',' (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual))*)? '}')
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual |
		//literalAssignments+=Literal | '{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* |
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*)? '}'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//individualAssignments+=[Individual|QualifiedName]
		public Assignment getIndividualAssignmentsAssignment_2_0() { return cIndividualAssignmentsAssignment_2_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getIndividualAssignmentsIndividualCrossReference_2_0_0() { return cIndividualAssignmentsIndividualCrossReference_2_0_0; }
		
		//QualifiedName
		public RuleCall getIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_0_0_1() { return cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_0_0_1; }
		
		//unnamedIndividualAssignments+=UnnamedIndividual
		public Assignment getUnnamedIndividualAssignmentsAssignment_2_1() { return cUnnamedIndividualAssignmentsAssignment_2_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_1_0() { return cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_1_0; }
		
		//literalAssignments+=Literal
		public Assignment getLiteralAssignmentsAssignment_2_2() { return cLiteralAssignmentsAssignment_2_2; }
		
		//Literal
		public RuleCall getLiteralAssignmentsLiteralParserRuleCall_2_2_0() { return cLiteralAssignmentsLiteralParserRuleCall_2_2_0; }
		
		//'{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* | (individualAssignments+=[Individual|QualifiedName]
		//| unnamedIndividualAssignments+=UnnamedIndividual) (',' (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual))*)? '}'
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_3_0() { return cLeftCurlyBracketKeyword_2_3_0; }
		
		//(literalAssignments+=Literal (',' literalAssignments+=Literal)* | (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual) (',' (individualAssignments+=[Individual|QualifiedName] |
		//unnamedIndividualAssignments+=UnnamedIndividual))*)?
		public Alternatives getAlternatives_2_3_1() { return cAlternatives_2_3_1; }
		
		//literalAssignments+=Literal (',' literalAssignments+=Literal)*
		public Group getGroup_2_3_1_0() { return cGroup_2_3_1_0; }
		
		//literalAssignments+=Literal
		public Assignment getLiteralAssignmentsAssignment_2_3_1_0_0() { return cLiteralAssignmentsAssignment_2_3_1_0_0; }
		
		//Literal
		public RuleCall getLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_0_0() { return cLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_0_0; }
		
		//(',' literalAssignments+=Literal)*
		public Group getGroup_2_3_1_0_1() { return cGroup_2_3_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_2_3_1_0_1_0() { return cCommaKeyword_2_3_1_0_1_0; }
		
		//literalAssignments+=Literal
		public Assignment getLiteralAssignmentsAssignment_2_3_1_0_1_1() { return cLiteralAssignmentsAssignment_2_3_1_0_1_1; }
		
		//Literal
		public RuleCall getLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_1_1_0() { return cLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_1_1_0; }
		
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
		//(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*
		public Group getGroup_2_3_1_1() { return cGroup_2_3_1_1; }
		
		//individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual
		public Alternatives getAlternatives_2_3_1_1_0() { return cAlternatives_2_3_1_1_0; }
		
		//individualAssignments+=[Individual|QualifiedName]
		public Assignment getIndividualAssignmentsAssignment_2_3_1_1_0_0() { return cIndividualAssignmentsAssignment_2_3_1_1_0_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getIndividualAssignmentsIndividualCrossReference_2_3_1_1_0_0_0() { return cIndividualAssignmentsIndividualCrossReference_2_3_1_1_0_0_0; }
		
		//QualifiedName
		public RuleCall getIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_3_1_1_0_0_0_1() { return cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_3_1_1_0_0_0_1; }
		
		//unnamedIndividualAssignments+=UnnamedIndividual
		public Assignment getUnnamedIndividualAssignmentsAssignment_2_3_1_1_0_1() { return cUnnamedIndividualAssignmentsAssignment_2_3_1_1_0_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_0_1_0() { return cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_0_1_0; }
		
		//(',' (individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*
		public Group getGroup_2_3_1_1_1() { return cGroup_2_3_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_3_1_1_1_0() { return cCommaKeyword_2_3_1_1_1_0; }
		
		//individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual
		public Alternatives getAlternatives_2_3_1_1_1_1() { return cAlternatives_2_3_1_1_1_1; }
		
		//individualAssignments+=[Individual|QualifiedName]
		public Assignment getIndividualAssignmentsAssignment_2_3_1_1_1_1_0() { return cIndividualAssignmentsAssignment_2_3_1_1_1_1_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getIndividualAssignmentsIndividualCrossReference_2_3_1_1_1_1_0_0() { return cIndividualAssignmentsIndividualCrossReference_2_3_1_1_1_1_0_0; }
		
		//QualifiedName
		public RuleCall getIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_3_1_1_1_1_0_0_1() { return cIndividualAssignmentsIndividualQualifiedNameParserRuleCall_2_3_1_1_1_1_0_0_1; }
		
		//unnamedIndividualAssignments+=UnnamedIndividual
		public Assignment getUnnamedIndividualAssignmentsAssignment_2_3_1_1_1_1_1() { return cUnnamedIndividualAssignmentsAssignment_2_3_1_1_1_1_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_1_1_1_0() { return cUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3_2() { return cRightCurlyBracketKeyword_2_3_2; }
	}
	
	public class CategorizationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.CategorizationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCATEGORIZEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCATEGORIZERCategorizesKeyword_0_0 = (Keyword)cCATEGORIZEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPLETE_CATEGORIZERCompleteCategorizesKeyword_1_0 = (Keyword)cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDISJOINT_CATEGORIZERDisjointCategorizesKeyword_2_0 = (Keyword)cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPARTITIONEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPARTITIONERPartitionsKeyword_3_0 = (Keyword)cPARTITIONEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum CategorizationType:
		//	CATEGORIZER="categorizes" | COMPLETE_CATEGORIZER="completeCategorizes" | DISJOINT_CATEGORIZER="disjointCategorizes" |
		//	PARTITIONER="partitions";
		public EnumRule getRule() { return rule; }
		
		//CATEGORIZER="categorizes" | COMPLETE_CATEGORIZER="completeCategorizes" | DISJOINT_CATEGORIZER="disjointCategorizes" |
		//PARTITIONER="partitions"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CATEGORIZER="categorizes"
		public EnumLiteralDeclaration getCATEGORIZEREnumLiteralDeclaration_0() { return cCATEGORIZEREnumLiteralDeclaration_0; }
		
		//"categorizes"
		public Keyword getCATEGORIZERCategorizesKeyword_0_0() { return cCATEGORIZERCategorizesKeyword_0_0; }
		
		//COMPLETE_CATEGORIZER="completeCategorizes"
		public EnumLiteralDeclaration getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1() { return cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1; }
		
		//"completeCategorizes"
		public Keyword getCOMPLETE_CATEGORIZERCompleteCategorizesKeyword_1_0() { return cCOMPLETE_CATEGORIZERCompleteCategorizesKeyword_1_0; }
		
		//DISJOINT_CATEGORIZER="disjointCategorizes"
		public EnumLiteralDeclaration getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2() { return cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2; }
		
		//"disjointCategorizes"
		public Keyword getDISJOINT_CATEGORIZERDisjointCategorizesKeyword_2_0() { return cDISJOINT_CATEGORIZERDisjointCategorizesKeyword_2_0; }
		
		//PARTITIONER="partitions"
		public EnumLiteralDeclaration getPARTITIONEREnumLiteralDeclaration_3() { return cPARTITIONEREnumLiteralDeclaration_3; }
		
		//"partitions"
		public Keyword getPARTITIONERPartitionsKeyword_3_0() { return cPARTITIONERPartitionsKeyword_3_0; }
	}
	public class PrimitiveTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.PrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGStringKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNUMBEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNUMBERNumberKeyword_1_0 = (Keyword)cNUMBEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOOLEANBooleanKeyword_2_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PrimitiveType:
		//	STRING="String" | NUMBER="Number" | BOOLEAN="Boolean";
		public EnumRule getRule() { return rule; }
		
		//STRING="String" | NUMBER="Number" | BOOLEAN="Boolean"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING="String"
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }
		
		//"String"
		public Keyword getSTRINGStringKeyword_0_0() { return cSTRINGStringKeyword_0_0; }
		
		//NUMBER="Number"
		public EnumLiteralDeclaration getNUMBEREnumLiteralDeclaration_1() { return cNUMBEREnumLiteralDeclaration_1; }
		
		//"Number"
		public Keyword getNUMBERNumberKeyword_1_0() { return cNUMBERNumberKeyword_1_0; }
		
		//BOOLEAN="Boolean"
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_2() { return cBOOLEANEnumLiteralDeclaration_2; }
		
		//"Boolean"
		public Keyword getBOOLEANBooleanKeyword_2_0() { return cBOOLEANBooleanKeyword_2_0; }
	}
	public class RegularityFeatureTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityFeatureType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDETERMINES_VALUEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDETERMINES_VALUEDeterminesValueKeyword_0_0 = (Keyword)cDETERMINES_VALUEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_TYPEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDETERMINES_TYPEDeterminesTypeKeyword_1_0 = (Keyword)cDETERMINES_TYPEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_MIN_VALUEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDETERMINES_MIN_VALUEDeterminesMinValueKeyword_2_0 = (Keyword)cDETERMINES_MIN_VALUEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDETERMINES_ALLOWED_VALUESDeterminesAllowedValuesKeyword_3_0 = (Keyword)cDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDETERMINES_ALLOWED_TYPESDeterminesAllowedTypesKeyword_4_0 = (Keyword)cDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_MAX_VALUEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDETERMINES_MAX_VALUEDeterminesMaxValueKeyword_5_0 = (Keyword)cDETERMINES_MAX_VALUEEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum RegularityFeatureType:
		//	DETERMINES_VALUE="determinesValue" | DETERMINES_TYPE="determinesType" | DETERMINES_MIN_VALUE="determinesMinValue" |
		//	DETERMINES_ALLOWED_VALUES="determinesAllowedValues" | DETERMINES_ALLOWED_TYPES="determinesAllowedTypes" |
		//	DETERMINES_MAX_VALUE="determinesMaxValue";
		public EnumRule getRule() { return rule; }
		
		//DETERMINES_VALUE="determinesValue" | DETERMINES_TYPE="determinesType" | DETERMINES_MIN_VALUE="determinesMinValue" |
		//DETERMINES_ALLOWED_VALUES="determinesAllowedValues" | DETERMINES_ALLOWED_TYPES="determinesAllowedTypes" |
		//DETERMINES_MAX_VALUE="determinesMaxValue"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DETERMINES_VALUE="determinesValue"
		public EnumLiteralDeclaration getDETERMINES_VALUEEnumLiteralDeclaration_0() { return cDETERMINES_VALUEEnumLiteralDeclaration_0; }
		
		//"determinesValue"
		public Keyword getDETERMINES_VALUEDeterminesValueKeyword_0_0() { return cDETERMINES_VALUEDeterminesValueKeyword_0_0; }
		
		//DETERMINES_TYPE="determinesType"
		public EnumLiteralDeclaration getDETERMINES_TYPEEnumLiteralDeclaration_1() { return cDETERMINES_TYPEEnumLiteralDeclaration_1; }
		
		//"determinesType"
		public Keyword getDETERMINES_TYPEDeterminesTypeKeyword_1_0() { return cDETERMINES_TYPEDeterminesTypeKeyword_1_0; }
		
		//DETERMINES_MIN_VALUE="determinesMinValue"
		public EnumLiteralDeclaration getDETERMINES_MIN_VALUEEnumLiteralDeclaration_2() { return cDETERMINES_MIN_VALUEEnumLiteralDeclaration_2; }
		
		//"determinesMinValue"
		public Keyword getDETERMINES_MIN_VALUEDeterminesMinValueKeyword_2_0() { return cDETERMINES_MIN_VALUEDeterminesMinValueKeyword_2_0; }
		
		//DETERMINES_ALLOWED_VALUES="determinesAllowedValues"
		public EnumLiteralDeclaration getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3() { return cDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3; }
		
		//"determinesAllowedValues"
		public Keyword getDETERMINES_ALLOWED_VALUESDeterminesAllowedValuesKeyword_3_0() { return cDETERMINES_ALLOWED_VALUESDeterminesAllowedValuesKeyword_3_0; }
		
		//DETERMINES_ALLOWED_TYPES="determinesAllowedTypes"
		public EnumLiteralDeclaration getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_4() { return cDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_4; }
		
		//"determinesAllowedTypes"
		public Keyword getDETERMINES_ALLOWED_TYPESDeterminesAllowedTypesKeyword_4_0() { return cDETERMINES_ALLOWED_TYPESDeterminesAllowedTypesKeyword_4_0; }
		
		//DETERMINES_MAX_VALUE="determinesMaxValue"
		public EnumLiteralDeclaration getDETERMINES_MAX_VALUEEnumLiteralDeclaration_5() { return cDETERMINES_MAX_VALUEEnumLiteralDeclaration_5; }
		
		//"determinesMaxValue"
		public Keyword getDETERMINES_MAX_VALUEDeterminesMaxValueKeyword_5_0() { return cDETERMINES_MAX_VALUEDeterminesMaxValueKeyword_5_0; }
	}
	
	private final ML2ModelElements pML2Model;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final ImportElements pImport;
	private final ModelElementElements pModelElement;
	private final EntityDeclarationElements pEntityDeclaration;
	private final IndividualElements pIndividual;
	private final ML2ClassElements pML2Class;
	private final SomeFOClassElements pSomeFOClass;
	private final NonFOClassElements pNonFOClass;
	private final CategorizationTypeElements eCategorizationType;
	private final FOClassElements pFOClass;
	private final DataTypeElements pDataType;
	private final HOClassElements pHOClass;
	private final OrderlessClassElements pOrderlessClass;
	private final GeneralizationSetElements pGeneralizationSet;
	private final FeatureElements pFeature;
	private final CommonFeatureElements pCommonFeature;
	private final RegularityFeatureElements pRegularityFeature;
	private final AttributeElements pAttribute;
	private final ReferenceElements pReference;
	private final RegularityAttributeElements pRegularityAttribute;
	private final RegularityReferenceElements pRegularityReference;
	private final ELEMENTBOUNDElements pELEMENTBOUND;
	private final PrimitiveTypeElements ePrimitiveType;
	private final RegularityFeatureTypeElements eRegularityFeatureType;
	private final FeatureAssignmentElements pFeatureAssignment;
	private final SingleAttributeAssignmentElements pSingleAttributeAssignment;
	private final MultipleAttributeAssignmentElements pMultipleAttributeAssignment;
	private final ReferenceAssignmentElements pReferenceAssignment;
	private final LiteralElements pLiteral;
	private final ML2StringElements pML2String;
	private final ML2NumberElements pML2Number;
	private final ML2BooleanElements pML2Boolean;
	private final BOOLEANElements pBOOLEAN;
	private final NUMBERElements pNUMBER;
	private final UnnamedIndividualElements pUnnamedIndividual;
	private final SimpleAttributeAssignmentElements pSimpleAttributeAssignment;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ML2GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pML2Model = new ML2ModelElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.pImport = new ImportElements();
		this.pModelElement = new ModelElementElements();
		this.pEntityDeclaration = new EntityDeclarationElements();
		this.pIndividual = new IndividualElements();
		this.pML2Class = new ML2ClassElements();
		this.pSomeFOClass = new SomeFOClassElements();
		this.pNonFOClass = new NonFOClassElements();
		this.eCategorizationType = new CategorizationTypeElements();
		this.pFOClass = new FOClassElements();
		this.pDataType = new DataTypeElements();
		this.pHOClass = new HOClassElements();
		this.pOrderlessClass = new OrderlessClassElements();
		this.pGeneralizationSet = new GeneralizationSetElements();
		this.pFeature = new FeatureElements();
		this.pCommonFeature = new CommonFeatureElements();
		this.pRegularityFeature = new RegularityFeatureElements();
		this.pAttribute = new AttributeElements();
		this.pReference = new ReferenceElements();
		this.pRegularityAttribute = new RegularityAttributeElements();
		this.pRegularityReference = new RegularityReferenceElements();
		this.pELEMENTBOUND = new ELEMENTBOUNDElements();
		this.ePrimitiveType = new PrimitiveTypeElements();
		this.eRegularityFeatureType = new RegularityFeatureTypeElements();
		this.pFeatureAssignment = new FeatureAssignmentElements();
		this.pSingleAttributeAssignment = new SingleAttributeAssignmentElements();
		this.pMultipleAttributeAssignment = new MultipleAttributeAssignmentElements();
		this.pReferenceAssignment = new ReferenceAssignmentElements();
		this.pLiteral = new LiteralElements();
		this.pML2String = new ML2StringElements();
		this.pML2Number = new ML2NumberElements();
		this.pML2Boolean = new ML2BooleanElements();
		this.pBOOLEAN = new BOOLEANElements();
		this.pNUMBER = new NUMBERElements();
		this.pUnnamedIndividual = new UnnamedIndividualElements();
		this.pSimpleAttributeAssignment = new SimpleAttributeAssignmentElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufes.inf.nemo.ml2.ML2".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ML2Model:
	//	'module' name=QualifiedName '{' ('include' includes+=[ML2Model|QualifiedName] ';' | elements+=ModelElement)*
	//	'}';
	public ML2ModelElements getML2ModelAccess() {
		return pML2Model;
	}
	
	public ParserRule getML2ModelRule() {
		return getML2ModelAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	QualifiedName '.*'?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//Import:
	//	'import' importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//ModelElement:
	//	(Import | EntityDeclaration | GeneralizationSet) ';';
	public ModelElementElements getModelElementAccess() {
		return pModelElement;
	}
	
	public ParserRule getModelElementRule() {
		return getModelElementAccess().getRule();
	}
	
	//EntityDeclaration:
	//	ML2Class | Individual;
	public EntityDeclarationElements getEntityDeclarationAccess() {
		return pEntityDeclaration;
	}
	
	public ParserRule getEntityDeclarationRule() {
		return getEntityDeclarationAccess().getRule();
	}
	
	//Individual:
	//	'individual' name=ID
	//	':' instantiatedClasses+=[ML2Class|QualifiedName] (',' instantiatedClasses+=[ML2Class|QualifiedName])* ('{'
	//	assignments+=FeatureAssignment* '}')?;
	public IndividualElements getIndividualAccess() {
		return pIndividual;
	}
	
	public ParserRule getIndividualRule() {
		return getIndividualAccess().getRule();
	}
	
	//ML2Class:
	//	(SomeFOClass | NonFOClass) ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?;
	public ML2ClassElements getML2ClassAccess() {
		return pML2Class;
	}
	
	public ParserRule getML2ClassRule() {
		return getML2ClassAccess().getRule();
	}
	
	//SomeFOClass ML2Class:
	//	(FOClass | DataType) (':' instantiatedClasses+=[ML2Class|QualifiedName] (','
	//	instantiatedClasses+=[ML2Class|QualifiedName])*)? ('specializes' superClasses+=[ML2Class|QualifiedName] (','
	//	superClasses+=[ML2Class|QualifiedName])*)?;
	public SomeFOClassElements getSomeFOClassAccess() {
		return pSomeFOClass;
	}
	
	public ParserRule getSomeFOClassRule() {
		return getSomeFOClassAccess().getRule();
	}
	
	//NonFOClass ML2Class:
	//	(HOClass | OrderlessClass) (':' instantiatedClasses+=[ML2Class|QualifiedName] (','
	//	instantiatedClasses+=[ML2Class|QualifiedName])*)? ('specializes' superClasses+=[ML2Class|QualifiedName] (','
	//	superClasses+=[ML2Class|QualifiedName])*)? ('subordinatedTo' subordinators+=[ML2Class|QualifiedName] (','
	//	subordinators+=[ML2Class|QualifiedName])*)? (categorizationType=CategorizationType
	//	categorizedClass=[ML2Class|QualifiedName] | 'isPowertypeOf' powertypeOf=[ML2Class|QualifiedName])?;
	public NonFOClassElements getNonFOClassAccess() {
		return pNonFOClass;
	}
	
	public ParserRule getNonFOClassRule() {
		return getNonFOClassAccess().getRule();
	}
	
	//enum CategorizationType:
	//	CATEGORIZER="categorizes" | COMPLETE_CATEGORIZER="completeCategorizes" | DISJOINT_CATEGORIZER="disjointCategorizes" |
	//	PARTITIONER="partitions";
	public CategorizationTypeElements getCategorizationTypeAccess() {
		return eCategorizationType;
	}
	
	public EnumRule getCategorizationTypeRule() {
		return getCategorizationTypeAccess().getRule();
	}
	
	//FOClass:
	//	'class' name=ID;
	public FOClassElements getFOClassAccess() {
		return pFOClass;
	}
	
	public ParserRule getFOClassRule() {
		return getFOClassAccess().getRule();
	}
	
	//DataType:
	//	'datatype' name=ID;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//HOClass:
	//	'order' order=INT 'class' name=ID;
	public HOClassElements getHOClassAccess() {
		return pHOClass;
	}
	
	public ParserRule getHOClassRule() {
		return getHOClassAccess().getRule();
	}
	
	//OrderlessClass:
	//	'orderless' 'class' name=ID;
	public OrderlessClassElements getOrderlessClassAccess() {
		return pOrderlessClass;
	}
	
	public ParserRule getOrderlessClassRule() {
		return getOrderlessClassAccess().getRule();
	}
	
	//GeneralizationSet:
	//	(isDisjoint?='disjoint'? & isComplete?='complete'?) 'genset' name=ID?
	//	'general' general=[ML2Class|QualifiedName] ('categorizer' categorizer=[ML2Class|QualifiedName])?
	//	'specifics' specifics+=[ML2Class|QualifiedName] (',' specifics+=[ML2Class|QualifiedName])+;
	public GeneralizationSetElements getGeneralizationSetAccess() {
		return pGeneralizationSet;
	}
	
	public ParserRule getGeneralizationSetRule() {
		return getGeneralizationSetAccess().getRule();
	}
	
	//Feature:
	//	CommonFeature | RegularityFeature;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//CommonFeature Feature:
	//	Attribute | Reference;
	public CommonFeatureElements getCommonFeatureAccess() {
		return pCommonFeature;
	}
	
	public ParserRule getCommonFeatureRule() {
		return getCommonFeatureAccess().getRule();
	}
	
	//RegularityFeature Feature:
	//	RegularityAttribute | RegularityReference;
	public RegularityFeatureElements getRegularityFeatureAccess() {
		return pRegularityFeature;
	}
	
	public ParserRule getRegularityFeatureRule() {
		return getRegularityFeatureAccess().getRule();
	}
	
	//Attribute:
	//	'att'? name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')? (primitiveType=PrimitiveType |
	//	_type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
	//	subsetOf+=[Attribute|QualifiedName])*)?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Reference:
	//	'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')? _type=[ML2Class|QualifiedName]
	//	('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo'
	//	oppositeTo=[Reference|QualifiedName])?;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//RegularityAttribute Attribute:
	//	'regularity' 'att'? name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
	//	(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
	//	subsetOf+=[Attribute|QualifiedName])*)?
	//	regularityType=RegularityFeatureType regulatedFeature=[Feature|QualifiedName];
	public RegularityAttributeElements getRegularityAttributeAccess() {
		return pRegularityAttribute;
	}
	
	public ParserRule getRegularityAttributeRule() {
		return getRegularityAttributeAccess().getRule();
	}
	
	//RegularityReference Reference:
	//	'regularity' 'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
	//	_type=[ML2Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
	//	subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
	//	regularityType=RegularityFeatureType regulatedFeature=[Feature|QualifiedName];
	public RegularityReferenceElements getRegularityReferenceAccess() {
		return pRegularityReference;
	}
	
	public ParserRule getRegularityReferenceRule() {
		return getRegularityReferenceAccess().getRule();
	}
	
	//ELEMENTBOUND ecore::EInt:
	//	'*' | INT;
	public ELEMENTBOUNDElements getELEMENTBOUNDAccess() {
		return pELEMENTBOUND;
	}
	
	public ParserRule getELEMENTBOUNDRule() {
		return getELEMENTBOUNDAccess().getRule();
	}
	
	//enum PrimitiveType:
	//	STRING="String" | NUMBER="Number" | BOOLEAN="Boolean";
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return ePrimitiveType;
	}
	
	public EnumRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//enum RegularityFeatureType:
	//	DETERMINES_VALUE="determinesValue" | DETERMINES_TYPE="determinesType" | DETERMINES_MIN_VALUE="determinesMinValue" |
	//	DETERMINES_ALLOWED_VALUES="determinesAllowedValues" | DETERMINES_ALLOWED_TYPES="determinesAllowedTypes" |
	//	DETERMINES_MAX_VALUE="determinesMaxValue";
	public RegularityFeatureTypeElements getRegularityFeatureTypeAccess() {
		return eRegularityFeatureType;
	}
	
	public EnumRule getRegularityFeatureTypeRule() {
		return getRegularityFeatureTypeAccess().getRule();
	}
	
	//FeatureAssignment:
	//	SingleAttributeAssignment | MultipleAttributeAssignment | ReferenceAssignment;
	public FeatureAssignmentElements getFeatureAssignmentAccess() {
		return pFeatureAssignment;
	}
	
	public ParserRule getFeatureAssignmentRule() {
		return getFeatureAssignmentAccess().getRule();
	}
	
	//SingleAttributeAssignment AttributeAssignment:
	//	'att'? attribute=[Attribute|QualifiedName] '=' (individualAssignments+=[Individual|QualifiedName] |
	//	unnamedIndividualAssignments+=UnnamedIndividual
	//	| literalAssignments+=Literal);
	public SingleAttributeAssignmentElements getSingleAttributeAssignmentAccess() {
		return pSingleAttributeAssignment;
	}
	
	public ParserRule getSingleAttributeAssignmentRule() {
		return getSingleAttributeAssignmentAccess().getRule();
	}
	
	//MultipleAttributeAssignment AttributeAssignment:
	//	'att'? attribute=[Attribute|QualifiedName] '=' '{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* |
	//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
	//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*)? '}';
	public MultipleAttributeAssignmentElements getMultipleAttributeAssignmentAccess() {
		return pMultipleAttributeAssignment;
	}
	
	public ParserRule getMultipleAttributeAssignmentRule() {
		return getMultipleAttributeAssignmentAccess().getRule();
	}
	
	//ReferenceAssignment:
	//	'ref' reference=[Reference|QualifiedName] '=' (assignments+=[EntityDeclaration|QualifiedName] | '{'
	//	assignments+=[EntityDeclaration|QualifiedName] (',' assignments+=[EntityDeclaration|QualifiedName])* '}');
	public ReferenceAssignmentElements getReferenceAssignmentAccess() {
		return pReferenceAssignment;
	}
	
	public ParserRule getReferenceAssignmentRule() {
		return getReferenceAssignmentAccess().getRule();
	}
	
	//Literal:
	//	ML2String | ML2Number | ML2Boolean;
	public LiteralElements getLiteralAccess() {
		return pLiteral;
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}
	
	//ML2String:
	//	value=STRING;
	public ML2StringElements getML2StringAccess() {
		return pML2String;
	}
	
	public ParserRule getML2StringRule() {
		return getML2StringAccess().getRule();
	}
	
	//ML2Number:
	//	value=NUMBER;
	public ML2NumberElements getML2NumberAccess() {
		return pML2Number;
	}
	
	public ParserRule getML2NumberRule() {
		return getML2NumberAccess().getRule();
	}
	
	//ML2Boolean:
	//	value=BOOLEAN;
	public ML2BooleanElements getML2BooleanAccess() {
		return pML2Boolean;
	}
	
	public ParserRule getML2BooleanRule() {
		return getML2BooleanAccess().getRule();
	}
	
	//BOOLEAN ecore::EBoolean:
	//	'true' | 'false';
	public BOOLEANElements getBOOLEANAccess() {
		return pBOOLEAN;
	}
	
	public ParserRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//NUMBER ecore::EDouble:
	//	'-'? INT ('.' INT)?;
	public NUMBERElements getNUMBERAccess() {
		return pNUMBER;
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}
	
	//UnnamedIndividual Individual:
	//	{Individual} '[' assignments+=SimpleAttributeAssignment* ']';
	public UnnamedIndividualElements getUnnamedIndividualAccess() {
		return pUnnamedIndividual;
	}
	
	public ParserRule getUnnamedIndividualRule() {
		return getUnnamedIndividualAccess().getRule();
	}
	
	//SimpleAttributeAssignment AttributeAssignment:
	//	attribute=[Attribute|QualifiedName] '=' (individualAssignments+=[Individual|QualifiedName] |
	//	unnamedIndividualAssignments+=UnnamedIndividual
	//	| literalAssignments+=Literal
	//	| '{' (literalAssignments+=Literal (',' literalAssignments+=Literal)* |
	//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual) (','
	//	(individualAssignments+=[Individual|QualifiedName] | unnamedIndividualAssignments+=UnnamedIndividual))*)? '}');
	public SimpleAttributeAssignmentElements getSimpleAttributeAssignmentAccess() {
		return pSimpleAttributeAssignment;
	}
	
	public ParserRule getSimpleAttributeAssignmentRule() {
		return getSimpleAttributeAssignmentAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
