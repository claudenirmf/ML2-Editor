/*
 * generated by Xtext 2.10.0
 */
grammar InternalML2;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.ufes.inf.nemo.ml2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.ufes.inf.nemo.ml2.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.ufes.inf.nemo.ml2.services.ML2GrammarAccess;

}

@parser::members {

 	private ML2GrammarAccess grammarAccess;

    public InternalML2Parser(TokenStream input, ML2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ML2Model";
   	}

   	@Override
   	protected ML2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleML2Model
entryRuleML2Model returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getML2ModelRule()); }
	iv_ruleML2Model=ruleML2Model
	{ $current=$iv_ruleML2Model.current; }
	EOF;

// Rule ML2Model
ruleML2Model returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='module'
		{
			newLeafNode(otherlv_0, grammarAccess.getML2ModelAccess().getModuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getML2ModelAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getML2ModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"br.ufes.inf.nemo.ml2.ML2.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getML2ModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				otherlv_3='include'
				{
					newLeafNode(otherlv_3, grammarAccess.getML2ModelAccess().getIncludeKeyword_3_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getML2ModelRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getML2ModelAccess().getIncludesML2ModelCrossReference_3_0_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getML2ModelAccess().getSemicolonKeyword_3_0_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getML2ModelAccess().getElementsModelElementParserRuleCall_3_1_0());
					}
					lv_elements_6_0=ruleModelElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getML2ModelRule());
						}
						add(
							$current,
							"elements",
							lv_elements_6_0,
							"br.ufes.inf.nemo.ml2.ML2.ModelElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getML2ModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"br.ufes.inf.nemo.ml2.ML2.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	iv_ruleModelElement=ruleModelElement
	{ $current=$iv_ruleModelElement.current; }
	EOF;

// Rule ModelElement
ruleModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getImportParserRuleCall_0_0());
			}
			this_Import_0=ruleImport
			{
				$current = $this_Import_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getEntityDeclarationParserRuleCall_0_1());
			}
			this_EntityDeclaration_1=ruleEntityDeclaration
			{
				$current = $this_EntityDeclaration_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_0_2());
			}
			this_GeneralizationSet_2=ruleGeneralizationSet
			{
				$current = $this_GeneralizationSet_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelElementAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleEntityDeclaration
entryRuleEntityDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityDeclarationRule()); }
	iv_ruleEntityDeclaration=ruleEntityDeclaration
	{ $current=$iv_ruleEntityDeclaration.current; }
	EOF;

// Rule EntityDeclaration
ruleEntityDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityDeclarationAccess().getML2ClassParserRuleCall_0());
		}
		this_ML2Class_0=ruleML2Class
		{
			$current = $this_ML2Class_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityDeclarationAccess().getIndividualParserRuleCall_1());
		}
		this_Individual_1=ruleIndividual
		{
			$current = $this_Individual_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndividual
entryRuleIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndividualRule()); }
	iv_ruleIndividual=ruleIndividual
	{ $current=$iv_ruleIndividual.current; }
	EOF;

// Rule Individual
ruleIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='individual'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndividualAccess().getIndividualKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIndividualAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndividualAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndividualRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getIndividualAccess().getInstantiatedClassesML2ClassCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getIndividualAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndividualRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIndividualAccess().getInstantiatedClassesML2ClassCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getIndividualAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIndividualAccess().getAssignmentsFeatureAssignmentParserRuleCall_5_1_0());
					}
					lv_assignments_7_0=ruleFeatureAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIndividualRule());
						}
						add(
							$current,
							"assignments",
							lv_assignments_7_0,
							"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getIndividualAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleML2Class
entryRuleML2Class returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getML2ClassRule()); }
	iv_ruleML2Class=ruleML2Class
	{ $current=$iv_ruleML2Class.current; }
	EOF;

// Rule ML2Class
ruleML2Class returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getML2ClassAccess().getSomeFOClassParserRuleCall_0_0());
			}
			this_SomeFOClass_0=ruleSomeFOClass
			{
				$current = $this_SomeFOClass_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getML2ClassAccess().getNonFOClassParserRuleCall_0_1());
			}
			this_NonFOClass_1=ruleNonFOClass
			{
				$current = $this_NonFOClass_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getML2ClassAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getML2ClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_1_1_0_0());
						}
						lv_assignments_3_0=ruleFeatureAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getML2ClassRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_3_0,
								"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getML2ClassAccess().getFeaturesFeatureParserRuleCall_1_1_1_0());
						}
						lv_features_4_0=ruleFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getML2ClassRule());
							}
							add(
								$current,
								"features",
								lv_features_4_0,
								"br.ufes.inf.nemo.ml2.ML2.Feature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getML2ClassAccess().getRightCurlyBracketKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleSomeFOClass
entryRuleSomeFOClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSomeFOClassRule()); }
	iv_ruleSomeFOClass=ruleSomeFOClass
	{ $current=$iv_ruleSomeFOClass.current; }
	EOF;

// Rule SomeFOClass
ruleSomeFOClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSomeFOClassAccess().getFOClassParserRuleCall_0_0());
			}
			this_FOClass_0=ruleFOClass
			{
				$current = $this_FOClass_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSomeFOClassAccess().getDataTypeParserRuleCall_0_1());
			}
			this_DataType_1=ruleDataType
			{
				$current = $this_DataType_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getSomeFOClassAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSomeFOClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSomeFOClassAccess().getInstantiatedClassesML2ClassCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getSomeFOClassAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSomeFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSomeFOClassAccess().getInstantiatedClassesML2ClassCrossReference_1_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='specializes'
			{
				newLeafNode(otherlv_6, grammarAccess.getSomeFOClassAccess().getSpecializesKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSomeFOClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSomeFOClassAccess().getSuperClassesML2ClassCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getSomeFOClassAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSomeFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSomeFOClassAccess().getSuperClassesML2ClassCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleNonFOClass
entryRuleNonFOClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonFOClassRule()); }
	iv_ruleNonFOClass=ruleNonFOClass
	{ $current=$iv_ruleNonFOClass.current; }
	EOF;

// Rule NonFOClass
ruleNonFOClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNonFOClassAccess().getHOClassParserRuleCall_0_0());
			}
			this_HOClass_0=ruleHOClass
			{
				$current = $this_HOClass_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getNonFOClassAccess().getOrderlessClassParserRuleCall_0_1());
			}
			this_OrderlessClass_1=ruleOrderlessClass
			{
				$current = $this_OrderlessClass_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNonFOClassAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNonFOClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNonFOClassAccess().getInstantiatedClassesML2ClassCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getNonFOClassAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNonFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNonFOClassAccess().getInstantiatedClassesML2ClassCrossReference_1_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='specializes'
			{
				newLeafNode(otherlv_6, grammarAccess.getNonFOClassAccess().getSpecializesKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNonFOClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNonFOClassAccess().getSuperClassesML2ClassCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getNonFOClassAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNonFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNonFOClassAccess().getSuperClassesML2ClassCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_10='subordinatedTo'
			{
				newLeafNode(otherlv_10, grammarAccess.getNonFOClassAccess().getSubordinatedToKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNonFOClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNonFOClassAccess().getSubordinatorsML2ClassCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getNonFOClassAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNonFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNonFOClassAccess().getSubordinatorsML2ClassCrossReference_3_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getNonFOClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_4_0_0_0());
						}
						lv_categorizationType_14_0=ruleCategorizationType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNonFOClassRule());
							}
							set(
								$current,
								"categorizationType",
								lv_categorizationType_14_0,
								"br.ufes.inf.nemo.ml2.ML2.CategorizationType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNonFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNonFOClassAccess().getCategorizedClassML2ClassCrossReference_4_0_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_16='isPowertypeOf'
				{
					newLeafNode(otherlv_16, grammarAccess.getNonFOClassAccess().getIsPowertypeOfKeyword_4_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNonFOClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNonFOClassAccess().getPowertypeOfML2ClassCrossReference_4_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleFOClass
entryRuleFOClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFOClassRule()); }
	iv_ruleFOClass=ruleFOClass
	{ $current=$iv_ruleFOClass.current; }
	EOF;

// Rule FOClass
ruleFOClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='class'
		{
			newLeafNode(otherlv_0, grammarAccess.getFOClassAccess().getClassKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFOClassAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFOClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleHOClass
entryRuleHOClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHOClassRule()); }
	iv_ruleHOClass=ruleHOClass
	{ $current=$iv_ruleHOClass.current; }
	EOF;

// Rule HOClass
ruleHOClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='order'
		{
			newLeafNode(otherlv_0, grammarAccess.getHOClassAccess().getOrderKeyword_0());
		}
		(
			(
				lv_order_1_0=RULE_INT
				{
					newLeafNode(lv_order_1_0, grammarAccess.getHOClassAccess().getOrderINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHOClassRule());
					}
					setWithLastConsumed(
						$current,
						"order",
						lv_order_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='class'
		{
			newLeafNode(otherlv_2, grammarAccess.getHOClassAccess().getClassKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getHOClassAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHOClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOrderlessClass
entryRuleOrderlessClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderlessClassRule()); }
	iv_ruleOrderlessClass=ruleOrderlessClass
	{ $current=$iv_ruleOrderlessClass.current; }
	EOF;

// Rule OrderlessClass
ruleOrderlessClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='orderless'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderlessClassAccess().getOrderlessKeyword_0());
		}
		otherlv_1='class'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderlessClassAccess().getClassKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOrderlessClassAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderlessClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralizationSetRule()); }
	iv_ruleGeneralizationSet=ruleGeneralizationSet
	{ $current=$iv_ruleGeneralizationSet.current; }
	EOF;

// Rule GeneralizationSet
ruleGeneralizationSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>((
									lv_isDisjoint_1_0='disjoint'
									{
										newLeafNode(lv_isDisjoint_1_0, grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGeneralizationSetRule());
										}
										setWithLastConsumed($current, "isDisjoint", true, "disjoint");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>((
									lv_isComplete_2_0='complete'
									{
										newLeafNode(lv_isComplete_2_0, grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGeneralizationSetRule());
										}
										setWithLastConsumed($current, "isComplete", true, "complete");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
				}
		)
		otherlv_3='genset'
		{
			newLeafNode(otherlv_3, grammarAccess.getGeneralizationSetAccess().getGensetKeyword_1());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_5='general'
		{
			newLeafNode(otherlv_5, grammarAccess.getGeneralizationSetAccess().getGeneralKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationSetAccess().getGeneralML2ClassCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='categorizer'
			{
				newLeafNode(otherlv_7, grammarAccess.getGeneralizationSetAccess().getCategorizerKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGeneralizationSetRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGeneralizationSetAccess().getCategorizerML2ClassCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='specifics'
		{
			newLeafNode(otherlv_9, grammarAccess.getGeneralizationSetAccess().getSpecificsKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationSetAccess().getSpecificsML2ClassCrossReference_7_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getGeneralizationSetAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGeneralizationSetRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGeneralizationSetAccess().getSpecificsML2ClassCrossReference_8_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getCommonFeatureParserRuleCall_0());
		}
		this_CommonFeature_0=ruleCommonFeature
		{
			$current = $this_CommonFeature_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getRegularityFeatureParserRuleCall_1());
		}
		this_RegularityFeature_1=ruleRegularityFeature
		{
			$current = $this_RegularityFeature_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommonFeature
entryRuleCommonFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommonFeatureRule()); }
	iv_ruleCommonFeature=ruleCommonFeature
	{ $current=$iv_ruleCommonFeature.current; }
	EOF;

// Rule CommonFeature
ruleCommonFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommonFeatureAccess().getAttributeParserRuleCall_0());
		}
		this_Attribute_0=ruleAttribute
		{
			$current = $this_Attribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommonFeatureAccess().getReferenceParserRuleCall_1());
		}
		this_Reference_1=ruleReference
		{
			$current = $this_Reference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRegularityFeature
entryRuleRegularityFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularityFeatureRule()); }
	iv_ruleRegularityFeature=ruleRegularityFeature
	{ $current=$iv_ruleRegularityFeature.current; }
	EOF;

// Rule RegularityFeature
ruleRegularityFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRegularityFeatureAccess().getRegularityAttributeParserRuleCall_0());
		}
		this_RegularityAttribute_0=ruleRegularityAttribute
		{
			$current = $this_RegularityAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularityFeatureAccess().getRegularityReferenceParserRuleCall_1());
		}
		this_RegularityReference_1=ruleRegularityReference
		{
			$current = $this_RegularityReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='att'
			{
				newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttKeyword_0());
			}
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
		}
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getLowerBoundELEMENTBOUNDParserRuleCall_3_1_0());
					}
					lv_lowerBound_4_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_4_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='..'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getFullStopFullStopKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getUpperBoundELEMENTBOUNDParserRuleCall_3_3_0());
					}
					lv_upperBound_6_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_6_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAttributeAccess().get_typeDataTypeCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='subsets'
			{
				newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getSubsetsKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getAttributeAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_5_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getColonKeyword_2());
		}
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getLowerBoundELEMENTBOUNDParserRuleCall_3_1_0());
					}
					lv_lowerBound_4_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_4_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='..'
			{
				newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getFullStopFullStopKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getUpperBoundELEMENTBOUNDParserRuleCall_3_3_0());
					}
					lv_upperBound_6_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_6_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferenceAccess().get_typeML2ClassCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='subsets'
			{
				newLeafNode(otherlv_9, grammarAccess.getReferenceAccess().getSubsetsKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getReferenceAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_5_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_13='isOppositeTo'
			{
				newLeafNode(otherlv_13, grammarAccess.getReferenceAccess().getIsOppositeToKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getOppositeToReferenceCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRegularityAttribute
entryRuleRegularityAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularityAttributeRule()); }
	iv_ruleRegularityAttribute=ruleRegularityAttribute
	{ $current=$iv_ruleRegularityAttribute.current; }
	EOF;

// Rule RegularityAttribute
ruleRegularityAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='regularity'
		{
			newLeafNode(otherlv_0, grammarAccess.getRegularityAttributeAccess().getRegularityKeyword_0());
		}
		(
			otherlv_1='att'
			{
				newLeafNode(otherlv_1, grammarAccess.getRegularityAttributeAccess().getAttKeyword_1());
			}
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRegularityAttributeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegularityAttributeAccess().getColonKeyword_3());
		}
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getRegularityAttributeAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getLowerBoundELEMENTBOUNDParserRuleCall_4_1_0());
					}
					lv_lowerBound_5_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_5_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='..'
			{
				newLeafNode(otherlv_6, grammarAccess.getRegularityAttributeAccess().getFullStopFullStopKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getUpperBoundELEMENTBOUNDParserRuleCall_4_3_0());
					}
					lv_upperBound_7_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_7_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getRegularityAttributeAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityAttributeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityAttributeAccess().get_typeDataTypeCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='subsets'
			{
				newLeafNode(otherlv_10, grammarAccess.getRegularityAttributeAccess().getSubsetsKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityAttributeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getRegularityAttributeAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRegularityAttributeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularityAttributeAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0());
				}
				lv_regularityType_14_0=ruleRegularityFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
					}
					set(
						$current,
						"regularityType",
						lv_regularityType_14_0,
						"br.ufes.inf.nemo.ml2.ML2.RegularityFeatureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityAttributeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityAttributeAccess().getRegulatedFeatureFeatureCrossReference_8_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRegularityReference
entryRuleRegularityReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularityReferenceRule()); }
	iv_ruleRegularityReference=ruleRegularityReference
	{ $current=$iv_ruleRegularityReference.current; }
	EOF;

// Rule RegularityReference
ruleRegularityReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='regularity'
		{
			newLeafNode(otherlv_0, grammarAccess.getRegularityReferenceAccess().getRegularityKeyword_0());
		}
		otherlv_1='ref'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegularityReferenceAccess().getRefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRegularityReferenceAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegularityReferenceAccess().getColonKeyword_3());
		}
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getRegularityReferenceAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getLowerBoundELEMENTBOUNDParserRuleCall_4_1_0());
					}
					lv_lowerBound_5_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityReferenceRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_5_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='..'
			{
				newLeafNode(otherlv_6, grammarAccess.getRegularityReferenceAccess().getFullStopFullStopKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getUpperBoundELEMENTBOUNDParserRuleCall_4_3_0());
					}
					lv_upperBound_7_0=ruleELEMENTBOUND
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityReferenceRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_7_0,
							"br.ufes.inf.nemo.ml2.ML2.ELEMENTBOUND");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getRegularityReferenceAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityReferenceAccess().get_typeML2ClassCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='subsets'
			{
				newLeafNode(otherlv_10, grammarAccess.getRegularityReferenceAccess().getSubsetsKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getRegularityReferenceAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRegularityReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_14='isOppositeTo'
			{
				newLeafNode(otherlv_14, grammarAccess.getRegularityReferenceAccess().getIsOppositeToKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getOppositeToReferenceCrossReference_7_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularityReferenceAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0());
				}
				lv_regularityType_16_0=ruleRegularityFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularityReferenceRule());
					}
					set(
						$current,
						"regularityType",
						lv_regularityType_16_0,
						"br.ufes.inf.nemo.ml2.ML2.RegularityFeatureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityReferenceAccess().getRegulatedFeatureFeatureCrossReference_9_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleELEMENTBOUND
entryRuleELEMENTBOUND returns [String current=null]:
	{ newCompositeNode(grammarAccess.getELEMENTBOUNDRule()); }
	iv_ruleELEMENTBOUND=ruleELEMENTBOUND
	{ $current=$iv_ruleELEMENTBOUND.current.getText(); }
	EOF;

// Rule ELEMENTBOUND
ruleELEMENTBOUND returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getELEMENTBOUNDAccess().getAsteriskKeyword_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getELEMENTBOUNDAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleFeatureAssignment
entryRuleFeatureAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureAssignmentRule()); }
	iv_ruleFeatureAssignment=ruleFeatureAssignment
	{ $current=$iv_ruleFeatureAssignment.current; }
	EOF;

// Rule FeatureAssignment
ruleFeatureAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getSingleAttributeAssignmentParserRuleCall_0());
		}
		this_SingleAttributeAssignment_0=ruleSingleAttributeAssignment
		{
			$current = $this_SingleAttributeAssignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getMultipleAttributeAssignmentParserRuleCall_1());
		}
		this_MultipleAttributeAssignment_1=ruleMultipleAttributeAssignment
		{
			$current = $this_MultipleAttributeAssignment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getReferenceAssignmentParserRuleCall_2());
		}
		this_ReferenceAssignment_2=ruleReferenceAssignment
		{
			$current = $this_ReferenceAssignment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleAttributeAssignment
entryRuleSingleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleAttributeAssignmentRule()); }
	iv_ruleSingleAttributeAssignment=ruleSingleAttributeAssignment
	{ $current=$iv_ruleSingleAttributeAssignment.current; }
	EOF;

// Rule SingleAttributeAssignment
ruleSingleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='att'
			{
				newLeafNode(otherlv_0, grammarAccess.getSingleAttributeAssignmentAccess().getAttKeyword_0());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleAttributeAssignmentAccess().getEqualsSignKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingleAttributeAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getEntityAssignmentsIndividualCrossReference_3_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_3_1_0());
					}
					lv_unnamedIndividualAssignments_4_0=ruleUnnamedIndividual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAttributeAssignmentRule());
						}
						add(
							$current,
							"unnamedIndividualAssignments",
							lv_unnamedIndividualAssignments_4_0,
							"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getLiteralAssignmentsLiteralParserRuleCall_3_2_0());
					}
					lv_literalAssignments_5_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAttributeAssignmentRule());
						}
						add(
							$current,
							"literalAssignments",
							lv_literalAssignments_5_0,
							"br.ufes.inf.nemo.ml2.ML2.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMultipleAttributeAssignment
entryRuleMultipleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleAttributeAssignmentRule()); }
	iv_ruleMultipleAttributeAssignment=ruleMultipleAttributeAssignment
	{ $current=$iv_ruleMultipleAttributeAssignment.current; }
	EOF;

// Rule MultipleAttributeAssignment
ruleMultipleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='att'
			{
				newLeafNode(otherlv_0, grammarAccess.getMultipleAttributeAssignmentAccess().getAttKeyword_0());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getMultipleAttributeAssignmentAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultipleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralAssignmentsLiteralParserRuleCall_4_0_0_0());
						}
						lv_literalAssignments_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
							}
							add(
								$current,
								"literalAssignments",
								lv_literalAssignments_4_0,
								"br.ufes.inf.nemo.ml2.ML2.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralAssignmentsLiteralParserRuleCall_4_0_1_1_0());
							}
							lv_literalAssignments_6_0=ruleLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
								}
								add(
									$current,
									"literalAssignments",
									lv_literalAssignments_6_0,
									"br.ufes.inf.nemo.ml2.ML2.Literal");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultipleAttributeAssignmentRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getEntityAssignmentsIndividualCrossReference_4_1_0_0_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_0_1_0());
							}
							lv_unnamedIndividualAssignments_8_0=ruleUnnamedIndividual
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
								}
								add(
									$current,
									"unnamedIndividualAssignments",
									lv_unnamedIndividualAssignments_8_0,
									"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					otherlv_9=','
					{
						newLeafNode(otherlv_9, grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_1_1_0());
					}
					(
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultipleAttributeAssignmentRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getEntityAssignmentsIndividualCrossReference_4_1_1_1_0_0());
								}
								ruleQualifiedName
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
						    |
						(
							(
								{
									newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_4_1_1_1_1_0());
								}
								lv_unnamedIndividualAssignments_11_0=ruleUnnamedIndividual
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
									}
									add(
										$current,
										"unnamedIndividualAssignments",
										lv_unnamedIndividualAssignments_11_0,
										"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)*
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getMultipleAttributeAssignmentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleReferenceAssignment
entryRuleReferenceAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceAssignmentRule()); }
	iv_ruleReferenceAssignment=ruleReferenceAssignment
	{ $current=$iv_ruleReferenceAssignment.current; }
	EOF;

// Rule ReferenceAssignment
ruleReferenceAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAssignmentAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceAssignmentAccess().getEqualsSignKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getReferenceAssignmentAccess().getAssignmentsEntityDeclarationCrossReference_3_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_4='{'
				{
					newLeafNode(otherlv_4, grammarAccess.getReferenceAssignmentAccess().getLeftCurlyBracketKeyword_3_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceAssignmentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getReferenceAssignmentAccess().getAssignmentsEntityDeclarationCrossReference_3_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getReferenceAssignmentAccess().getCommaKeyword_3_1_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getReferenceAssignmentRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getReferenceAssignmentAccess().getAssignmentsEntityDeclarationCrossReference_3_1_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_8='}'
				{
					newLeafNode(otherlv_8, grammarAccess.getReferenceAssignmentAccess().getRightCurlyBracketKeyword_3_1_3());
				}
			)
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getML2StringParserRuleCall_0());
		}
		this_ML2String_0=ruleML2String
		{
			$current = $this_ML2String_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getML2NumberParserRuleCall_1());
		}
		this_ML2Number_1=ruleML2Number
		{
			$current = $this_ML2Number_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getML2BooleanParserRuleCall_2());
		}
		this_ML2Boolean_2=ruleML2Boolean
		{
			$current = $this_ML2Boolean_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleML2String
entryRuleML2String returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getML2StringRule()); }
	iv_ruleML2String=ruleML2String
	{ $current=$iv_ruleML2String.current; }
	EOF;

// Rule ML2String
ruleML2String returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getML2StringAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getML2StringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleML2Number
entryRuleML2Number returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getML2NumberRule()); }
	iv_ruleML2Number=ruleML2Number
	{ $current=$iv_ruleML2Number.current; }
	EOF;

// Rule ML2Number
ruleML2Number returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getML2NumberAccess().getValueNUMBERParserRuleCall_0());
			}
			lv_value_0_0=ruleNUMBER
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getML2NumberRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"br.ufes.inf.nemo.ml2.ML2.NUMBER");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleML2Boolean
entryRuleML2Boolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getML2BooleanRule()); }
	iv_ruleML2Boolean=ruleML2Boolean
	{ $current=$iv_ruleML2Boolean.current; }
	EOF;

// Rule ML2Boolean
ruleML2Boolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getML2BooleanAccess().getValueBOOLEANParserRuleCall_0());
			}
			lv_value_0_0=ruleBOOLEAN
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getML2BooleanRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"br.ufes.inf.nemo.ml2.ML2.BOOLEAN");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	iv_ruleBOOLEAN=ruleBOOLEAN
	{ $current=$iv_ruleBOOLEAN.current.getText(); }
	EOF;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_1());
			}
			(
				(
					kw='E'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNUMBERAccess().getEKeyword_2_2_0_0());
					}
					    |
					kw='e'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNUMBERAccess().getEKeyword_2_2_0_1());
					}
				)
				(
					kw='-'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_2_2_1());
					}
				)?
				this_INT_7=RULE_INT
				{
					$current.merge(this_INT_7);
				}
				{
					newLeafNode(this_INT_7, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_2_2());
				}
			)?
		)?
	)
;

// Entry rule entryRuleUnnamedIndividual
entryRuleUnnamedIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnnamedIndividualRule()); }
	iv_ruleUnnamedIndividual=ruleUnnamedIndividual
	{ $current=$iv_ruleUnnamedIndividual.current; }
	EOF;

// Rule UnnamedIndividual
ruleUnnamedIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnnamedIndividualAccess().getIndividualAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getUnnamedIndividualAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnnamedIndividualAccess().getAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0());
				}
				lv_assignments_2_0=ruleSimpleAttributeAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnnamedIndividualRule());
					}
					add(
						$current,
						"assignments",
						lv_assignments_2_0,
						"br.ufes.inf.nemo.ml2.ML2.SimpleAttributeAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getUnnamedIndividualAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSimpleAttributeAssignment
entryRuleSimpleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleAttributeAssignmentRule()); }
	iv_ruleSimpleAttributeAssignment=ruleSimpleAttributeAssignment
	{ $current=$iv_ruleSimpleAttributeAssignment.current; }
	EOF;

// Rule SimpleAttributeAssignment
ruleSimpleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSimpleAttributeAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getEntityAssignmentsIndividualCrossReference_2_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_1_0());
					}
					lv_unnamedIndividualAssignments_3_0=ruleUnnamedIndividual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleAttributeAssignmentRule());
						}
						add(
							$current,
							"unnamedIndividualAssignments",
							lv_unnamedIndividualAssignments_3_0,
							"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getLiteralAssignmentsLiteralParserRuleCall_2_2_0());
					}
					lv_literalAssignments_4_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleAttributeAssignmentRule());
						}
						add(
							$current,
							"literalAssignments",
							lv_literalAssignments_4_0,
							"br.ufes.inf.nemo.ml2.ML2.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_5='{'
				{
					newLeafNode(otherlv_5, grammarAccess.getSimpleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_2_3_0());
				}
				(
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_0_0());
								}
								lv_literalAssignments_6_0=ruleLiteral
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSimpleAttributeAssignmentRule());
									}
									add(
										$current,
										"literalAssignments",
										lv_literalAssignments_6_0,
										"br.ufes.inf.nemo.ml2.ML2.Literal");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							otherlv_7=','
							{
								newLeafNode(otherlv_7, grammarAccess.getSimpleAttributeAssignmentAccess().getCommaKeyword_2_3_1_0_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getLiteralAssignmentsLiteralParserRuleCall_2_3_1_0_1_1_0());
									}
									lv_literalAssignments_8_0=ruleLiteral
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSimpleAttributeAssignmentRule());
										}
										add(
											$current,
											"literalAssignments",
											lv_literalAssignments_8_0,
											"br.ufes.inf.nemo.ml2.ML2.Literal");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)
					    |
					(
						(
							(
								(
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getSimpleAttributeAssignmentRule());
										}
									}
									{
										newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getEntityAssignmentsIndividualCrossReference_2_3_1_1_0_0_0());
									}
									ruleQualifiedName
									{
										afterParserOrEnumRuleCall();
									}
								)
							)
							    |
							(
								(
									{
										newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_0_1_0());
									}
									lv_unnamedIndividualAssignments_10_0=ruleUnnamedIndividual
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSimpleAttributeAssignmentRule());
										}
										add(
											$current,
											"unnamedIndividualAssignments",
											lv_unnamedIndividualAssignments_10_0,
											"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
						(
							otherlv_11=','
							{
								newLeafNode(otherlv_11, grammarAccess.getSimpleAttributeAssignmentAccess().getCommaKeyword_2_3_1_1_1_0());
							}
							(
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getSimpleAttributeAssignmentRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getEntityAssignmentsIndividualCrossReference_2_3_1_1_1_1_0_0());
										}
										ruleQualifiedName
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								    |
								(
									(
										{
											newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getUnnamedIndividualAssignmentsUnnamedIndividualParserRuleCall_2_3_1_1_1_1_1_0());
										}
										lv_unnamedIndividualAssignments_13_0=ruleUnnamedIndividual
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSimpleAttributeAssignmentRule());
											}
											add(
												$current,
												"unnamedIndividualAssignments",
												lv_unnamedIndividualAssignments_13_0,
												"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)
						)*
					)
				)?
				otherlv_14='}'
				{
					newLeafNode(otherlv_14, grammarAccess.getSimpleAttributeAssignmentAccess().getRightCurlyBracketKeyword_2_3_2());
				}
			)
		)
	)
;

// Rule CategorizationType
ruleCategorizationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='categorizes'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getCATEGORIZEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCategorizationTypeAccess().getCATEGORIZEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='completeCategorizes'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCategorizationTypeAccess().getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='disjointCategorizes'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCategorizationTypeAccess().getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='partitions'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getPARTITIONEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCategorizationTypeAccess().getPARTITIONEREnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule RegularityFeatureType
ruleRegularityFeatureType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='determinesValue'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_VALUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_VALUEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='determinesType'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_TYPEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_TYPEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='determinesMinValue'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MIN_VALUEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MIN_VALUEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='determinesAllowedValues'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='determinesAllowedTypes'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='determinesMaxValue'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MAX_VALUEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MAX_VALUEEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
