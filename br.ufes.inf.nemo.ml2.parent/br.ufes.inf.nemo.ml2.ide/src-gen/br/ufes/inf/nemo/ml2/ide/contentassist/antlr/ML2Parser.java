/*
 * generated by Xtext 2.21.0
 */
package br.ufes.inf.nemo.ml2.ide.contentassist.antlr;

import br.ufes.inf.nemo.ml2.ide.contentassist.antlr.internal.InternalML2Parser;
import br.ufes.inf.nemo.ml2.services.ML2GrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ML2Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ML2GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ML2GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModelAccess().getAlternatives_3(), "rule__Model__Alternatives_3");
			builder.put(grammarAccess.getModelElementAccess().getAlternatives_0(), "rule__ModelElement__Alternatives_0");
			builder.put(grammarAccess.getEntityDeclarationAccess().getAlternatives(), "rule__EntityDeclaration__Alternatives");
			builder.put(grammarAccess.getClassAccess().getAlternatives_0(), "rule__Class__Alternatives_0");
			builder.put(grammarAccess.getClassAccess().getAlternatives_1_1(), "rule__Class__Alternatives_1_1");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getAlternatives_0(), "rule__FOClassOrDataType__Alternatives_0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getAlternatives_0(), "rule__HigherOrderClass__Alternatives_0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getAlternatives_4(), "rule__HigherOrderClass__Alternatives_4");
			builder.put(grammarAccess.getFeatureAccess().getAlternatives(), "rule__Feature__Alternatives");
			builder.put(grammarAccess.getCommonFeatureAccess().getAlternatives(), "rule__CommonFeature__Alternatives");
			builder.put(grammarAccess.getRegularityFeatureAccess().getAlternatives(), "rule__RegularityFeature__Alternatives");
			builder.put(grammarAccess.getAttributeAccess().getAlternatives_3(), "rule__Attribute__Alternatives_3");
			builder.put(grammarAccess.getRegularityAttributeAccess().getAlternatives_4(), "rule__RegularityAttribute__Alternatives_4");
			builder.put(grammarAccess.getFeatureAssignmentAccess().getAlternatives(), "rule__FeatureAssignment__Alternatives");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getAlternatives_3(), "rule__ReferenceAssignment__Alternatives_3");
			builder.put(grammarAccess.getCategorizationTypeAccess().getAlternatives(), "rule__CategorizationType__Alternatives");
			builder.put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
			builder.put(grammarAccess.getRegularityFeatureTypeAccess().getAlternatives(), "rule__RegularityFeatureType__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getModelAccess().getGroup_3_0(), "rule__Model__Group_3_0__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getModelElementAccess().getGroup(), "rule__ModelElement__Group__0");
			builder.put(grammarAccess.getIndividualAccess().getGroup(), "rule__Individual__Group__0");
			builder.put(grammarAccess.getIndividualAccess().getGroup_4(), "rule__Individual__Group_4__0");
			builder.put(grammarAccess.getIndividualAccess().getGroup_5(), "rule__Individual__Group_5__0");
			builder.put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
			builder.put(grammarAccess.getClassAccess().getGroup_1(), "rule__Class__Group_1__0");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getGroup(), "rule__FOClassOrDataType__Group__0");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getGroup_1(), "rule__FOClassOrDataType__Group_1__0");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getGroup_1_2(), "rule__FOClassOrDataType__Group_1_2__0");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getGroup_2(), "rule__FOClassOrDataType__Group_2__0");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getGroup_2_2(), "rule__FOClassOrDataType__Group_2_2__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup(), "rule__HigherOrderClass__Group__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_1(), "rule__HigherOrderClass__Group_1__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_1_2(), "rule__HigherOrderClass__Group_1_2__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_2(), "rule__HigherOrderClass__Group_2__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_2_2(), "rule__HigherOrderClass__Group_2_2__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_3(), "rule__HigherOrderClass__Group_3__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_3_2(), "rule__HigherOrderClass__Group_3_2__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_4_0(), "rule__HigherOrderClass__Group_4_0__0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getGroup_4_1(), "rule__HigherOrderClass__Group_4_1__0");
			builder.put(grammarAccess.getFOClassAccess().getGroup(), "rule__FOClass__Group__0");
			builder.put(grammarAccess.getDataTypeAccess().getGroup(), "rule__DataType__Group__0");
			builder.put(grammarAccess.getHOClassAccess().getGroup(), "rule__HOClass__Group__0");
			builder.put(grammarAccess.getOrderlessClassAccess().getGroup(), "rule__OrderlessClass__Group__0");
			builder.put(grammarAccess.getGeneralizationSetAccess().getGroup(), "rule__GeneralizationSet__Group__0");
			builder.put(grammarAccess.getGeneralizationSetAccess().getGroup_5(), "rule__GeneralizationSet__Group_5__0");
			builder.put(grammarAccess.getGeneralizationSetAccess().getGroup_8(), "rule__GeneralizationSet__Group_8__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup_4(), "rule__Attribute__Group_4__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup_4_2(), "rule__Attribute__Group_4_2__0");
			builder.put(grammarAccess.getReferenceAccess().getGroup(), "rule__Reference__Group__0");
			builder.put(grammarAccess.getReferenceAccess().getGroup_3(), "rule__Reference__Group_3__0");
			builder.put(grammarAccess.getReferenceAccess().getGroup_3_2(), "rule__Reference__Group_3_2__0");
			builder.put(grammarAccess.getReferenceAccess().getGroup_4(), "rule__Reference__Group_4__0");
			builder.put(grammarAccess.getRegularityAttributeAccess().getGroup(), "rule__RegularityAttribute__Group__0");
			builder.put(grammarAccess.getRegularityAttributeAccess().getGroup_5(), "rule__RegularityAttribute__Group_5__0");
			builder.put(grammarAccess.getRegularityAttributeAccess().getGroup_5_2(), "rule__RegularityAttribute__Group_5_2__0");
			builder.put(grammarAccess.getRegularityReferenceAccess().getGroup(), "rule__RegularityReference__Group__0");
			builder.put(grammarAccess.getRegularityReferenceAccess().getGroup_4(), "rule__RegularityReference__Group_4__0");
			builder.put(grammarAccess.getRegularityReferenceAccess().getGroup_4_2(), "rule__RegularityReference__Group_4_2__0");
			builder.put(grammarAccess.getRegularityReferenceAccess().getGroup_5(), "rule__RegularityReference__Group_5__0");
			builder.put(grammarAccess.getSingleAttributeAssignmentAccess().getGroup(), "rule__SingleAttributeAssignment__Group__0");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getGroup(), "rule__ReferenceAssignment__Group__0");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getGroup_3_1(), "rule__ReferenceAssignment__Group_3_1__0");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getGroup_3_1_2(), "rule__ReferenceAssignment__Group_3_1_2__0");
			builder.put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
			builder.put(grammarAccess.getModelAccess().getIncludesAssignment_3_0_1(), "rule__Model__IncludesAssignment_3_0_1");
			builder.put(grammarAccess.getModelAccess().getElementsAssignment_3_1(), "rule__Model__ElementsAssignment_3_1");
			builder.put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getIndividualAccess().getNameAssignment_1(), "rule__Individual__NameAssignment_1");
			builder.put(grammarAccess.getIndividualAccess().getInstantiatesAssignment_3(), "rule__Individual__InstantiatesAssignment_3");
			builder.put(grammarAccess.getIndividualAccess().getInstantiatesAssignment_4_1(), "rule__Individual__InstantiatesAssignment_4_1");
			builder.put(grammarAccess.getIndividualAccess().getAssignmentsAssignment_5_1(), "rule__Individual__AssignmentsAssignment_5_1");
			builder.put(grammarAccess.getClassAccess().getAssignmentsAssignment_1_1_0(), "rule__Class__AssignmentsAssignment_1_1_0");
			builder.put(grammarAccess.getClassAccess().getFeaturesAssignment_1_1_1(), "rule__Class__FeaturesAssignment_1_1_1");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getInstantiatesAssignment_1_1(), "rule__FOClassOrDataType__InstantiatesAssignment_1_1");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getInstantiatesAssignment_1_2_1(), "rule__FOClassOrDataType__InstantiatesAssignment_1_2_1");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getSuperClassesAssignment_2_1(), "rule__FOClassOrDataType__SuperClassesAssignment_2_1");
			builder.put(grammarAccess.getFOClassOrDataTypeAccess().getSuperClassesAssignment_2_2_1(), "rule__FOClassOrDataType__SuperClassesAssignment_2_2_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getInstantiatesAssignment_1_1(), "rule__HigherOrderClass__InstantiatesAssignment_1_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getInstantiatesAssignment_1_2_1(), "rule__HigherOrderClass__InstantiatesAssignment_1_2_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getSuperClassesAssignment_2_1(), "rule__HigherOrderClass__SuperClassesAssignment_2_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getSuperClassesAssignment_2_2_1(), "rule__HigherOrderClass__SuperClassesAssignment_2_2_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getSubordinatorsAssignment_3_1(), "rule__HigherOrderClass__SubordinatorsAssignment_3_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getSubordinatorsAssignment_3_2_1(), "rule__HigherOrderClass__SubordinatorsAssignment_3_2_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getCategorizationTypeAssignment_4_0_0(), "rule__HigherOrderClass__CategorizationTypeAssignment_4_0_0");
			builder.put(grammarAccess.getHigherOrderClassAccess().getCategorizedClassAssignment_4_0_1(), "rule__HigherOrderClass__CategorizedClassAssignment_4_0_1");
			builder.put(grammarAccess.getHigherOrderClassAccess().getPowertypeOfAssignment_4_1_1(), "rule__HigherOrderClass__PowertypeOfAssignment_4_1_1");
			builder.put(grammarAccess.getFOClassAccess().getNameAssignment_1(), "rule__FOClass__NameAssignment_1");
			builder.put(grammarAccess.getDataTypeAccess().getNameAssignment_1(), "rule__DataType__NameAssignment_1");
			builder.put(grammarAccess.getHOClassAccess().getOrderAssignment_1(), "rule__HOClass__OrderAssignment_1");
			builder.put(grammarAccess.getHOClassAccess().getNameAssignment_3(), "rule__HOClass__NameAssignment_3");
			builder.put(grammarAccess.getOrderlessClassAccess().getNameAssignment_2(), "rule__OrderlessClass__NameAssignment_2");
			builder.put(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_0(), "rule__GeneralizationSet__IsDisjointAssignment_0_0");
			builder.put(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_1(), "rule__GeneralizationSet__IsCompleteAssignment_0_1");
			builder.put(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2(), "rule__GeneralizationSet__NameAssignment_2");
			builder.put(grammarAccess.getGeneralizationSetAccess().getGeneralAssignment_4(), "rule__GeneralizationSet__GeneralAssignment_4");
			builder.put(grammarAccess.getGeneralizationSetAccess().getCategorizerAssignment_5_1(), "rule__GeneralizationSet__CategorizerAssignment_5_1");
			builder.put(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_7(), "rule__GeneralizationSet__SpecificsAssignment_7");
			builder.put(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_8_1(), "rule__GeneralizationSet__SpecificsAssignment_8_1");
			builder.put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
			builder.put(grammarAccess.getAttributeAccess().getPrimitiveTypeAssignment_3_0(), "rule__Attribute__PrimitiveTypeAssignment_3_0");
			builder.put(grammarAccess.getAttributeAccess().get_typeAssignment_3_1(), "rule__Attribute___typeAssignment_3_1");
			builder.put(grammarAccess.getAttributeAccess().getSubsetOfAssignment_4_1(), "rule__Attribute__SubsetOfAssignment_4_1");
			builder.put(grammarAccess.getAttributeAccess().getSubsetOfAssignment_4_2_1(), "rule__Attribute__SubsetOfAssignment_4_2_1");
			builder.put(grammarAccess.getReferenceAccess().getNameAssignment_1(), "rule__Reference__NameAssignment_1");
			builder.put(grammarAccess.getReferenceAccess().getSubsetOfAssignment_3_1(), "rule__Reference__SubsetOfAssignment_3_1");
			builder.put(grammarAccess.getReferenceAccess().getSubsetOfAssignment_3_2_1(), "rule__Reference__SubsetOfAssignment_3_2_1");
			builder.put(grammarAccess.getReferenceAccess().getOppositeToAssignment_4_1(), "rule__Reference__OppositeToAssignment_4_1");
			builder.put(grammarAccess.getRegularityAttributeAccess().getNameAssignment_2(), "rule__RegularityAttribute__NameAssignment_2");
			builder.put(grammarAccess.getRegularityAttributeAccess().getPrimitiveTypeAssignment_4_0(), "rule__RegularityAttribute__PrimitiveTypeAssignment_4_0");
			builder.put(grammarAccess.getRegularityAttributeAccess().get_typeAssignment_4_1(), "rule__RegularityAttribute___typeAssignment_4_1");
			builder.put(grammarAccess.getRegularityAttributeAccess().getSubsetOfAssignment_5_1(), "rule__RegularityAttribute__SubsetOfAssignment_5_1");
			builder.put(grammarAccess.getRegularityAttributeAccess().getSubsetOfAssignment_5_2_1(), "rule__RegularityAttribute__SubsetOfAssignment_5_2_1");
			builder.put(grammarAccess.getRegularityAttributeAccess().getRegularityTypeAssignment_6(), "rule__RegularityAttribute__RegularityTypeAssignment_6");
			builder.put(grammarAccess.getRegularityAttributeAccess().getRegulatedFeatureAssignment_7(), "rule__RegularityAttribute__RegulatedFeatureAssignment_7");
			builder.put(grammarAccess.getRegularityReferenceAccess().getNameAssignment_2(), "rule__RegularityReference__NameAssignment_2");
			builder.put(grammarAccess.getRegularityReferenceAccess().getSubsetOfAssignment_4_1(), "rule__RegularityReference__SubsetOfAssignment_4_1");
			builder.put(grammarAccess.getRegularityReferenceAccess().getSubsetOfAssignment_4_2_1(), "rule__RegularityReference__SubsetOfAssignment_4_2_1");
			builder.put(grammarAccess.getRegularityReferenceAccess().getOppositeToAssignment_5_1(), "rule__RegularityReference__OppositeToAssignment_5_1");
			builder.put(grammarAccess.getRegularityReferenceAccess().getRegularityTypeAssignment_6(), "rule__RegularityReference__RegularityTypeAssignment_6");
			builder.put(grammarAccess.getRegularityReferenceAccess().getRegulatedFeatureAssignment_7(), "rule__RegularityReference__RegulatedFeatureAssignment_7");
			builder.put(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAssignment_1(), "rule__SingleAttributeAssignment__AttributeAssignment_1");
			builder.put(grammarAccess.getSingleAttributeAssignmentAccess().getIndividualAssignmentsAssignment_3(), "rule__SingleAttributeAssignment__IndividualAssignmentsAssignment_3");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getReferenceAssignment_1(), "rule__ReferenceAssignment__ReferenceAssignment_1");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getAssignmentsAssignment_3_0(), "rule__ReferenceAssignment__AssignmentsAssignment_3_0");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getAssignmentsAssignment_3_1_1(), "rule__ReferenceAssignment__AssignmentsAssignment_3_1_1");
			builder.put(grammarAccess.getReferenceAssignmentAccess().getAssignmentsAssignment_3_1_2_1(), "rule__ReferenceAssignment__AssignmentsAssignment_3_1_2_1");
			builder.put(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), "rule__GeneralizationSet__UnorderedGroup_0");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ML2GrammarAccess grammarAccess;

	@Override
	protected InternalML2Parser createParser() {
		InternalML2Parser result = new InternalML2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ML2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ML2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
