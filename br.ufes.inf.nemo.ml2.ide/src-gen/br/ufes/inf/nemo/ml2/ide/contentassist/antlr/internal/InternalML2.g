/*
 * generated by Xtext 2.21.0
 */
grammar InternalML2;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package br.ufes.inf.nemo.ml2.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufes.inf.nemo.ml2.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.ufes.inf.nemo.ml2.services.ML2GrammarAccess;

}
@parser::members {
	private ML2GrammarAccess grammarAccess;

	public void setGrammarAccess(ML2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelElement
entryRuleModelElement
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelElementAccess().getGroup()); }
		(rule__ModelElement__Group__0)
		{ after(grammarAccess.getModelElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityDeclaration
entryRuleEntityDeclaration
:
{ before(grammarAccess.getEntityDeclarationRule()); }
	 ruleEntityDeclaration
{ after(grammarAccess.getEntityDeclarationRule()); } 
	 EOF 
;

// Rule EntityDeclaration
ruleEntityDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityDeclarationAccess().getAlternatives()); }
		(rule__EntityDeclaration__Alternatives)
		{ after(grammarAccess.getEntityDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getAlternatives()); }
		(rule__Class__Alternatives)
		{ after(grammarAccess.getClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFirstOrderClassOrDataType
entryRuleFirstOrderClassOrDataType
:
{ before(grammarAccess.getFirstOrderClassOrDataTypeRule()); }
	 ruleFirstOrderClassOrDataType
{ after(grammarAccess.getFirstOrderClassOrDataTypeRule()); } 
	 EOF 
;

// Rule FirstOrderClassOrDataType
ruleFirstOrderClassOrDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFirstOrderClassOrDataTypeAccess().getAlternatives()); }
		(rule__FirstOrderClassOrDataType__Alternatives)
		{ after(grammarAccess.getFirstOrderClassOrDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHigherOrderClass
entryRuleHigherOrderClass
:
{ before(grammarAccess.getHigherOrderClassRule()); }
	 ruleHigherOrderClass
{ after(grammarAccess.getHigherOrderClassRule()); } 
	 EOF 
;

// Rule HigherOrderClass
ruleHigherOrderClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHigherOrderClassAccess().getAlternatives()); }
		(rule__HigherOrderClass__Alternatives)
		{ after(grammarAccess.getHigherOrderClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndividual
entryRuleIndividual
:
{ before(grammarAccess.getIndividualRule()); }
	 ruleIndividual
{ after(grammarAccess.getIndividualRule()); } 
	 EOF 
;

// Rule Individual
ruleIndividual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndividualAccess().getGroup()); }
		(rule__Individual__Group__0)
		{ after(grammarAccess.getIndividualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderedClass
entryRuleOrderedClass
:
{ before(grammarAccess.getOrderedClassRule()); }
	 ruleOrderedClass
{ after(grammarAccess.getOrderedClassRule()); } 
	 EOF 
;

// Rule OrderedClass
ruleOrderedClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderedClassAccess().getAlternatives()); }
		(rule__OrderedClass__Alternatives)
		{ after(grammarAccess.getOrderedClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFirstOrderClass
entryRuleFirstOrderClass
:
{ before(grammarAccess.getFirstOrderClassRule()); }
	 ruleFirstOrderClass
{ after(grammarAccess.getFirstOrderClassRule()); } 
	 EOF 
;

// Rule FirstOrderClass
ruleFirstOrderClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getGroup()); }
		(rule__FirstOrderClass__Group__0)
		{ after(grammarAccess.getFirstOrderClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHighOrderClass
entryRuleHighOrderClass
:
{ before(grammarAccess.getHighOrderClassRule()); }
	 ruleHighOrderClass
{ after(grammarAccess.getHighOrderClassRule()); } 
	 EOF 
;

// Rule HighOrderClass
ruleHighOrderClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getGroup()); }
		(rule__HighOrderClass__Group__0)
		{ after(grammarAccess.getHighOrderClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderlessClass
entryRuleOrderlessClass
:
{ before(grammarAccess.getOrderlessClassRule()); }
	 ruleOrderlessClass
{ after(grammarAccess.getOrderlessClassRule()); } 
	 EOF 
;

// Rule OrderlessClass
ruleOrderlessClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getGroup()); }
		(rule__OrderlessClass__Group__0)
		{ after(grammarAccess.getOrderlessClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet
:
{ before(grammarAccess.getGeneralizationSetRule()); }
	 ruleGeneralizationSet
{ after(grammarAccess.getGeneralizationSetRule()); } 
	 EOF 
;

// Rule GeneralizationSet
ruleGeneralizationSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGroup()); }
		(rule__GeneralizationSet__Group__0)
		{ after(grammarAccess.getGeneralizationSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
		(rule__Feature__Alternatives)
		{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
		(rule__Attribute__Alternatives)
		{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularityAttribute
entryRuleRegularityAttribute
:
{ before(grammarAccess.getRegularityAttributeRule()); }
	 ruleRegularityAttribute
{ after(grammarAccess.getRegularityAttributeRule()); } 
	 EOF 
;

// Rule RegularityAttribute
ruleRegularityAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getGroup()); }
		(rule__RegularityAttribute__Group__0)
		{ after(grammarAccess.getRegularityAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getAlternatives()); }
		(rule__Reference__Alternatives)
		{ after(grammarAccess.getReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularityReference
entryRuleRegularityReference
:
{ before(grammarAccess.getRegularityReferenceRule()); }
	 ruleRegularityReference
{ after(grammarAccess.getRegularityReferenceRule()); } 
	 EOF 
;

// Rule RegularityReference
ruleRegularityReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getGroup()); }
		(rule__RegularityReference__Group__0)
		{ after(grammarAccess.getRegularityReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularityFeature
entryRuleRegularityFeature
:
{ before(grammarAccess.getRegularityFeatureRule()); }
	 ruleRegularityFeature
{ after(grammarAccess.getRegularityFeatureRule()); } 
	 EOF 
;

// Rule RegularityFeature
ruleRegularityFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularityFeatureAccess().getAlternatives()); }
		(rule__RegularityFeature__Alternatives)
		{ after(grammarAccess.getRegularityFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCARDINALITY
entryRuleCARDINALITY
:
{ before(grammarAccess.getCARDINALITYRule()); }
	 ruleCARDINALITY
{ after(grammarAccess.getCARDINALITYRule()); } 
	 EOF 
;

// Rule CARDINALITY
ruleCARDINALITY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCARDINALITYAccess().getAlternatives()); }
		(rule__CARDINALITY__Alternatives)
		{ after(grammarAccess.getCARDINALITYAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureAssignment
entryRuleFeatureAssignment
:
{ before(grammarAccess.getFeatureAssignmentRule()); }
	 ruleFeatureAssignment
{ after(grammarAccess.getFeatureAssignmentRule()); } 
	 EOF 
;

// Rule FeatureAssignment
ruleFeatureAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAssignmentAccess().getAlternatives()); }
		(rule__FeatureAssignment__Alternatives)
		{ after(grammarAccess.getFeatureAssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleReferenceAssignment
entryRuleSingleReferenceAssignment
:
{ before(grammarAccess.getSingleReferenceAssignmentRule()); }
	 ruleSingleReferenceAssignment
{ after(grammarAccess.getSingleReferenceAssignmentRule()); } 
	 EOF 
;

// Rule SingleReferenceAssignment
ruleSingleReferenceAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleReferenceAssignmentAccess().getGroup()); }
		(rule__SingleReferenceAssignment__Group__0)
		{ after(grammarAccess.getSingleReferenceAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleReferenceAssignment
entryRuleMultipleReferenceAssignment
:
{ before(grammarAccess.getMultipleReferenceAssignmentRule()); }
	 ruleMultipleReferenceAssignment
{ after(grammarAccess.getMultipleReferenceAssignmentRule()); } 
	 EOF 
;

// Rule MultipleReferenceAssignment
ruleMultipleReferenceAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getGroup()); }
		(rule__MultipleReferenceAssignment__Group__0)
		{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleAttributeAssignment
entryRuleSingleAttributeAssignment
:
{ before(grammarAccess.getSingleAttributeAssignmentRule()); }
	 ruleSingleAttributeAssignment
{ after(grammarAccess.getSingleAttributeAssignmentRule()); } 
	 EOF 
;

// Rule SingleAttributeAssignment
ruleSingleAttributeAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getGroup()); }
		(rule__SingleAttributeAssignment__Group__0)
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleAttributeAssignment
entryRuleMultipleAttributeAssignment
:
{ before(grammarAccess.getMultipleAttributeAssignmentRule()); }
	 ruleMultipleAttributeAssignment
{ after(grammarAccess.getMultipleAttributeAssignmentRule()); } 
	 EOF 
;

// Rule MultipleAttributeAssignment
ruleMultipleAttributeAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup()); }
		(rule__MultipleAttributeAssignment__Group__0)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMBER
entryRuleNUMBER
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMBERAccess().getGroup()); }
		(rule__NUMBER__Group__0)
		{ after(grammarAccess.getNUMBERAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnnamedIndividual
entryRuleUnnamedIndividual
:
{ before(grammarAccess.getUnnamedIndividualRule()); }
	 ruleUnnamedIndividual
{ after(grammarAccess.getUnnamedIndividualRule()); } 
	 EOF 
;

// Rule UnnamedIndividual
ruleUnnamedIndividual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnnamedIndividualAccess().getGroup()); }
		(rule__UnnamedIndividual__Group__0)
		{ after(grammarAccess.getUnnamedIndividualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleAttributeAssignment
entryRuleSimpleAttributeAssignment
:
{ before(grammarAccess.getSimpleAttributeAssignmentRule()); }
	 ruleSimpleAttributeAssignment
{ after(grammarAccess.getSimpleAttributeAssignmentRule()); } 
	 EOF 
;

// Rule SimpleAttributeAssignment
ruleSimpleAttributeAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleAttributeAssignmentAccess().getAlternatives()); }
		(rule__SimpleAttributeAssignment__Alternatives)
		{ after(grammarAccess.getSimpleAttributeAssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleSimpleAttributeAssignment
entryRuleSingleSimpleAttributeAssignment
:
{ before(grammarAccess.getSingleSimpleAttributeAssignmentRule()); }
	 ruleSingleSimpleAttributeAssignment
{ after(grammarAccess.getSingleSimpleAttributeAssignmentRule()); } 
	 EOF 
;

// Rule SingleSimpleAttributeAssignment
ruleSingleSimpleAttributeAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getGroup()); }
		(rule__SingleSimpleAttributeAssignment__Group__0)
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleSimpleAttributeAssignment
entryRuleMultipleSimpleAttributeAssignment
:
{ before(grammarAccess.getMultipleSimpleAttributeAssignmentRule()); }
	 ruleMultipleSimpleAttributeAssignment
{ after(grammarAccess.getMultipleSimpleAttributeAssignmentRule()); } 
	 EOF 
;

// Rule MultipleSimpleAttributeAssignment
ruleMultipleSimpleAttributeAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup()); }
		(rule__MultipleSimpleAttributeAssignment__Group__0)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintDeclaration
entryRuleConstraintDeclaration
:
{ before(grammarAccess.getConstraintDeclarationRule()); }
	 ruleConstraintDeclaration
{ after(grammarAccess.getConstraintDeclarationRule()); } 
	 EOF 
;

// Rule ConstraintDeclaration
ruleConstraintDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintDeclarationAccess().getAlternatives()); }
		(rule__ConstraintDeclaration__Alternatives)
		{ after(grammarAccess.getConstraintDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariantConstraint
entryRuleInvariantConstraint
:
{ before(grammarAccess.getInvariantConstraintRule()); }
	 ruleInvariantConstraint
{ after(grammarAccess.getInvariantConstraintRule()); } 
	 EOF 
;

// Rule InvariantConstraint
ruleInvariantConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getGroup()); }
		(rule__InvariantConstraint__Group__0)
		{ after(grammarAccess.getInvariantConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerivationConstraint
entryRuleDerivationConstraint
:
{ before(grammarAccess.getDerivationConstraintRule()); }
	 ruleDerivationConstraint
{ after(grammarAccess.getDerivationConstraintRule()); } 
	 EOF 
;

// Rule DerivationConstraint
ruleDerivationConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerivationConstraintAccess().getGroup()); }
		(rule__DerivationConstraint__Group__0)
		{ after(grammarAccess.getDerivationConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclExpression
entryRuleOclExpression
:
{ before(grammarAccess.getOclExpressionRule()); }
	 ruleOclExpression
{ after(grammarAccess.getOclExpressionRule()); } 
	 EOF 
;

// Rule OclExpression
ruleOclExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclExpressionAccess().getAlternatives()); }
		(rule__OclExpression__Alternatives)
		{ after(grammarAccess.getOclExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetExpression
entryRuleLetExpression
:
{ before(grammarAccess.getLetExpressionRule()); }
	 ruleLetExpression
{ after(grammarAccess.getLetExpressionRule()); } 
	 EOF 
;

// Rule LetExpression
ruleLetExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetExpressionAccess().getGroup()); }
		(rule__LetExpression__Group__0)
		{ after(grammarAccess.getLetExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression
:
{ before(grammarAccess.getImpliesExpressionRule()); }
	 ruleImpliesExpression
{ after(grammarAccess.getImpliesExpressionRule()); } 
	 EOF 
;

// Rule ImpliesExpression
ruleImpliesExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getGroup()); }
		(rule__ImpliesExpression__Group__0)
		{ after(grammarAccess.getImpliesExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorExpression
entryRuleXorExpression
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
		(rule__XorExpression__Group__0)
		{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup()); }
		(rule__ComparisonExpression__Group__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonOperation
entryRuleComparisonOperation
:
{ before(grammarAccess.getComparisonOperationRule()); }
	 ruleComparisonOperation
{ after(grammarAccess.getComparisonOperationRule()); } 
	 EOF 
;

// Rule ComparisonOperation
ruleComparisonOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonOperationAccess().getGroup()); }
		(rule__ComparisonOperation__Group__0)
		{ after(grammarAccess.getComparisonOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOperation
entryRuleRelationalOperation
:
{ before(grammarAccess.getRelationalOperationRule()); }
	 ruleRelationalOperation
{ after(grammarAccess.getRelationalOperationRule()); } 
	 EOF 
;

// Rule RelationalOperation
ruleRelationalOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOperationAccess().getGroup()); }
		(rule__RelationalOperation__Group__0)
		{ after(grammarAccess.getRelationalOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression
:
{ before(grammarAccess.getAdditionExpressionRule()); }
	 ruleAdditionExpression
{ after(grammarAccess.getAdditionExpressionRule()); } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getGroup()); }
		(rule__AdditionExpression__Group__0)
		{ after(grammarAccess.getAdditionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionOperation
entryRuleAdditionOperation
:
{ before(grammarAccess.getAdditionOperationRule()); }
	 ruleAdditionOperation
{ after(grammarAccess.getAdditionOperationRule()); } 
	 EOF 
;

// Rule AdditionOperation
ruleAdditionOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionOperationAccess().getGroup()); }
		(rule__AdditionOperation__Group__0)
		{ after(grammarAccess.getAdditionOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression
:
{ before(grammarAccess.getMultiplicationExpressionRule()); }
	 ruleMultiplicationExpression
{ after(grammarAccess.getMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
		(rule__MultiplicationExpression__Group__0)
		{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermExpression
entryRuleTermExpression
:
{ before(grammarAccess.getTermExpressionRule()); }
	 ruleTermExpression
{ after(grammarAccess.getTermExpressionRule()); } 
	 EOF 
;

// Rule TermExpression
ruleTermExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermExpressionAccess().getAlternatives()); }
		(rule__TermExpression__Alternatives)
		{ after(grammarAccess.getTermExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallExpression
entryRuleCallExpression
:
{ before(grammarAccess.getCallExpressionRule()); }
	 ruleCallExpression
{ after(grammarAccess.getCallExpressionRule()); } 
	 EOF 
;

// Rule CallExpression
ruleCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallExpressionAccess().getGroup()); }
		(rule__CallExpression__Group__0)
		{ after(grammarAccess.getCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallOperation
entryRuleCallOperation
:
{ before(grammarAccess.getCallOperationRule()); }
	 ruleCallOperation
{ after(grammarAccess.getCallOperationRule()); } 
	 EOF 
;

// Rule CallOperation
ruleCallOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallOperationAccess().getAlternatives()); }
		(rule__CallOperation__Alternatives)
		{ after(grammarAccess.getCallOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDotOperation
entryRuleDotOperation
:
{ before(grammarAccess.getDotOperationRule()); }
	 ruleDotOperation
{ after(grammarAccess.getDotOperationRule()); } 
	 EOF 
;

// Rule DotOperation
ruleDotOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDotOperationAccess().getGroup()); }
		(rule__DotOperation__Group__0)
		{ after(grammarAccess.getDotOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrowOperation
entryRuleArrowOperation
:
{ before(grammarAccess.getArrowOperationRule()); }
	 ruleArrowOperation
{ after(grammarAccess.getArrowOperationRule()); } 
	 EOF 
;

// Rule ArrowOperation
ruleArrowOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrowOperationAccess().getGroup()); }
		(rule__ArrowOperation__Group__0)
		{ after(grammarAccess.getArrowOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltInOperation
entryRuleBuiltInOperation
:
{ before(grammarAccess.getBuiltInOperationRule()); }
	 ruleBuiltInOperation
{ after(grammarAccess.getBuiltInOperationRule()); } 
	 EOF 
;

// Rule BuiltInOperation
ruleBuiltInOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltInOperationAccess().getAlternatives()); }
		(rule__BuiltInOperation__Alternatives)
		{ after(grammarAccess.getBuiltInOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnarySetOperation
entryRuleUnarySetOperation
:
{ before(grammarAccess.getUnarySetOperationRule()); }
	 ruleUnarySetOperation
{ after(grammarAccess.getUnarySetOperationRule()); } 
	 EOF 
;

// Rule UnarySetOperation
ruleUnarySetOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnarySetOperationAccess().getGroup()); }
		(rule__UnarySetOperation__Group__0)
		{ after(grammarAccess.getUnarySetOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinarySetOperation
entryRuleBinarySetOperation
:
{ before(grammarAccess.getBinarySetOperationRule()); }
	 ruleBinarySetOperation
{ after(grammarAccess.getBinarySetOperationRule()); } 
	 EOF 
;

// Rule BinarySetOperation
ruleBinarySetOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinarySetOperationAccess().getGroup()); }
		(rule__BinarySetOperation__Group__0)
		{ after(grammarAccess.getBinarySetOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryIteration
entryRuleUnaryIteration
:
{ before(grammarAccess.getUnaryIterationRule()); }
	 ruleUnaryIteration
{ after(grammarAccess.getUnaryIterationRule()); } 
	 EOF 
;

// Rule UnaryIteration
ruleUnaryIteration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryIterationAccess().getGroup()); }
		(rule__UnaryIteration__Group__0)
		{ after(grammarAccess.getUnaryIterationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryIteration
entryRuleBinaryIteration
:
{ before(grammarAccess.getBinaryIterationRule()); }
	 ruleBinaryIteration
{ after(grammarAccess.getBinaryIterationRule()); } 
	 EOF 
;

// Rule BinaryIteration
ruleBinaryIteration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryIterationAccess().getGroup()); }
		(rule__BinaryIteration__Group__0)
		{ after(grammarAccess.getBinaryIterationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
		(rule__LiteralExpression__Alternatives)
		{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveLiteralExpression
entryRulePrimitiveLiteralExpression
:
{ before(grammarAccess.getPrimitiveLiteralExpressionRule()); }
	 rulePrimitiveLiteralExpression
{ after(grammarAccess.getPrimitiveLiteralExpressionRule()); } 
	 EOF 
;

// Rule PrimitiveLiteralExpression
rulePrimitiveLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveLiteralExpressionAccess().getAlternatives()); }
		(rule__PrimitiveLiteralExpression__Alternatives)
		{ after(grammarAccess.getPrimitiveLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullLiteralExpression
entryRuleNullLiteralExpression
:
{ before(grammarAccess.getNullLiteralExpressionRule()); }
	 ruleNullLiteralExpression
{ after(grammarAccess.getNullLiteralExpressionRule()); } 
	 EOF 
;

// Rule NullLiteralExpression
ruleNullLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullLiteralExpressionAccess().getNullSymbolAssignment()); }
		(rule__NullLiteralExpression__NullSymbolAssignment)
		{ after(grammarAccess.getNullLiteralExpressionAccess().getNullSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression
:
{ before(grammarAccess.getBooleanLiteralExpressionRule()); }
	 ruleBooleanLiteralExpression
{ after(grammarAccess.getBooleanLiteralExpressionRule()); } 
	 EOF 
;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralExpressionAccess().getBooleanSymbolAssignment()); }
		(rule__BooleanLiteralExpression__BooleanSymbolAssignment)
		{ after(grammarAccess.getBooleanLiteralExpressionAccess().getBooleanSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberLiteralExpression
entryRuleNumberLiteralExpression
:
{ before(grammarAccess.getNumberLiteralExpressionRule()); }
	 ruleNumberLiteralExpression
{ after(grammarAccess.getNumberLiteralExpressionRule()); } 
	 EOF 
;

// Rule NumberLiteralExpression
ruleNumberLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberLiteralExpressionAccess().getNumberSymbolAssignment()); }
		(rule__NumberLiteralExpression__NumberSymbolAssignment)
		{ after(grammarAccess.getNumberLiteralExpressionAccess().getNumberSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression
:
{ before(grammarAccess.getStringLiteralExpressionRule()); }
	 ruleStringLiteralExpression
{ after(grammarAccess.getStringLiteralExpressionRule()); } 
	 EOF 
;

// Rule StringLiteralExpression
ruleStringLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralExpressionAccess().getStringSymbolAssignment()); }
		(rule__StringLiteralExpression__StringSymbolAssignment)
		{ after(grammarAccess.getStringLiteralExpressionAccess().getStringSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionLiteralExpression
entryRuleCollectionLiteralExpression
:
{ before(grammarAccess.getCollectionLiteralExpressionRule()); }
	 ruleCollectionLiteralExpression
{ after(grammarAccess.getCollectionLiteralExpressionRule()); } 
	 EOF 
;

// Rule CollectionLiteralExpression
ruleCollectionLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionLiteralExpressionAccess().getGroup()); }
		(rule__CollectionLiteralExpression__Group__0)
		{ after(grammarAccess.getCollectionLiteralExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLiteralExpression
entryRuleTypeLiteralExpression
:
{ before(grammarAccess.getTypeLiteralExpressionRule()); }
	 ruleTypeLiteralExpression
{ after(grammarAccess.getTypeLiteralExpressionRule()); } 
	 EOF 
;

// Rule TypeLiteralExpression
ruleTypeLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLiteralExpressionAccess().getAlternatives()); }
		(rule__TypeLiteralExpression__Alternatives)
		{ after(grammarAccess.getTypeLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleLiteralExpression
entryRuleTupleLiteralExpression
:
{ before(grammarAccess.getTupleLiteralExpressionRule()); }
	 ruleTupleLiteralExpression
{ after(grammarAccess.getTupleLiteralExpressionRule()); } 
	 EOF 
;

// Rule TupleLiteralExpression
ruleTupleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleLiteralExpressionAccess().getGroup()); }
		(rule__TupleLiteralExpression__Group__0)
		{ after(grammarAccess.getTupleLiteralExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableExpression
entryRuleVariableExpression
:
{ before(grammarAccess.getVariableExpressionRule()); }
	 ruleVariableExpression
{ after(grammarAccess.getVariableExpressionRule()); } 
	 EOF 
;

// Rule VariableExpression
ruleVariableExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getAlternatives()); }
		(rule__VariableExpression__Alternatives)
		{ after(grammarAccess.getVariableExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN_LITERAL
entryRuleBOOLEAN_LITERAL
:
{ before(grammarAccess.getBOOLEAN_LITERALRule()); }
	 ruleBOOLEAN_LITERAL
{ after(grammarAccess.getBOOLEAN_LITERALRule()); } 
	 EOF 
;

// Rule BOOLEAN_LITERAL
ruleBOOLEAN_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEAN_LITERALAccess().getAlternatives()); }
		(rule__BOOLEAN_LITERAL__Alternatives)
		{ after(grammarAccess.getBOOLEAN_LITERALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMBER_LITERAL
entryRuleNUMBER_LITERAL
:
{ before(grammarAccess.getNUMBER_LITERALRule()); }
	 ruleNUMBER_LITERAL
{ after(grammarAccess.getNUMBER_LITERALRule()); } 
	 EOF 
;

// Rule NUMBER_LITERAL
ruleNUMBER_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMBER_LITERALAccess().getGroup()); }
		(rule__NUMBER_LITERAL__Group__0)
		{ after(grammarAccess.getNUMBER_LITERALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveTypeName
entryRulePrimitiveTypeName
:
{ before(grammarAccess.getPrimitiveTypeNameRule()); }
	 rulePrimitiveTypeName
{ after(grammarAccess.getPrimitiveTypeNameRule()); } 
	 EOF 
;

// Rule PrimitiveTypeName
rulePrimitiveTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getAlternatives()); }
		(rule__PrimitiveTypeName__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionTypeName
entryRuleCollectionTypeName
:
{ before(grammarAccess.getCollectionTypeNameRule()); }
	 ruleCollectionTypeName
{ after(grammarAccess.getCollectionTypeNameRule()); } 
	 EOF 
;

// Rule CollectionTypeName
ruleCollectionTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTypeNameAccess().getGroup()); }
		(rule__CollectionTypeName__Group__0)
		{ after(grammarAccess.getCollectionTypeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleTypeName
entryRuleTupleTypeName
:
{ before(grammarAccess.getTupleTypeNameRule()); }
	 ruleTupleTypeName
{ after(grammarAccess.getTupleTypeNameRule()); } 
	 EOF 
;

// Rule TupleTypeName
ruleTupleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTypeNameAccess().getGroup()); }
		(rule__TupleTypeName__Group__0)
		{ after(grammarAccess.getTupleTypeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOclTypeName
entryRuleOclTypeName
:
{ before(grammarAccess.getOclTypeNameRule()); }
	 ruleOclTypeName
{ after(grammarAccess.getOclTypeNameRule()); } 
	 EOF 
;

// Rule OclTypeName
ruleOclTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOclTypeNameAccess().getAlternatives()); }
		(rule__OclTypeName__Alternatives)
		{ after(grammarAccess.getOclTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeName
entryRuleDataTypeName
:
{ before(grammarAccess.getDataTypeNameRule()); }
	 ruleDataTypeName
{ after(grammarAccess.getDataTypeNameRule()); } 
	 EOF 
;

// Rule DataTypeName
ruleDataTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeNameAccess().getTypenameAssignment()); }
		(rule__DataTypeName__TypenameAssignment)
		{ after(grammarAccess.getDataTypeNameAccess().getTypenameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CategorizationType
ruleCategorizationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCategorizationTypeAccess().getAlternatives()); }
		(rule__CategorizationType__Alternatives)
		{ after(grammarAccess.getCategorizationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PrimitiveType
rulePrimitiveType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RegularityFeatureType
ruleRegularityFeatureType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getAlternatives()); }
		(rule__RegularityFeatureType__Alternatives)
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisonOperator
ruleComparisonOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationalOperator
ruleRelationalOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
		(rule__RelationalOperator__Alternatives)
		{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdditionOperator
ruleAdditionOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getAlternatives()); }
		(rule__AdditionOperator__Alternatives)
		{ after(grammarAccess.getAdditionOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOperator
ruleUnaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnarySetOperator
ruleUnarySetOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnarySetOperatorAccess().getAlternatives()); }
		(rule__UnarySetOperator__Alternatives)
		{ after(grammarAccess.getUnarySetOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BinarySetOperator
ruleBinarySetOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getAlternatives()); }
		(rule__BinarySetOperator__Alternatives)
		{ after(grammarAccess.getBinarySetOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryIterator
ruleUnaryIterator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getAlternatives()); }
		(rule__UnaryIterator__Alternatives)
		{ after(grammarAccess.getUnaryIteratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGroup_3_0()); }
		(rule__Model__Group_3_0__0)
		{ after(grammarAccess.getModelAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment_3_1()); }
		(rule__Model__ElementsAssignment_3_1)
		{ after(grammarAccess.getModelAccess().getElementsAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getModelElementAccess().getImportParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getEntityDeclarationParserRuleCall_0_1()); }
		ruleEntityDeclaration
		{ after(grammarAccess.getModelElementAccess().getEntityDeclarationParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_0_2()); }
		ruleGeneralizationSet
		{ after(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getFeatureParserRuleCall_0_3()); }
		ruleFeature
		{ after(grammarAccess.getModelElementAccess().getFeatureParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getFeatureAssignmentParserRuleCall_0_4()); }
		ruleFeatureAssignment
		{ after(grammarAccess.getModelElementAccess().getFeatureAssignmentParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getConstraintDeclarationParserRuleCall_0_5()); }
		ruleConstraintDeclaration
		{ after(grammarAccess.getModelElementAccess().getConstraintDeclarationParserRuleCall_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityDeclarationAccess().getClassParserRuleCall_0()); }
		ruleClass
		{ after(grammarAccess.getEntityDeclarationAccess().getClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityDeclarationAccess().getIndividualParserRuleCall_1()); }
		ruleIndividual
		{ after(grammarAccess.getEntityDeclarationAccess().getIndividualParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getFirstOrderClassOrDataTypeParserRuleCall_0()); }
		ruleFirstOrderClassOrDataType
		{ after(grammarAccess.getClassAccess().getFirstOrderClassOrDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getHigherOrderClassParserRuleCall_1()); }
		ruleHigherOrderClass
		{ after(grammarAccess.getClassAccess().getHigherOrderClassParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClassOrDataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassOrDataTypeAccess().getFirstOrderClassParserRuleCall_0()); }
		ruleFirstOrderClass
		{ after(grammarAccess.getFirstOrderClassOrDataTypeAccess().getFirstOrderClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFirstOrderClassOrDataTypeAccess().getDataTypeParserRuleCall_1()); }
		ruleDataType
		{ after(grammarAccess.getFirstOrderClassOrDataTypeAccess().getDataTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderClass__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHigherOrderClassAccess().getHighOrderClassParserRuleCall_0()); }
		ruleHighOrderClass
		{ after(grammarAccess.getHigherOrderClassAccess().getHighOrderClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getHigherOrderClassAccess().getOrderlessClassParserRuleCall_1()); }
		ruleOrderlessClass
		{ after(grammarAccess.getHigherOrderClassAccess().getOrderlessClassParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderedClass__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderedClassAccess().getHighOrderClassParserRuleCall_0()); }
		ruleHighOrderClass
		{ after(grammarAccess.getOrderedClassAccess().getHighOrderClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderedClassAccess().getFirstOrderClassParserRuleCall_1()); }
		ruleFirstOrderClass
		{ after(grammarAccess.getOrderedClassAccess().getFirstOrderClassParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getAssignmentsAssignment_4_1_0()); }
		(rule__FirstOrderClass__AssignmentsAssignment_4_1_0)
		{ after(grammarAccess.getFirstOrderClassAccess().getAssignmentsAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getFeaturesAssignment_4_1_1()); }
		(rule__FirstOrderClass__FeaturesAssignment_4_1_1)
		{ after(grammarAccess.getFirstOrderClassAccess().getFeaturesAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAssignmentsAssignment_4_1_0()); }
		(rule__DataType__AssignmentsAssignment_4_1_0)
		{ after(grammarAccess.getDataTypeAccess().getAssignmentsAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getFeaturesAssignment_4_1_1()); }
		(rule__DataType__FeaturesAssignment_4_1_1)
		{ after(grammarAccess.getDataTypeAccess().getFeaturesAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getGroup_7_0()); }
		(rule__HighOrderClass__Group_7_0__0)
		{ after(grammarAccess.getHighOrderClassAccess().getGroup_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getHighOrderClassAccess().getGroup_7_1()); }
		(rule__HighOrderClass__Group_7_1__0)
		{ after(grammarAccess.getHighOrderClassAccess().getGroup_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Alternatives_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getAssignmentsAssignment_8_1_0()); }
		(rule__HighOrderClass__AssignmentsAssignment_8_1_0)
		{ after(grammarAccess.getHighOrderClassAccess().getAssignmentsAssignment_8_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHighOrderClassAccess().getFeaturesAssignment_8_1_1()); }
		(rule__HighOrderClass__FeaturesAssignment_8_1_1)
		{ after(grammarAccess.getHighOrderClassAccess().getFeaturesAssignment_8_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getGroup_6_0()); }
		(rule__OrderlessClass__Group_6_0__0)
		{ after(grammarAccess.getOrderlessClassAccess().getGroup_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderlessClassAccess().getGroup_6_1()); }
		(rule__OrderlessClass__Group_6_1__0)
		{ after(grammarAccess.getOrderlessClassAccess().getGroup_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Alternatives_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getAssignmentsAssignment_7_1_0()); }
		(rule__OrderlessClass__AssignmentsAssignment_7_1_0)
		{ after(grammarAccess.getOrderlessClassAccess().getAssignmentsAssignment_7_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderlessClassAccess().getFeaturesAssignment_7_1_1()); }
		(rule__OrderlessClass__FeaturesAssignment_7_1_1)
		{ after(grammarAccess.getOrderlessClassAccess().getFeaturesAssignment_7_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); }
		ruleAttribute
		{ after(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getReferenceParserRuleCall_1()); }
		ruleReference
		{ after(grammarAccess.getFeatureAccess().getReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getRegularityAttributeParserRuleCall_0()); }
		ruleRegularityAttribute
		{ after(grammarAccess.getAttributeAccess().getRegularityAttributeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
		(rule__Attribute__Group_1__0)
		{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getPrimitiveTypeAssignment_1_4_0()); }
		(rule__Attribute__PrimitiveTypeAssignment_1_4_0)
		{ after(grammarAccess.getAttributeAccess().getPrimitiveTypeAssignment_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().get_typeAssignment_1_4_1()); }
		(rule__Attribute___typeAssignment_1_4_1)
		{ after(grammarAccess.getAttributeAccess().get_typeAssignment_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getPrimitiveTypeAssignment_5_0()); }
		(rule__RegularityAttribute__PrimitiveTypeAssignment_5_0)
		{ after(grammarAccess.getRegularityAttributeAccess().getPrimitiveTypeAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityAttributeAccess().get_typeAssignment_5_1()); }
		(rule__RegularityAttribute___typeAssignment_5_1)
		{ after(grammarAccess.getRegularityAttributeAccess().get_typeAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getRegularityReferenceParserRuleCall_0()); }
		ruleRegularityReference
		{ after(grammarAccess.getReferenceAccess().getRegularityReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getGroup_1()); }
		(rule__Reference__Group_1__0)
		{ after(grammarAccess.getReferenceAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityFeature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityFeatureAccess().getRegularityAttributeParserRuleCall_0()); }
		ruleRegularityAttribute
		{ after(grammarAccess.getRegularityFeatureAccess().getRegularityAttributeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityFeatureAccess().getRegularityReferenceParserRuleCall_1()); }
		ruleRegularityReference
		{ after(grammarAccess.getRegularityFeatureAccess().getRegularityReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CARDINALITY__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCARDINALITYAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getCARDINALITYAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCARDINALITYAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getCARDINALITYAccess().getINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureAssignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAssignmentAccess().getSingleReferenceAssignmentParserRuleCall_0()); }
		ruleSingleReferenceAssignment
		{ after(grammarAccess.getFeatureAssignmentAccess().getSingleReferenceAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAssignmentAccess().getMultipleReferenceAssignmentParserRuleCall_1()); }
		ruleMultipleReferenceAssignment
		{ after(grammarAccess.getFeatureAssignmentAccess().getMultipleReferenceAssignmentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAssignmentAccess().getSingleAttributeAssignmentParserRuleCall_2()); }
		ruleSingleAttributeAssignment
		{ after(grammarAccess.getFeatureAssignmentAccess().getSingleAttributeAssignmentParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAssignmentAccess().getMultipleAttributeAssignmentParserRuleCall_3()); }
		ruleMultipleAttributeAssignment
		{ after(grammarAccess.getFeatureAssignmentAccess().getMultipleAttributeAssignmentParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getLiteralValuesAssignment_3_0()); }
		(rule__SingleAttributeAssignment__LiteralValuesAssignment_3_0)
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getLiteralValuesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesAssignment_3_1()); }
		(rule__SingleAttributeAssignment__DatatypeValuesAssignment_3_1)
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getUnnamedValuesAssignment_3_2()); }
		(rule__SingleAttributeAssignment__UnnamedValuesAssignment_3_2)
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getUnnamedValuesAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_0()); }
		(rule__MultipleAttributeAssignment__Group_4_0__0)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_1()); }
		(rule__MultipleAttributeAssignment__Group_4_1__0)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_2()); }
		(rule__MultipleAttributeAssignment__Group_4_2__0)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNUMBERParserRuleCall_1()); }
		ruleNUMBER
		{ after(grammarAccess.getLiteralAccess().getNUMBERParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBOOLEANParserRuleCall_2()); }
		ruleBOOLEAN
		{ after(grammarAccess.getLiteralAccess().getBOOLEANParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAttributeAssignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleAttributeAssignmentAccess().getSingleSimpleAttributeAssignmentParserRuleCall_0()); }
		ruleSingleSimpleAttributeAssignment
		{ after(grammarAccess.getSimpleAttributeAssignmentAccess().getSingleSimpleAttributeAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleAttributeAssignmentAccess().getMultipleSimpleAttributeAssignmentParserRuleCall_1()); }
		ruleMultipleSimpleAttributeAssignment
		{ after(grammarAccess.getSimpleAttributeAssignmentAccess().getMultipleSimpleAttributeAssignmentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getLiteralValuesAssignment_2_0()); }
		(rule__SingleSimpleAttributeAssignment__LiteralValuesAssignment_2_0)
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getLiteralValuesAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesAssignment_2_1()); }
		(rule__SingleSimpleAttributeAssignment__DatatypeValuesAssignment_2_1)
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getUnnamedValuesAssignment_2_2()); }
		(rule__SingleSimpleAttributeAssignment__UnnamedValuesAssignment_2_2)
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getUnnamedValuesAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_0()); }
		(rule__MultipleSimpleAttributeAssignment__Group_3_0__0)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_1()); }
		(rule__MultipleSimpleAttributeAssignment__Group_3_1__0)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_2()); }
		(rule__MultipleSimpleAttributeAssignment__Group_3_2__0)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintDeclarationAccess().getInvariantConstraintParserRuleCall_0()); }
		ruleInvariantConstraint
		{ after(grammarAccess.getConstraintDeclarationAccess().getInvariantConstraintParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintDeclarationAccess().getDerivationConstraintParserRuleCall_1()); }
		ruleDerivationConstraint
		{ after(grammarAccess.getConstraintDeclarationAccess().getDerivationConstraintParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclExpressionAccess().getLetExpressionParserRuleCall_0()); }
		ruleLetExpression
		{ after(grammarAccess.getOclExpressionAccess().getLetExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclExpressionAccess().getIfExpressionParserRuleCall_1()); }
		ruleIfExpression
		{ after(grammarAccess.getOclExpressionAccess().getIfExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOclExpressionAccess().getImpliesExpressionParserRuleCall_2()); }
		ruleImpliesExpression
		{ after(grammarAccess.getOclExpressionAccess().getImpliesExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermExpressionAccess().getCallExpressionParserRuleCall_0()); }
		(ruleCallExpression)
		{ after(grammarAccess.getTermExpressionAccess().getCallExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
		ruleLiteralExpression
		{ after(grammarAccess.getTermExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermExpressionAccess().getGroup_2()); }
		(rule__TermExpression__Group_2__0)
		{ after(grammarAccess.getTermExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallOperationAccess().getDotOperationParserRuleCall_0()); }
		ruleDotOperation
		{ after(grammarAccess.getCallOperationAccess().getDotOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallOperationAccess().getArrowOperationParserRuleCall_1()); }
		ruleArrowOperation
		{ after(grammarAccess.getCallOperationAccess().getArrowOperationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltInOperationAccess().getUnarySetOperationParserRuleCall_0()); }
		ruleUnarySetOperation
		{ after(grammarAccess.getBuiltInOperationAccess().getUnarySetOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBuiltInOperationAccess().getBinarySetOperationParserRuleCall_1()); }
		ruleBinarySetOperation
		{ after(grammarAccess.getBuiltInOperationAccess().getBinarySetOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBuiltInOperationAccess().getUnaryIterationParserRuleCall_2()); }
		ruleUnaryIteration
		{ after(grammarAccess.getBuiltInOperationAccess().getUnaryIterationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBuiltInOperationAccess().getBinaryIterationParserRuleCall_3()); }
		ruleBinaryIteration
		{ after(grammarAccess.getBuiltInOperationAccess().getBinaryIterationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getPrimitiveLiteralExpressionParserRuleCall_0()); }
		rulePrimitiveLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getPrimitiveLiteralExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getCollectionLiteralExpressionParserRuleCall_1()); }
		ruleCollectionLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getCollectionLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getTypeLiteralExpressionParserRuleCall_2()); }
		ruleTypeLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getTypeLiteralExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getTupleLiteralExpressionParserRuleCall_3()); }
		ruleTupleLiteralExpression
		{ after(grammarAccess.getLiteralExpressionAccess().getTupleLiteralExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveLiteralExpressionAccess().getNullLiteralExpressionParserRuleCall_0()); }
		ruleNullLiteralExpression
		{ after(grammarAccess.getPrimitiveLiteralExpressionAccess().getNullLiteralExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_1()); }
		ruleBooleanLiteralExpression
		{ after(grammarAccess.getPrimitiveLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveLiteralExpressionAccess().getNumberLiteralExpressionParserRuleCall_2()); }
		ruleNumberLiteralExpression
		{ after(grammarAccess.getPrimitiveLiteralExpressionAccess().getNumberLiteralExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_3()); }
		ruleStringLiteralExpression
		{ after(grammarAccess.getPrimitiveLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralExpressionAccess().getPrimitiveTypeNameParserRuleCall_0()); }
		rulePrimitiveTypeName
		{ after(grammarAccess.getTypeLiteralExpressionAccess().getPrimitiveTypeNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralExpressionAccess().getCollectionTypeNameParserRuleCall_1()); }
		ruleCollectionTypeName
		{ after(grammarAccess.getTypeLiteralExpressionAccess().getCollectionTypeNameParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralExpressionAccess().getTupleTypeNameParserRuleCall_2()); }
		ruleTupleTypeName
		{ after(grammarAccess.getTypeLiteralExpressionAccess().getTupleTypeNameParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralExpressionAccess().getOclTypeNameParserRuleCall_3()); }
		ruleOclTypeName
		{ after(grammarAccess.getTypeLiteralExpressionAccess().getOclTypeNameParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralExpressionAccess().getDataTypeNameParserRuleCall_4()); }
		ruleDataTypeName
		{ after(grammarAccess.getTypeLiteralExpressionAccess().getDataTypeNameParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getReferringVariableAssignment_0()); }
		(rule__VariableExpression__ReferringVariableAssignment_0)
		{ after(grammarAccess.getVariableExpressionAccess().getReferringVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableExpressionAccess().getReferringVariableAssignment_1()); }
		(rule__VariableExpression__ReferringVariableAssignment_1)
		{ after(grammarAccess.getVariableExpressionAccess().getReferringVariableAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEAN_LITERALAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBOOLEAN_LITERALAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEAN_LITERALAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBOOLEAN_LITERALAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameAssignment_0()); }
		(rule__PrimitiveTypeName__TypenameAssignment_0)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameAssignment_1()); }
		(rule__PrimitiveTypeName__TypenameAssignment_1)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameAssignment_2()); }
		(rule__PrimitiveTypeName__TypenameAssignment_2)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclTypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclTypeNameAccess().getTypenameAssignment_0()); }
		(rule__OclTypeName__TypenameAssignment_0)
		{ after(grammarAccess.getOclTypeNameAccess().getTypenameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOclTypeNameAccess().getTypenameAssignment_1()); }
		(rule__OclTypeName__TypenameAssignment_1)
		{ after(grammarAccess.getOclTypeNameAccess().getTypenameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CategorizationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCategorizationTypeAccess().getCATEGORIZEREnumLiteralDeclaration_0()); }
		('categorizes')
		{ after(grammarAccess.getCategorizationTypeAccess().getCATEGORIZEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCategorizationTypeAccess().getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1()); }
		('completeCategorizes')
		{ after(grammarAccess.getCategorizationTypeAccess().getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCategorizationTypeAccess().getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2()); }
		('disjointCategorizes')
		{ after(grammarAccess.getCategorizationTypeAccess().getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCategorizationTypeAccess().getPARTITIONEREnumLiteralDeclaration_3()); }
		('partitions')
		{ after(grammarAccess.getCategorizationTypeAccess().getPARTITIONEREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getPrimitiveTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getNUMBEREnumLiteralDeclaration_1()); }
		('Number')
		{ after(grammarAccess.getPrimitiveTypeAccess().getNUMBEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_2()); }
		('Boolean')
		{ after(grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityFeatureType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MAX_VALUEEnumLiteralDeclaration_0()); }
		('determinesMaxValue')
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MAX_VALUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MIN_VALUEEnumLiteralDeclaration_1()); }
		('determinesMinValue')
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MIN_VALUEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_VALUEEnumLiteralDeclaration_2()); }
		('determinesValue')
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_VALUEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3()); }
		('determinesAllowedValues')
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_TYPEEnumLiteralDeclaration_4()); }
		('determinesType')
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_TYPEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5()); }
		('determinesAllowedTypes')
		{ after(grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
		('<>')
		{ after(grammarAccess.getComparisonOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGREATEREnumLiteralDeclaration_0()); }
		('>')
		{ after(grammarAccess.getRelationalOperatorAccess().getGREATEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLESSEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getRelationalOperatorAccess().getLESSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGREATER_EQUALEnumLiteralDeclaration_2()); }
		('>=')
		{ after(grammarAccess.getRelationalOperatorAccess().getGREATER_EQUALEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLESS_EQUALEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getRelationalOperatorAccess().getLESS_EQUALEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAdditionOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAdditionOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
		('NONE')
		{ after(grammarAccess.getUnaryOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_1()); }
		('not')
		{ after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_2()); }
		('-')
		{ after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnarySetOperatorAccess().getSIZEEnumLiteralDeclaration_0()); }
		('size')
		{ after(grammarAccess.getUnarySetOperatorAccess().getSIZEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnarySetOperatorAccess().getIS_EMPTYEnumLiteralDeclaration_1()); }
		('isEmpty')
		{ after(grammarAccess.getUnarySetOperatorAccess().getIS_EMPTYEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnarySetOperatorAccess().getNOT_EMPTYEnumLiteralDeclaration_2()); }
		('notEmpty')
		{ after(grammarAccess.getUnarySetOperatorAccess().getNOT_EMPTYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnarySetOperatorAccess().getSUMEnumLiteralDeclaration_3()); }
		('sum')
		{ after(grammarAccess.getUnarySetOperatorAccess().getSUMEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getINCLUDESEnumLiteralDeclaration_0()); }
		('includes')
		{ after(grammarAccess.getBinarySetOperatorAccess().getINCLUDESEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getINCLUDES_ALLEnumLiteralDeclaration_1()); }
		('includesAll')
		{ after(grammarAccess.getBinarySetOperatorAccess().getINCLUDES_ALLEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getEXCLUDESEnumLiteralDeclaration_2()); }
		('excludes')
		{ after(grammarAccess.getBinarySetOperatorAccess().getEXCLUDESEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getEXCLUDES_ALLEnumLiteralDeclaration_3()); }
		('excludesAll')
		{ after(grammarAccess.getBinarySetOperatorAccess().getEXCLUDES_ALLEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getINCLUDINGEnumLiteralDeclaration_4()); }
		('including')
		{ after(grammarAccess.getBinarySetOperatorAccess().getINCLUDINGEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getEXCLUDINGEnumLiteralDeclaration_5()); }
		('excluding')
		{ after(grammarAccess.getBinarySetOperatorAccess().getEXCLUDINGEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getUNIONEnumLiteralDeclaration_6()); }
		('union')
		{ after(grammarAccess.getBinarySetOperatorAccess().getUNIONEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getINTERSECTIONEnumLiteralDeclaration_7()); }
		('intersection')
		{ after(grammarAccess.getBinarySetOperatorAccess().getINTERSECTIONEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getBinarySetOperatorAccess().getSYMMETRIC_DIFFERENCEEnumLiteralDeclaration_8()); }
		('symmetricDifference')
		{ after(grammarAccess.getBinarySetOperatorAccess().getSYMMETRIC_DIFFERENCEEnumLiteralDeclaration_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIterator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getCOUNTEnumLiteralDeclaration_0()); }
		('count')
		{ after(grammarAccess.getUnaryIteratorAccess().getCOUNTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getEXISTSEnumLiteralDeclaration_1()); }
		('exists')
		{ after(grammarAccess.getUnaryIteratorAccess().getEXISTSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getSELECTEnumLiteralDeclaration_2()); }
		('select')
		{ after(grammarAccess.getUnaryIteratorAccess().getSELECTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getREJECTEnumLiteralDeclaration_3()); }
		('reject')
		{ after(grammarAccess.getUnaryIteratorAccess().getREJECTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getONEEnumLiteralDeclaration_4()); }
		('one')
		{ after(grammarAccess.getUnaryIteratorAccess().getONEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getIS_UNIQUEEnumLiteralDeclaration_5()); }
		('isUnique')
		{ after(grammarAccess.getUnaryIteratorAccess().getIS_UNIQUEEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryIteratorAccess().getCOLLECTEnumLiteralDeclaration_6()); }
		('collect')
		{ after(grammarAccess.getUnaryIteratorAccess().getCOLLECTEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModuleKeyword_0()); }
	'module'
	{ after(grammarAccess.getModelAccess().getModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_3()); }
	(rule__Model__Alternatives_3)*
	{ after(grammarAccess.getModelAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3_0__0__Impl
	rule__Model__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getIncludeKeyword_3_0_0()); }
	'include'
	{ after(grammarAccess.getModelAccess().getIncludeKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3_0__1__Impl
	rule__Model__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getIncludesAssignment_3_0_1()); }
	(rule__Model__IncludesAssignment_3_0_1)
	{ after(grammarAccess.getModelAccess().getIncludesAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_3_0_2()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group__0__Impl
	rule__ModelElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getAlternatives_0()); }
	(rule__ModelElement__Alternatives_0)
	{ after(grammarAccess.getModelElementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelElementAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getModelElementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Individual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__0__Impl
	rule__Individual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getIndividualKeyword_0()); }
	'individual'
	{ after(grammarAccess.getIndividualAccess().getIndividualKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__1__Impl
	rule__Individual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getNameAssignment_1()); }
	(rule__Individual__NameAssignment_1)
	{ after(grammarAccess.getIndividualAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__2__Impl
	rule__Individual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getIndividualAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__3__Impl
	rule__Individual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getClassifiersAssignment_3()); }
	(rule__Individual__ClassifiersAssignment_3)
	{ after(grammarAccess.getIndividualAccess().getClassifiersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__4__Impl
	rule__Individual__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getGroup_4()); }
	(rule__Individual__Group_4__0)*
	{ after(grammarAccess.getIndividualAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getGroup_5()); }
	(rule__Individual__Group_5__0)?
	{ after(grammarAccess.getIndividualAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Individual__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_4__0__Impl
	rule__Individual__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getIndividualAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getClassifiersAssignment_4_1()); }
	(rule__Individual__ClassifiersAssignment_4_1)
	{ after(grammarAccess.getIndividualAccess().getClassifiersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Individual__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_5__0__Impl
	rule__Individual__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getLeftCurlyBracketKeyword_5_0()); }
	'{'
	{ after(grammarAccess.getIndividualAccess().getLeftCurlyBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_5__1__Impl
	rule__Individual__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getAssignmentsAssignment_5_1()); }
	(rule__Individual__AssignmentsAssignment_5_1)*
	{ after(grammarAccess.getIndividualAccess().getAssignmentsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Individual__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndividualAccess().getRightCurlyBracketKeyword_5_2()); }
	'}'
	{ after(grammarAccess.getIndividualAccess().getRightCurlyBracketKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOrderClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group__0__Impl
	rule__FirstOrderClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getFirstOrderClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group__1__Impl
	rule__FirstOrderClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getNameAssignment_1()); }
	(rule__FirstOrderClass__NameAssignment_1)
	{ after(grammarAccess.getFirstOrderClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group__2__Impl
	rule__FirstOrderClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getGroup_2()); }
	(rule__FirstOrderClass__Group_2__0)?
	{ after(grammarAccess.getFirstOrderClassAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group__3__Impl
	rule__FirstOrderClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getGroup_3()); }
	(rule__FirstOrderClass__Group_3__0)?
	{ after(grammarAccess.getFirstOrderClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getGroup_4()); }
	(rule__FirstOrderClass__Group_4__0)?
	{ after(grammarAccess.getFirstOrderClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOrderClass__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_2__0__Impl
	rule__FirstOrderClass__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getFirstOrderClassAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_2__1__Impl
	rule__FirstOrderClass__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getClassifiersAssignment_2_1()); }
	(rule__FirstOrderClass__ClassifiersAssignment_2_1)
	{ after(grammarAccess.getFirstOrderClassAccess().getClassifiersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getGroup_2_2()); }
	(rule__FirstOrderClass__Group_2_2__0)*
	{ after(grammarAccess.getFirstOrderClassAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOrderClass__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_2_2__0__Impl
	rule__FirstOrderClass__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getFirstOrderClassAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getClassifiersAssignment_2_2_1()); }
	(rule__FirstOrderClass__ClassifiersAssignment_2_2_1)
	{ after(grammarAccess.getFirstOrderClassAccess().getClassifiersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOrderClass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_3__0__Impl
	rule__FirstOrderClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getSpecializesKeyword_3_0()); }
	'specializes'
	{ after(grammarAccess.getFirstOrderClassAccess().getSpecializesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_3__1__Impl
	rule__FirstOrderClass__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getSuperClassesAssignment_3_1()); }
	(rule__FirstOrderClass__SuperClassesAssignment_3_1)
	{ after(grammarAccess.getFirstOrderClassAccess().getSuperClassesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getGroup_3_2()); }
	(rule__FirstOrderClass__Group_3_2__0)*
	{ after(grammarAccess.getFirstOrderClassAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOrderClass__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_3_2__0__Impl
	rule__FirstOrderClass__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getFirstOrderClassAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getSuperClassesAssignment_3_2_1()); }
	(rule__FirstOrderClass__SuperClassesAssignment_3_2_1)
	{ after(grammarAccess.getFirstOrderClassAccess().getSuperClassesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOrderClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_4__0__Impl
	rule__FirstOrderClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getFirstOrderClassAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_4__1__Impl
	rule__FirstOrderClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getAlternatives_4_1()); }
	(rule__FirstOrderClass__Alternatives_4_1)*
	{ after(grammarAccess.getFirstOrderClassAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstOrderClass__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstOrderClassAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getFirstOrderClassAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__2__Impl
	rule__DataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_2()); }
	(rule__DataType__Group_2__0)?
	{ after(grammarAccess.getDataTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__3__Impl
	rule__DataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_3()); }
	(rule__DataType__Group_3__0)?
	{ after(grammarAccess.getDataTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_4()); }
	(rule__DataType__Group_4__0)?
	{ after(grammarAccess.getDataTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__0__Impl
	rule__DataType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getDataTypeAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__1__Impl
	rule__DataType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getClassifiersAssignment_2_1()); }
	(rule__DataType__ClassifiersAssignment_2_1)
	{ after(grammarAccess.getDataTypeAccess().getClassifiersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_2_2()); }
	(rule__DataType__Group_2_2__0)*
	{ after(grammarAccess.getDataTypeAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2_2__0__Impl
	rule__DataType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getDataTypeAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getClassifiersAssignment_2_2_1()); }
	(rule__DataType__ClassifiersAssignment_2_2_1)
	{ after(grammarAccess.getDataTypeAccess().getClassifiersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__0__Impl
	rule__DataType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getSpecializesKeyword_3_0()); }
	'specializes'
	{ after(grammarAccess.getDataTypeAccess().getSpecializesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__1__Impl
	rule__DataType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getSuperClassesAssignment_3_1()); }
	(rule__DataType__SuperClassesAssignment_3_1)
	{ after(grammarAccess.getDataTypeAccess().getSuperClassesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getGroup_3_2()); }
	(rule__DataType__Group_3_2__0)*
	{ after(grammarAccess.getDataTypeAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3_2__0__Impl
	rule__DataType__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getDataTypeAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getSuperClassesAssignment_3_2_1()); }
	(rule__DataType__SuperClassesAssignment_3_2_1)
	{ after(grammarAccess.getDataTypeAccess().getSuperClassesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__0__Impl
	rule__DataType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__1__Impl
	rule__DataType__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getAlternatives_4_1()); }
	(rule__DataType__Alternatives_4_1)*
	{ after(grammarAccess.getDataTypeAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__0__Impl
	rule__HighOrderClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getOrderKeyword_0()); }
	'order'
	{ after(grammarAccess.getHighOrderClassAccess().getOrderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__1__Impl
	rule__HighOrderClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getOrderAssignment_1()); }
	(rule__HighOrderClass__OrderAssignment_1)
	{ after(grammarAccess.getHighOrderClassAccess().getOrderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__2__Impl
	rule__HighOrderClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getClassKeyword_2()); }
	'class'
	{ after(grammarAccess.getHighOrderClassAccess().getClassKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__3__Impl
	rule__HighOrderClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getNameAssignment_3()); }
	(rule__HighOrderClass__NameAssignment_3)
	{ after(grammarAccess.getHighOrderClassAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__4__Impl
	rule__HighOrderClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_4()); }
	(rule__HighOrderClass__Group_4__0)?
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__5__Impl
	rule__HighOrderClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_5()); }
	(rule__HighOrderClass__Group_5__0)?
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__6__Impl
	rule__HighOrderClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_6()); }
	(rule__HighOrderClass__Group_6__0)?
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__7__Impl
	rule__HighOrderClass__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getAlternatives_7()); }
	(rule__HighOrderClass__Alternatives_7)?
	{ after(grammarAccess.getHighOrderClassAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_8()); }
	(rule__HighOrderClass__Group_8__0)?
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_4__0__Impl
	rule__HighOrderClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getColonKeyword_4_0()); }
	':'
	{ after(grammarAccess.getHighOrderClassAccess().getColonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_4__1__Impl
	rule__HighOrderClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getClassifiersAssignment_4_1()); }
	(rule__HighOrderClass__ClassifiersAssignment_4_1)
	{ after(grammarAccess.getHighOrderClassAccess().getClassifiersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_4_2()); }
	(rule__HighOrderClass__Group_4_2__0)*
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_4_2__0__Impl
	rule__HighOrderClass__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getHighOrderClassAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getClassifiersAssignment_4_2_1()); }
	(rule__HighOrderClass__ClassifiersAssignment_4_2_1)
	{ after(grammarAccess.getHighOrderClassAccess().getClassifiersAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_5__0__Impl
	rule__HighOrderClass__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getSpecializesKeyword_5_0()); }
	'specializes'
	{ after(grammarAccess.getHighOrderClassAccess().getSpecializesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_5__1__Impl
	rule__HighOrderClass__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getSuperClassesAssignment_5_1()); }
	(rule__HighOrderClass__SuperClassesAssignment_5_1)
	{ after(grammarAccess.getHighOrderClassAccess().getSuperClassesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_5_2()); }
	(rule__HighOrderClass__Group_5_2__0)*
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_5_2__0__Impl
	rule__HighOrderClass__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getCommaKeyword_5_2_0()); }
	','
	{ after(grammarAccess.getHighOrderClassAccess().getCommaKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getSuperClassesAssignment_5_2_1()); }
	(rule__HighOrderClass__SuperClassesAssignment_5_2_1)
	{ after(grammarAccess.getHighOrderClassAccess().getSuperClassesAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_6__0__Impl
	rule__HighOrderClass__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getSubordinatedToKeyword_6_0()); }
	'subordinatedTo'
	{ after(grammarAccess.getHighOrderClassAccess().getSubordinatedToKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_6__1__Impl
	rule__HighOrderClass__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getSubordinatorsAssignment_6_1()); }
	(rule__HighOrderClass__SubordinatorsAssignment_6_1)
	{ after(grammarAccess.getHighOrderClassAccess().getSubordinatorsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getGroup_6_2()); }
	(rule__HighOrderClass__Group_6_2__0)*
	{ after(grammarAccess.getHighOrderClassAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_6_2__0__Impl
	rule__HighOrderClass__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getCommaKeyword_6_2_0()); }
	','
	{ after(grammarAccess.getHighOrderClassAccess().getCommaKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getSubordinatorsAssignment_6_2_1()); }
	(rule__HighOrderClass__SubordinatorsAssignment_6_2_1)
	{ after(grammarAccess.getHighOrderClassAccess().getSubordinatorsAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_7_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_7_0__0__Impl
	rule__HighOrderClass__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_7_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getCategorizationTypeAssignment_7_0_0()); }
	(rule__HighOrderClass__CategorizationTypeAssignment_7_0_0)
	{ after(grammarAccess.getHighOrderClassAccess().getCategorizationTypeAssignment_7_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_7_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_7_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_7_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getCategorizedClassAssignment_7_0_1()); }
	(rule__HighOrderClass__CategorizedClassAssignment_7_0_1)
	{ after(grammarAccess.getHighOrderClassAccess().getCategorizedClassAssignment_7_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_7_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_7_1__0__Impl
	rule__HighOrderClass__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_7_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getIsPowertypeOfKeyword_7_1_0()); }
	'isPowertypeOf'
	{ after(grammarAccess.getHighOrderClassAccess().getIsPowertypeOfKeyword_7_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_7_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_7_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getPowertypeOfAssignment_7_1_1()); }
	(rule__HighOrderClass__PowertypeOfAssignment_7_1_1)
	{ after(grammarAccess.getHighOrderClassAccess().getPowertypeOfAssignment_7_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighOrderClass__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_8__0__Impl
	rule__HighOrderClass__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getLeftCurlyBracketKeyword_8_0()); }
	'{'
	{ after(grammarAccess.getHighOrderClassAccess().getLeftCurlyBracketKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_8__1__Impl
	rule__HighOrderClass__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getAlternatives_8_1()); }
	(rule__HighOrderClass__Alternatives_8_1)*
	{ after(grammarAccess.getHighOrderClassAccess().getAlternatives_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighOrderClass__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighOrderClassAccess().getRightCurlyBracketKeyword_8_2()); }
	'}'
	{ after(grammarAccess.getHighOrderClassAccess().getRightCurlyBracketKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__0__Impl
	rule__OrderlessClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getOrderlessKeyword_0()); }
	'orderless'
	{ after(grammarAccess.getOrderlessClassAccess().getOrderlessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__1__Impl
	rule__OrderlessClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getClassKeyword_1()); }
	'class'
	{ after(grammarAccess.getOrderlessClassAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__2__Impl
	rule__OrderlessClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getNameAssignment_2()); }
	(rule__OrderlessClass__NameAssignment_2)
	{ after(grammarAccess.getOrderlessClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__3__Impl
	rule__OrderlessClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_3()); }
	(rule__OrderlessClass__Group_3__0)?
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__4__Impl
	rule__OrderlessClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_4()); }
	(rule__OrderlessClass__Group_4__0)?
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__5__Impl
	rule__OrderlessClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_5()); }
	(rule__OrderlessClass__Group_5__0)?
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__6__Impl
	rule__OrderlessClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getAlternatives_6()); }
	(rule__OrderlessClass__Alternatives_6)?
	{ after(grammarAccess.getOrderlessClassAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_7()); }
	(rule__OrderlessClass__Group_7__0)?
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_3__0__Impl
	rule__OrderlessClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getColonKeyword_3_0()); }
	':'
	{ after(grammarAccess.getOrderlessClassAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_3__1__Impl
	rule__OrderlessClass__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getClassifiersAssignment_3_1()); }
	(rule__OrderlessClass__ClassifiersAssignment_3_1)
	{ after(grammarAccess.getOrderlessClassAccess().getClassifiersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_3_2()); }
	(rule__OrderlessClass__Group_3_2__0)*
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_3_2__0__Impl
	rule__OrderlessClass__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getOrderlessClassAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getClassifiersAssignment_3_2_1()); }
	(rule__OrderlessClass__ClassifiersAssignment_3_2_1)
	{ after(grammarAccess.getOrderlessClassAccess().getClassifiersAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_4__0__Impl
	rule__OrderlessClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getSpecializesKeyword_4_0()); }
	'specializes'
	{ after(grammarAccess.getOrderlessClassAccess().getSpecializesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_4__1__Impl
	rule__OrderlessClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getSuperClassesAssignment_4_1()); }
	(rule__OrderlessClass__SuperClassesAssignment_4_1)
	{ after(grammarAccess.getOrderlessClassAccess().getSuperClassesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_4_2()); }
	(rule__OrderlessClass__Group_4_2__0)*
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_4_2__0__Impl
	rule__OrderlessClass__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getOrderlessClassAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getSuperClassesAssignment_4_2_1()); }
	(rule__OrderlessClass__SuperClassesAssignment_4_2_1)
	{ after(grammarAccess.getOrderlessClassAccess().getSuperClassesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_5__0__Impl
	rule__OrderlessClass__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getSubordinatedToKeyword_5_0()); }
	'subordinatedTo'
	{ after(grammarAccess.getOrderlessClassAccess().getSubordinatedToKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_5__1__Impl
	rule__OrderlessClass__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getSubordinatorsAssignment_5_1()); }
	(rule__OrderlessClass__SubordinatorsAssignment_5_1)
	{ after(grammarAccess.getOrderlessClassAccess().getSubordinatorsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getGroup_5_2()); }
	(rule__OrderlessClass__Group_5_2__0)*
	{ after(grammarAccess.getOrderlessClassAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_5_2__0__Impl
	rule__OrderlessClass__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getCommaKeyword_5_2_0()); }
	','
	{ after(grammarAccess.getOrderlessClassAccess().getCommaKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getSubordinatorsAssignment_5_2_1()); }
	(rule__OrderlessClass__SubordinatorsAssignment_5_2_1)
	{ after(grammarAccess.getOrderlessClassAccess().getSubordinatorsAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_6_0__0__Impl
	rule__OrderlessClass__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getCategorizationTypeAssignment_6_0_0()); }
	(rule__OrderlessClass__CategorizationTypeAssignment_6_0_0)
	{ after(grammarAccess.getOrderlessClassAccess().getCategorizationTypeAssignment_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getCategorizedClassAssignment_6_0_1()); }
	(rule__OrderlessClass__CategorizedClassAssignment_6_0_1)
	{ after(grammarAccess.getOrderlessClassAccess().getCategorizedClassAssignment_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_6_1__0__Impl
	rule__OrderlessClass__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getIsPowertypeOfKeyword_6_1_0()); }
	'isPowertypeOf'
	{ after(grammarAccess.getOrderlessClassAccess().getIsPowertypeOfKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getPowertypeOfAssignment_6_1_1()); }
	(rule__OrderlessClass__PowertypeOfAssignment_6_1_1)
	{ after(grammarAccess.getOrderlessClassAccess().getPowertypeOfAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderlessClass__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_7__0__Impl
	rule__OrderlessClass__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getLeftCurlyBracketKeyword_7_0()); }
	'{'
	{ after(grammarAccess.getOrderlessClassAccess().getLeftCurlyBracketKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_7__1__Impl
	rule__OrderlessClass__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getAlternatives_7_1()); }
	(rule__OrderlessClass__Alternatives_7_1)*
	{ after(grammarAccess.getOrderlessClassAccess().getAlternatives_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderlessClass__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderlessClassAccess().getRightCurlyBracketKeyword_7_2()); }
	'}'
	{ after(grammarAccess.getOrderlessClassAccess().getRightCurlyBracketKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__0__Impl
	rule__GeneralizationSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0()); }
	(rule__GeneralizationSet__UnorderedGroup_0)
	{ after(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__1__Impl
	rule__GeneralizationSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGensetKeyword_1()); }
	'genset'
	{ after(grammarAccess.getGeneralizationSetAccess().getGensetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__2__Impl
	rule__GeneralizationSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2()); }
	(rule__GeneralizationSet__NameAssignment_2)?
	{ after(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__3__Impl
	rule__GeneralizationSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralKeyword_3()); }
	'general'
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__4__Impl
	rule__GeneralizationSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralAssignment_4()); }
	(rule__GeneralizationSet__GeneralAssignment_4)
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__5__Impl
	rule__GeneralizationSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGroup_5()); }
	(rule__GeneralizationSet__Group_5__0)?
	{ after(grammarAccess.getGeneralizationSetAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__6__Impl
	rule__GeneralizationSet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsKeyword_6()); }
	'specifics'
	{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__7__Impl
	rule__GeneralizationSet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_7()); }
	(rule__GeneralizationSet__SpecificsAssignment_7)
	{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGroup_8()); }
		(rule__GeneralizationSet__Group_8__0)
		{ after(grammarAccess.getGeneralizationSetAccess().getGroup_8()); }
	)
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGroup_8()); }
		(rule__GeneralizationSet__Group_8__0)*
		{ after(grammarAccess.getGeneralizationSetAccess().getGroup_8()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_5__0__Impl
	rule__GeneralizationSet__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getCategorizerKeyword_5_0()); }
	'categorizer'
	{ after(grammarAccess.getGeneralizationSetAccess().getCategorizerKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getCategorizerAssignment_5_1()); }
	(rule__GeneralizationSet__CategorizerAssignment_5_1)
	{ after(grammarAccess.getGeneralizationSetAccess().getCategorizerAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_8__0__Impl
	rule__GeneralizationSet__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getGeneralizationSetAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_8_1()); }
	(rule__GeneralizationSet__SpecificsAssignment_8_1)
	{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttKeyword_1_0()); }
	('att')?
	{ after(grammarAccess.getAttributeAccess().getAttKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__1__Impl
	rule__Attribute__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1_1()); }
	(rule__Attribute__NameAssignment_1_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__2__Impl
	rule__Attribute__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__3__Impl
	rule__Attribute__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1_3()); }
	(rule__Attribute__Group_1_3__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__4__Impl
	rule__Attribute__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAlternatives_1_4()); }
	(rule__Attribute__Alternatives_1_4)
	{ after(grammarAccess.getAttributeAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1_5()); }
	(rule__Attribute__Group_1_5__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_3__0__Impl
	rule__Attribute__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_1_3_0()); }
	'['
	{ after(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_3__1__Impl
	rule__Attribute__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getLowerBoundAssignment_1_3_1()); }
	(rule__Attribute__LowerBoundAssignment_1_3_1)
	{ after(grammarAccess.getAttributeAccess().getLowerBoundAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_3__2__Impl
	rule__Attribute__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getFullStopFullStopKeyword_1_3_2()); }
	'..'
	{ after(grammarAccess.getAttributeAccess().getFullStopFullStopKeyword_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_3__3__Impl
	rule__Attribute__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getUpperBoundAssignment_1_3_3()); }
	(rule__Attribute__UpperBoundAssignment_1_3_3)
	{ after(grammarAccess.getAttributeAccess().getUpperBoundAssignment_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_1_3_4()); }
	']'
	{ after(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_1_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_5__0__Impl
	rule__Attribute__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getSubsetsKeyword_1_5_0()); }
	'subsets'
	{ after(grammarAccess.getAttributeAccess().getSubsetsKeyword_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_5__1__Impl
	rule__Attribute__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getSubsetOfAssignment_1_5_1()); }
	(rule__Attribute__SubsetOfAssignment_1_5_1)
	{ after(grammarAccess.getAttributeAccess().getSubsetOfAssignment_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1_5_2()); }
	(rule__Attribute__Group_1_5_2__0)*
	{ after(grammarAccess.getAttributeAccess().getGroup_1_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_5_2__0__Impl
	rule__Attribute__Group_1_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getCommaKeyword_1_5_2_0()); }
	','
	{ after(grammarAccess.getAttributeAccess().getCommaKeyword_1_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getSubsetOfAssignment_1_5_2_1()); }
	(rule__Attribute__SubsetOfAssignment_1_5_2_1)
	{ after(grammarAccess.getAttributeAccess().getSubsetOfAssignment_1_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__0__Impl
	rule__RegularityAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getRegularityKeyword_0()); }
	('regularity')?
	{ after(grammarAccess.getRegularityAttributeAccess().getRegularityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__1__Impl
	rule__RegularityAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getAttKeyword_1()); }
	('att')?
	{ after(grammarAccess.getRegularityAttributeAccess().getAttKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__2__Impl
	rule__RegularityAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getNameAssignment_2()); }
	(rule__RegularityAttribute__NameAssignment_2)
	{ after(grammarAccess.getRegularityAttributeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__3__Impl
	rule__RegularityAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getRegularityAttributeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__4__Impl
	rule__RegularityAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getGroup_4()); }
	(rule__RegularityAttribute__Group_4__0)?
	{ after(grammarAccess.getRegularityAttributeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__5__Impl
	rule__RegularityAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getAlternatives_5()); }
	(rule__RegularityAttribute__Alternatives_5)
	{ after(grammarAccess.getRegularityAttributeAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__6__Impl
	rule__RegularityAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getGroup_6()); }
	(rule__RegularityAttribute__Group_6__0)?
	{ after(grammarAccess.getRegularityAttributeAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__7__Impl
	rule__RegularityAttribute__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getRegularityTypeAssignment_7()); }
	(rule__RegularityAttribute__RegularityTypeAssignment_7)
	{ after(grammarAccess.getRegularityAttributeAccess().getRegularityTypeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getRegulatesAssignment_8()); }
	(rule__RegularityAttribute__RegulatesAssignment_8)
	{ after(grammarAccess.getRegularityAttributeAccess().getRegulatesAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityAttribute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_4__0__Impl
	rule__RegularityAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getRegularityAttributeAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_4__1__Impl
	rule__RegularityAttribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getLowerBoundAssignment_4_1()); }
	(rule__RegularityAttribute__LowerBoundAssignment_4_1)
	{ after(grammarAccess.getRegularityAttributeAccess().getLowerBoundAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_4__2__Impl
	rule__RegularityAttribute__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getFullStopFullStopKeyword_4_2()); }
	'..'
	{ after(grammarAccess.getRegularityAttributeAccess().getFullStopFullStopKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_4__3__Impl
	rule__RegularityAttribute__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getUpperBoundAssignment_4_3()); }
	(rule__RegularityAttribute__UpperBoundAssignment_4_3)
	{ after(grammarAccess.getRegularityAttributeAccess().getUpperBoundAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getRightSquareBracketKeyword_4_4()); }
	']'
	{ after(grammarAccess.getRegularityAttributeAccess().getRightSquareBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityAttribute__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_6__0__Impl
	rule__RegularityAttribute__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getSubsetsKeyword_6_0()); }
	'subsets'
	{ after(grammarAccess.getRegularityAttributeAccess().getSubsetsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_6__1__Impl
	rule__RegularityAttribute__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getSubsetOfAssignment_6_1()); }
	(rule__RegularityAttribute__SubsetOfAssignment_6_1)
	{ after(grammarAccess.getRegularityAttributeAccess().getSubsetOfAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getGroup_6_2()); }
	(rule__RegularityAttribute__Group_6_2__0)*
	{ after(grammarAccess.getRegularityAttributeAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityAttribute__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_6_2__0__Impl
	rule__RegularityAttribute__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getCommaKeyword_6_2_0()); }
	','
	{ after(grammarAccess.getRegularityAttributeAccess().getCommaKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityAttribute__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityAttributeAccess().getSubsetOfAssignment_6_2_1()); }
	(rule__RegularityAttribute__SubsetOfAssignment_6_2_1)
	{ after(grammarAccess.getRegularityAttributeAccess().getSubsetOfAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__0__Impl
	rule__Reference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getRefKeyword_1_0()); }
	'ref'
	{ after(grammarAccess.getReferenceAccess().getRefKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__1__Impl
	rule__Reference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getNameAssignment_1_1()); }
	(rule__Reference__NameAssignment_1_1)
	{ after(grammarAccess.getReferenceAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__2__Impl
	rule__Reference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getReferenceAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__3__Impl
	rule__Reference__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_1_3()); }
	(rule__Reference__Group_1_3__0)?
	{ after(grammarAccess.getReferenceAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__4__Impl
	rule__Reference__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().get_typeAssignment_1_4()); }
	(rule__Reference___typeAssignment_1_4)
	{ after(grammarAccess.getReferenceAccess().get_typeAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__5__Impl
	rule__Reference__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_1_5()); }
	(rule__Reference__Group_1_5__0)?
	{ after(grammarAccess.getReferenceAccess().getGroup_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_1_6()); }
	(rule__Reference__Group_1_6__0)?
	{ after(grammarAccess.getReferenceAccess().getGroup_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_3__0__Impl
	rule__Reference__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_1_3_0()); }
	'['
	{ after(grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_3__1__Impl
	rule__Reference__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getLowerBoundAssignment_1_3_1()); }
	(rule__Reference__LowerBoundAssignment_1_3_1)
	{ after(grammarAccess.getReferenceAccess().getLowerBoundAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_3__2__Impl
	rule__Reference__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getFullStopFullStopKeyword_1_3_2()); }
	'..'
	{ after(grammarAccess.getReferenceAccess().getFullStopFullStopKeyword_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_3__3__Impl
	rule__Reference__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getUpperBoundAssignment_1_3_3()); }
	(rule__Reference__UpperBoundAssignment_1_3_3)
	{ after(grammarAccess.getReferenceAccess().getUpperBoundAssignment_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_1_3_4()); }
	']'
	{ after(grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_1_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_5__0__Impl
	rule__Reference__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getSubsetsKeyword_1_5_0()); }
	'subsets'
	{ after(grammarAccess.getReferenceAccess().getSubsetsKeyword_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_5__1__Impl
	rule__Reference__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getSubsetOfAssignment_1_5_1()); }
	(rule__Reference__SubsetOfAssignment_1_5_1)
	{ after(grammarAccess.getReferenceAccess().getSubsetOfAssignment_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_1_5_2()); }
	(rule__Reference__Group_1_5_2__0)*
	{ after(grammarAccess.getReferenceAccess().getGroup_1_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_1_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_5_2__0__Impl
	rule__Reference__Group_1_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getCommaKeyword_1_5_2_0()); }
	','
	{ after(grammarAccess.getReferenceAccess().getCommaKeyword_1_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getSubsetOfAssignment_1_5_2_1()); }
	(rule__Reference__SubsetOfAssignment_1_5_2_1)
	{ after(grammarAccess.getReferenceAccess().getSubsetOfAssignment_1_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_1_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_6__0__Impl
	rule__Reference__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getIsOppositeToKeyword_1_6_0()); }
	'isOppositeTo'
	{ after(grammarAccess.getReferenceAccess().getIsOppositeToKeyword_1_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_1_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getOppositeToAssignment_1_6_1()); }
	(rule__Reference__OppositeToAssignment_1_6_1)
	{ after(grammarAccess.getReferenceAccess().getOppositeToAssignment_1_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__0__Impl
	rule__RegularityReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getRegularityKeyword_0()); }
	('regularity')?
	{ after(grammarAccess.getRegularityReferenceAccess().getRegularityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__1__Impl
	rule__RegularityReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getRefKeyword_1()); }
	'ref'
	{ after(grammarAccess.getRegularityReferenceAccess().getRefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__2__Impl
	rule__RegularityReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getNameAssignment_2()); }
	(rule__RegularityReference__NameAssignment_2)
	{ after(grammarAccess.getRegularityReferenceAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__3__Impl
	rule__RegularityReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getRegularityReferenceAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__4__Impl
	rule__RegularityReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getGroup_4()); }
	(rule__RegularityReference__Group_4__0)?
	{ after(grammarAccess.getRegularityReferenceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__5__Impl
	rule__RegularityReference__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().get_typeAssignment_5()); }
	(rule__RegularityReference___typeAssignment_5)
	{ after(grammarAccess.getRegularityReferenceAccess().get_typeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__6__Impl
	rule__RegularityReference__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getGroup_6()); }
	(rule__RegularityReference__Group_6__0)?
	{ after(grammarAccess.getRegularityReferenceAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__7__Impl
	rule__RegularityReference__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getGroup_7()); }
	(rule__RegularityReference__Group_7__0)?
	{ after(grammarAccess.getRegularityReferenceAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__8__Impl
	rule__RegularityReference__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getRegularityTypeAssignment_8()); }
	(rule__RegularityReference__RegularityTypeAssignment_8)
	{ after(grammarAccess.getRegularityReferenceAccess().getRegularityTypeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getRegulatesAssignment_9()); }
	(rule__RegularityReference__RegulatesAssignment_9)
	{ after(grammarAccess.getRegularityReferenceAccess().getRegulatesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityReference__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_4__0__Impl
	rule__RegularityReference__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getRegularityReferenceAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_4__1__Impl
	rule__RegularityReference__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getLowerBoundAssignment_4_1()); }
	(rule__RegularityReference__LowerBoundAssignment_4_1)
	{ after(grammarAccess.getRegularityReferenceAccess().getLowerBoundAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_4__2__Impl
	rule__RegularityReference__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getFullStopFullStopKeyword_4_2()); }
	'..'
	{ after(grammarAccess.getRegularityReferenceAccess().getFullStopFullStopKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_4__3__Impl
	rule__RegularityReference__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getUpperBoundAssignment_4_3()); }
	(rule__RegularityReference__UpperBoundAssignment_4_3)
	{ after(grammarAccess.getRegularityReferenceAccess().getUpperBoundAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getRightSquareBracketKeyword_4_4()); }
	']'
	{ after(grammarAccess.getRegularityReferenceAccess().getRightSquareBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityReference__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_6__0__Impl
	rule__RegularityReference__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getSubsetsKeyword_6_0()); }
	'subsets'
	{ after(grammarAccess.getRegularityReferenceAccess().getSubsetsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_6__1__Impl
	rule__RegularityReference__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getSubsetOfAssignment_6_1()); }
	(rule__RegularityReference__SubsetOfAssignment_6_1)
	{ after(grammarAccess.getRegularityReferenceAccess().getSubsetOfAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getGroup_6_2()); }
	(rule__RegularityReference__Group_6_2__0)*
	{ after(grammarAccess.getRegularityReferenceAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityReference__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_6_2__0__Impl
	rule__RegularityReference__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getCommaKeyword_6_2_0()); }
	','
	{ after(grammarAccess.getRegularityReferenceAccess().getCommaKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getSubsetOfAssignment_6_2_1()); }
	(rule__RegularityReference__SubsetOfAssignment_6_2_1)
	{ after(grammarAccess.getRegularityReferenceAccess().getSubsetOfAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularityReference__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_7__0__Impl
	rule__RegularityReference__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getIsOppositeToKeyword_7_0()); }
	'isOppositeTo'
	{ after(grammarAccess.getRegularityReferenceAccess().getIsOppositeToKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularityReference__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularityReferenceAccess().getOppositeToAssignment_7_1()); }
	(rule__RegularityReference__OppositeToAssignment_7_1)
	{ after(grammarAccess.getRegularityReferenceAccess().getOppositeToAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReferenceAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleReferenceAssignment__Group__0__Impl
	rule__SingleReferenceAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleReferenceAssignmentAccess().getRefKeyword_0()); }
	'ref'
	{ after(grammarAccess.getSingleReferenceAssignmentAccess().getRefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleReferenceAssignment__Group__1__Impl
	rule__SingleReferenceAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceAssignment_1()); }
	(rule__SingleReferenceAssignment__ReferenceAssignment_1)
	{ after(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleReferenceAssignment__Group__2__Impl
	rule__SingleReferenceAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleReferenceAssignmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getSingleReferenceAssignmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleReferenceAssignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleReferenceAssignmentAccess().getValuesAssignment_3()); }
	(rule__SingleReferenceAssignment__ValuesAssignment_3)
	{ after(grammarAccess.getSingleReferenceAssignmentAccess().getValuesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleReferenceAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__0__Impl
	rule__MultipleReferenceAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getRefKeyword_0()); }
	'ref'
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getRefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__1__Impl
	rule__MultipleReferenceAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceAssignment_1()); }
	(rule__MultipleReferenceAssignment__ReferenceAssignment_1)
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__2__Impl
	rule__MultipleReferenceAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__3__Impl
	rule__MultipleReferenceAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__4__Impl
	rule__MultipleReferenceAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesAssignment_4()); }
	(rule__MultipleReferenceAssignment__ValuesAssignment_4)
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__5__Impl
	rule__MultipleReferenceAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getGroup_5()); }
	(rule__MultipleReferenceAssignment__Group_5__0)*
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleReferenceAssignment__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group_5__0__Impl
	rule__MultipleReferenceAssignment__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleReferenceAssignment__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesAssignment_5_1()); }
	(rule__MultipleReferenceAssignment__ValuesAssignment_5_1)
	{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleAttributeAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleAttributeAssignment__Group__0__Impl
	rule__SingleAttributeAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleAttributeAssignmentAccess().getAttKeyword_0()); }
	('att')?
	{ after(grammarAccess.getSingleAttributeAssignmentAccess().getAttKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleAttributeAssignment__Group__1__Impl
	rule__SingleAttributeAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAssignment_1()); }
	(rule__SingleAttributeAssignment__AttributeAssignment_1)
	{ after(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleAttributeAssignment__Group__2__Impl
	rule__SingleAttributeAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleAttributeAssignmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getSingleAttributeAssignmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleAttributeAssignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleAttributeAssignmentAccess().getAlternatives_3()); }
	(rule__SingleAttributeAssignment__Alternatives_3)
	{ after(grammarAccess.getSingleAttributeAssignmentAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group__0__Impl
	rule__MultipleAttributeAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getAttKeyword_0()); }
	('att')?
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getAttKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group__1__Impl
	rule__MultipleAttributeAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAssignment_1()); }
	(rule__MultipleAttributeAssignment__AttributeAssignment_1)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group__2__Impl
	rule__MultipleAttributeAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group__3__Impl
	rule__MultipleAttributeAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group__4__Impl
	rule__MultipleAttributeAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getAlternatives_4()); }
	(rule__MultipleAttributeAssignment__Alternatives_4)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_0__0__Impl
	rule__MultipleAttributeAssignment__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesAssignment_4_0_0()); }
	(rule__MultipleAttributeAssignment__LiteralValuesAssignment_4_0_0)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_0_1()); }
	(rule__MultipleAttributeAssignment__Group_4_0_1__0)*
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group_4_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_0_1__0__Impl
	rule__MultipleAttributeAssignment__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_0_1_0()); }
	','
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesAssignment_4_0_1_1()); }
	(rule__MultipleAttributeAssignment__LiteralValuesAssignment_4_0_1_1)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesAssignment_4_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_1__0__Impl
	rule__MultipleAttributeAssignment__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesAssignment_4_1_0()); }
	(rule__MultipleAttributeAssignment__DatatypeValuesAssignment_4_1_0)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesAssignment_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_1_1()); }
	(rule__MultipleAttributeAssignment__Group_4_1_1__0)*
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group_4_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_1_1__0__Impl
	rule__MultipleAttributeAssignment__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_1_1_0()); }
	','
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesAssignment_4_1_1_1()); }
	(rule__MultipleAttributeAssignment__DatatypeValuesAssignment_4_1_1_1)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesAssignment_4_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_2__0__Impl
	rule__MultipleAttributeAssignment__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesAssignment_4_2_0()); }
	(rule__MultipleAttributeAssignment__UnnamedValuesAssignment_4_2_0)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesAssignment_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_2_1()); }
	(rule__MultipleAttributeAssignment__Group_4_2_1__0)*
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getGroup_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleAttributeAssignment__Group_4_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_2_1__0__Impl
	rule__MultipleAttributeAssignment__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_2_1_0()); }
	','
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleAttributeAssignment__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__Group_4_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesAssignment_4_2_1_1()); }
	(rule__MultipleAttributeAssignment__UnnamedValuesAssignment_4_2_1_1)
	{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesAssignment_4_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group__0__Impl
	rule__NUMBER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group__1__Impl
	rule__NUMBER__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getGroup_2()); }
	(rule__NUMBER__Group_2__0)?
	{ after(grammarAccess.getNUMBERAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group_2__0__Impl
	rule__NUMBER__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getNUMBERAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIndividual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnnamedIndividual__Group__0__Impl
	rule__UnnamedIndividual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnnamedIndividualAccess().getIndividualAction_0()); }
	()
	{ after(grammarAccess.getUnnamedIndividualAccess().getIndividualAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnnamedIndividual__Group__1__Impl
	rule__UnnamedIndividual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnnamedIndividualAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getUnnamedIndividualAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnnamedIndividual__Group__2__Impl
	rule__UnnamedIndividual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnnamedIndividualAccess().getAssignmentsAssignment_2()); }
	(rule__UnnamedIndividual__AssignmentsAssignment_2)*
	{ after(grammarAccess.getUnnamedIndividualAccess().getAssignmentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnnamedIndividual__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnnamedIndividualAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getUnnamedIndividualAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSimpleAttributeAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleSimpleAttributeAssignment__Group__0__Impl
	rule__SingleSimpleAttributeAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAssignment_0()); }
	(rule__SingleSimpleAttributeAssignment__AttributeAssignment_0)
	{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleSimpleAttributeAssignment__Group__1__Impl
	rule__SingleSimpleAttributeAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleSimpleAttributeAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAlternatives_2()); }
	(rule__SingleSimpleAttributeAssignment__Alternatives_2)
	{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAssignment_0()); }
	(rule__MultipleSimpleAttributeAssignment__AttributeAssignment_0)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group__1__Impl
	rule__MultipleSimpleAttributeAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group__2__Impl
	rule__MultipleSimpleAttributeAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group__3__Impl
	rule__MultipleSimpleAttributeAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAlternatives_3()); }
	(rule__MultipleSimpleAttributeAssignment__Alternatives_3)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_0__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesAssignment_3_0_0()); }
	(rule__MultipleSimpleAttributeAssignment__LiteralValuesAssignment_3_0_0)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_0_1()); }
	(rule__MultipleSimpleAttributeAssignment__Group_3_0_1__0)*
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group_3_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_0_1__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_0_1_0()); }
	','
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesAssignment_3_0_1_1()); }
	(rule__MultipleSimpleAttributeAssignment__LiteralValuesAssignment_3_0_1_1)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesAssignment_3_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_1__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesAssignment_3_1_0()); }
	(rule__MultipleSimpleAttributeAssignment__DatatypeValuesAssignment_3_1_0)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_1_1()); }
	(rule__MultipleSimpleAttributeAssignment__Group_3_1_1__0)*
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_1_1__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_1_1_0()); }
	','
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesAssignment_3_1_1_1()); }
	(rule__MultipleSimpleAttributeAssignment__DatatypeValuesAssignment_3_1_1_1)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesAssignment_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_2__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesAssignment_3_2_0()); }
	(rule__MultipleSimpleAttributeAssignment__UnnamedValuesAssignment_3_2_0)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesAssignment_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_2_1()); }
	(rule__MultipleSimpleAttributeAssignment__Group_3_2_1__0)*
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getGroup_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleSimpleAttributeAssignment__Group_3_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_2_1__0__Impl
	rule__MultipleSimpleAttributeAssignment__Group_3_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_2_1_0()); }
	','
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleSimpleAttributeAssignment__Group_3_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__Group_3_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesAssignment_3_2_1_1()); }
	(rule__MultipleSimpleAttributeAssignment__UnnamedValuesAssignment_3_2_1_1)
	{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesAssignment_3_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__0__Impl
	rule__InvariantConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getInvariantConstraintAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__1__Impl
	rule__InvariantConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getGroup_1()); }
	(rule__InvariantConstraint__Group_1__0)?
	{ after(grammarAccess.getInvariantConstraintAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__2__Impl
	rule__InvariantConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getClassContextAssignment_2()); }
	(rule__InvariantConstraint__ClassContextAssignment_2)
	{ after(grammarAccess.getInvariantConstraintAccess().getClassContextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__3__Impl
	rule__InvariantConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getInvKeyword_3()); }
	'inv'
	{ after(grammarAccess.getInvariantConstraintAccess().getInvKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__4__Impl
	rule__InvariantConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getInvariantAliasAssignment_4()); }
	(rule__InvariantConstraint__InvariantAliasAssignment_4)?
	{ after(grammarAccess.getInvariantConstraintAccess().getInvariantAliasAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__5__Impl
	rule__InvariantConstraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getInvariantConstraintAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getExpressionAssignment_6()); }
	(rule__InvariantConstraint__ExpressionAssignment_6)
	{ after(grammarAccess.getInvariantConstraintAccess().getExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantConstraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group_1__0__Impl
	rule__InvariantConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getContextAliasAssignment_1_0()); }
	(rule__InvariantConstraint__ContextAliasAssignment_1_0)
	{ after(grammarAccess.getInvariantConstraintAccess().getContextAliasAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getInvariantConstraintAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivationConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__0__Impl
	rule__DerivationConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getDerivationConstraintAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__1__Impl
	rule__DerivationConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getClassContextAssignment_1()); }
	(rule__DerivationConstraint__ClassContextAssignment_1)
	{ after(grammarAccess.getDerivationConstraintAccess().getClassContextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__2__Impl
	rule__DerivationConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getDerivationConstraintAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__3__Impl
	rule__DerivationConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getFeatureContextAssignment_3()); }
	(rule__DerivationConstraint__FeatureContextAssignment_3)
	{ after(grammarAccess.getDerivationConstraintAccess().getFeatureContextAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__4__Impl
	rule__DerivationConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getDerivationConstraintAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__5__Impl
	rule__DerivationConstraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getTypenameAssignment_5()); }
	(rule__DerivationConstraint__TypenameAssignment_5)
	{ after(grammarAccess.getDerivationConstraintAccess().getTypenameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__6__Impl
	rule__DerivationConstraint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getDeriveKeyword_6()); }
	'derive'
	{ after(grammarAccess.getDerivationConstraintAccess().getDeriveKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__7__Impl
	rule__DerivationConstraint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getDerivationConstraintAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationConstraint__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationConstraintAccess().getExpressionAssignment_8()); }
	(rule__DerivationConstraint__ExpressionAssignment_8)
	{ after(grammarAccess.getDerivationConstraintAccess().getExpressionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__0__Impl
	rule__LetExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__1__Impl
	rule__LetExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getVariablesAssignment_1()); }
	(rule__LetExpression__VariablesAssignment_1)
	{ after(grammarAccess.getLetExpressionAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__2__Impl
	rule__LetExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getGroup_2()); }
	(rule__LetExpression__Group_2__0)*
	{ after(grammarAccess.getLetExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__3__Impl
	rule__LetExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getLetExpressionAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getInExpressionAssignment_4()); }
	(rule__LetExpression__InExpressionAssignment_4)
	{ after(grammarAccess.getLetExpressionAccess().getInExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group_2__0__Impl
	rule__LetExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getVariablesAssignment_2_1()); }
	(rule__LetExpression__VariablesAssignment_2_1)
	{ after(grammarAccess.getLetExpressionAccess().getVariablesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableNameAssignment_0()); }
	(rule__VariableDeclaration__VariableNameAssignment_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableTypeAssignment_2()); }
	(rule__VariableDeclaration__VariableTypeAssignment_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getInitialValueAssignment_4()); }
	(rule__VariableDeclaration__InitialValueAssignment_4)
	{ after(grammarAccess.getVariableDeclarationAccess().getInitialValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getConditionAssignment_1()); }
	(rule__IfExpression__ConditionAssignment_1)
	{ after(grammarAccess.getIfExpressionAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_3()); }
	(rule__IfExpression__ThenExpressionAssignment_3)
	{ after(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_5()); }
	(rule__IfExpression__ElseExpressionAssignment_5)
	{ after(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
	'endif'
	{ after(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__0__Impl
	rule__ImpliesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getLeftAssignment_0()); }
	(rule__ImpliesExpression__LeftAssignment_0)
	{ after(grammarAccess.getImpliesExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
	(rule__ImpliesExpression__Group_1__0)*
	{ after(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__0__Impl
	rule__ImpliesExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getImpliesKeyword_1_0()); }
	'implies'
	{ after(grammarAccess.getImpliesExpressionAccess().getImpliesKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_1()); }
	(rule__ImpliesExpression__RightAssignment_1_1)
	{ after(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getLeftAssignment_0()); }
	(rule__XorExpression__LeftAssignment_0)
	{ after(grammarAccess.getXorExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
	(rule__XorExpression__Group_1__0)*
	{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getXorKeyword_1_0()); }
	'xor'
	{ after(grammarAccess.getXorExpressionAccess().getXorKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getRightAssignment_1_1()); }
	(rule__XorExpression__RightAssignment_1_1)
	{ after(grammarAccess.getXorExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getLeftAssignment_0()); }
	(rule__OrExpression__LeftAssignment_0)
	{ after(grammarAccess.getOrExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getOrExpressionAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__OrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getLeftAssignment_0()); }
	(rule__AndExpression__LeftAssignment_0)
	{ after(grammarAccess.getAndExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getAndExpressionAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
	(rule__AndExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__0__Impl
	rule__ComparisonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLeftAssignment_0()); }
	(rule__ComparisonExpression__LeftAssignment_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRightAssignment_1()); }
	(rule__ComparisonExpression__RightAssignment_1)*
	{ after(grammarAccess.getComparisonExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperation__Group__0__Impl
	rule__ComparisonOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperationAccess().getOperatorAssignment_0()); }
	(rule__ComparisonOperation__OperatorAssignment_0)
	{ after(grammarAccess.getComparisonOperationAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperationAccess().getRightAssignment_1()); }
	(rule__ComparisonOperation__RightAssignment_1)
	{ after(grammarAccess.getComparisonOperationAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0()); }
	(rule__RelationalExpression__LeftAssignment_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1()); }
	(rule__RelationalExpression__RightAssignment_1)*
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOperation__Group__0__Impl
	rule__RelationalOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOperationAccess().getOperatorAssignment_0()); }
	(rule__RelationalOperation__OperatorAssignment_0)
	{ after(grammarAccess.getRelationalOperationAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalOperationAccess().getRightAssignment_1()); }
	(rule__RelationalOperation__RightAssignment_1)
	{ after(grammarAccess.getRelationalOperationAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__0__Impl
	rule__AdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getLeftAssignment_0()); }
	(rule__AdditionExpression__LeftAssignment_0)
	{ after(grammarAccess.getAdditionExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getRightAssignment_1()); }
	(rule__AdditionExpression__RightAssignment_1)*
	{ after(grammarAccess.getAdditionExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionOperation__Group__0__Impl
	rule__AdditionOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionOperationAccess().getOperatorAssignment_0()); }
	(rule__AdditionOperation__OperatorAssignment_0)
	{ after(grammarAccess.getAdditionOperationAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionOperationAccess().getRightAssignment_1()); }
	(rule__AdditionOperation__RightAssignment_1)
	{ after(grammarAccess.getAdditionOperationAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group__0__Impl
	rule__MultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getLeftAssignment_0()); }
	(rule__MultiplicationExpression__LeftAssignment_0)
	{ after(grammarAccess.getMultiplicationExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
	(rule__MultiplicationExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__0__Impl
	rule__MultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getAsteriskKeyword_1_0()); }
	'*'
	{ after(grammarAccess.getMultiplicationExpressionAccess().getAsteriskKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getRightAssignment_1_1()); }
	(rule__MultiplicationExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicationExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0()); }
	(rule__UnaryExpression__OperatorAssignment_0)?
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1()); }
	(rule__UnaryExpression__RightAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermExpression__Group_2__0__Impl
	rule__TermExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermExpressionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTermExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermExpression__Group_2__1__Impl
	rule__TermExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermExpressionAccess().getOclExpressionParserRuleCall_2_1()); }
	ruleOclExpression
	{ after(grammarAccess.getTermExpressionAccess().getOclExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermExpressionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTermExpressionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group__0__Impl
	rule__CallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getLeftAssignment_0()); }
	(rule__CallExpression__LeftAssignment_0)
	{ after(grammarAccess.getCallExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpressionAccess().getRightAssignment_1()); }
	(rule__CallExpression__RightAssignment_1)*
	{ after(grammarAccess.getCallExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DotOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotOperation__Group__0__Impl
	rule__DotOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DotOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotOperationAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getDotOperationAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DotOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotOperationAccess().getRightAssignment_1()); }
	(rule__DotOperation__RightAssignment_1)
	{ after(grammarAccess.getDotOperationAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrowOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrowOperation__Group__0__Impl
	rule__ArrowOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowOperationAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getArrowOperationAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrowOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrowOperationAccess().getRightAssignment_1()); }
	(rule__ArrowOperation__RightAssignment_1)
	{ after(grammarAccess.getArrowOperationAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnarySetOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnarySetOperation__Group__0__Impl
	rule__UnarySetOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnarySetOperationAccess().getOperatorAssignment_0()); }
	(rule__UnarySetOperation__OperatorAssignment_0)
	{ after(grammarAccess.getUnarySetOperationAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnarySetOperation__Group__1__Impl
	rule__UnarySetOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnarySetOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUnarySetOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnarySetOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnarySetOperationAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getUnarySetOperationAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinarySetOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySetOperation__Group__0__Impl
	rule__BinarySetOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySetOperationAccess().getOperatorAssignment_0()); }
	(rule__BinarySetOperation__OperatorAssignment_0)
	{ after(grammarAccess.getBinarySetOperationAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySetOperation__Group__1__Impl
	rule__BinarySetOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySetOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBinarySetOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySetOperation__Group__2__Impl
	rule__BinarySetOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySetOperationAccess().getArgumentAssignment_2()); }
	(rule__BinarySetOperation__ArgumentAssignment_2)
	{ after(grammarAccess.getBinarySetOperationAccess().getArgumentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySetOperation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySetOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBinarySetOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryIteration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group__0__Impl
	rule__UnaryIteration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getIteratorAssignment_0()); }
	(rule__UnaryIteration__IteratorAssignment_0)
	{ after(grammarAccess.getUnaryIterationAccess().getIteratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group__1__Impl
	rule__UnaryIteration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUnaryIterationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group__2__Impl
	rule__UnaryIteration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getGroup_2()); }
	(rule__UnaryIteration__Group_2__0)?
	{ after(grammarAccess.getUnaryIterationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group__3__Impl
	rule__UnaryIteration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getBodyAssignment_3()); }
	(rule__UnaryIteration__BodyAssignment_3)
	{ after(grammarAccess.getUnaryIterationAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getUnaryIterationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryIteration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group_2__0__Impl
	rule__UnaryIteration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getVariablesAssignment_2_0()); }
	(rule__UnaryIteration__VariablesAssignment_2_0)
	{ after(grammarAccess.getUnaryIterationAccess().getVariablesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryIteration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryIterationAccess().getVerticalLineKeyword_2_1()); }
	'|'
	{ after(grammarAccess.getUnaryIterationAccess().getVerticalLineKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryIteration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group__0__Impl
	rule__BinaryIteration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getForAllKeyword_0()); }
	'forAll'
	{ after(grammarAccess.getBinaryIterationAccess().getForAllKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group__1__Impl
	rule__BinaryIteration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBinaryIterationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group__2__Impl
	rule__BinaryIteration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getGroup_2()); }
	(rule__BinaryIteration__Group_2__0)?
	{ after(grammarAccess.getBinaryIterationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group__3__Impl
	rule__BinaryIteration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getBodyAssignment_3()); }
	(rule__BinaryIteration__BodyAssignment_3)
	{ after(grammarAccess.getBinaryIterationAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBinaryIterationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryIteration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group_2__0__Impl
	rule__BinaryIteration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getVariablesAssignment_2_0()); }
	(rule__BinaryIteration__VariablesAssignment_2_0)
	{ after(grammarAccess.getBinaryIterationAccess().getVariablesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group_2__1__Impl
	rule__BinaryIteration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getCommaKeyword_2_1()); }
	','
	{ after(grammarAccess.getBinaryIterationAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group_2__2__Impl
	rule__BinaryIteration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getVariablesAssignment_2_2()); }
	(rule__BinaryIteration__VariablesAssignment_2_2)
	{ after(grammarAccess.getBinaryIterationAccess().getVariablesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryIteration__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryIterationAccess().getVerticalLineKeyword_2_3()); }
	'|'
	{ after(grammarAccess.getBinaryIterationAccess().getVerticalLineKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group__0__Impl
	rule__CollectionLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getSetKeyword_0()); }
	'Set'
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group__1__Impl
	rule__CollectionLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group__2__Impl
	rule__CollectionLiteralExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getPartsAssignment_2()); }
	(rule__CollectionLiteralExpression__PartsAssignment_2)
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getPartsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group__3__Impl
	rule__CollectionLiteralExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getGroup_3()); }
	(rule__CollectionLiteralExpression__Group_3__0)*
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionLiteralExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group_3__0__Impl
	rule__CollectionLiteralExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionLiteralExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionLiteralExpressionAccess().getPartsAssignment_3_1()); }
	(rule__CollectionLiteralExpression__PartsAssignment_3_1)
	{ after(grammarAccess.getCollectionLiteralExpressionAccess().getPartsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group__0__Impl
	rule__TupleLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getTupleKeyword_0()); }
	'Tuple'
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getTupleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group__1__Impl
	rule__TupleLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group__2__Impl
	rule__TupleLiteralExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getVariablesAssignment_2()); }
	(rule__TupleLiteralExpression__VariablesAssignment_2)
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group__3__Impl
	rule__TupleLiteralExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getGroup_3()); }
	(rule__TupleLiteralExpression__Group_3__0)*
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleLiteralExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group_3__0__Impl
	rule__TupleLiteralExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleLiteralExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleLiteralExpressionAccess().getVariablesAssignment_3_1()); }
	(rule__TupleLiteralExpression__VariablesAssignment_3_1)
	{ after(grammarAccess.getTupleLiteralExpressionAccess().getVariablesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER_LITERAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER_LITERAL__Group__0__Impl
	rule__NUMBER_LITERAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER_LITERAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER_LITERAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER_LITERAL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER_LITERAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBER_LITERALAccess().getGroup_1()); }
	(rule__NUMBER_LITERAL__Group_1__0)?
	{ after(grammarAccess.getNUMBER_LITERALAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER_LITERAL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER_LITERAL__Group_1__0__Impl
	rule__NUMBER_LITERAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER_LITERAL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBER_LITERALAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getNUMBER_LITERALAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER_LITERAL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER_LITERAL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER_LITERAL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionTypeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeName__Group__0__Impl
	rule__CollectionTypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeNameAccess().getTypenameAssignment_0()); }
	(rule__CollectionTypeName__TypenameAssignment_0)
	{ after(grammarAccess.getCollectionTypeNameAccess().getTypenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeName__Group__1__Impl
	rule__CollectionTypeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeNameAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCollectionTypeNameAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeName__Group__2__Impl
	rule__CollectionTypeName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeNameAccess().getElementTypeAssignment_2()); }
	(rule__CollectionTypeName__ElementTypeAssignment_2)
	{ after(grammarAccess.getCollectionTypeNameAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionTypeName__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeNameAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCollectionTypeNameAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group__0__Impl
	rule__TupleTypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getTypenameAssignment_0()); }
	(rule__TupleTypeName__TypenameAssignment_0)
	{ after(grammarAccess.getTupleTypeNameAccess().getTypenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group__1__Impl
	rule__TupleTypeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTupleTypeNameAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group__2__Impl
	rule__TupleTypeName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getGroup_2()); }
	(rule__TupleTypeName__Group_2__0)?
	{ after(grammarAccess.getTupleTypeNameAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTupleTypeNameAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeName__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group_2__0__Impl
	rule__TupleTypeName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getVariablesAssignment_2_0()); }
	(rule__TupleTypeName__VariablesAssignment_2_0)
	{ after(grammarAccess.getTupleTypeNameAccess().getVariablesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getGroup_2_1()); }
	(rule__TupleTypeName__Group_2_1__0)*
	{ after(grammarAccess.getTupleTypeNameAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTypeName__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group_2_1__0__Impl
	rule__TupleTypeName__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getTupleTypeNameAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTypeName__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTypeNameAccess().getVariablesAssignment_2_1_1()); }
	(rule__TupleTypeName__VariablesAssignment_2_1_1)
	{ after(grammarAccess.getTupleTypeNameAccess().getVariablesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__UnorderedGroup_0
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
	}
:
	rule__GeneralizationSet__UnorderedGroup_0__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_0()); }
					(rule__GeneralizationSet__IsDisjointAssignment_0_0)
					{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_1()); }
					(rule__GeneralizationSet__IsCompleteAssignment_0_1)
					{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__UnorderedGroup_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__UnorderedGroup_0__Impl
	rule__GeneralizationSet__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__UnorderedGroup_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__IncludesAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getIncludesModelCrossReference_3_0_1_0()); }
		(
			{ before(grammarAccess.getModelAccess().getIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getModelAccess().getIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1()); }
		)
		{ after(grammarAccess.getModelAccess().getIncludesModelCrossReference_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_3_1_0()); }
		ruleModelElement
		{ after(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIndividualAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__ClassifiersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getClassifiersClassCrossReference_3_0()); }
		(
			{ before(grammarAccess.getIndividualAccess().getClassifiersClassQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIndividualAccess().getClassifiersClassQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getIndividualAccess().getClassifiersClassCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__ClassifiersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getClassifiersClassCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getIndividualAccess().getClassifiersClassQualifiedNameParserRuleCall_4_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIndividualAccess().getClassifiersClassQualifiedNameParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getIndividualAccess().getClassifiersClassCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Individual__AssignmentsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndividualAccess().getAssignmentsFeatureAssignmentParserRuleCall_5_1_0()); }
		ruleFeatureAssignment
		{ after(grammarAccess.getIndividualAccess().getAssignmentsFeatureAssignmentParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFirstOrderClassAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__ClassifiersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getClassifiersClassCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getFirstOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFirstOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getFirstOrderClassAccess().getClassifiersClassCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__ClassifiersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getClassifiersClassCrossReference_2_2_1_0()); }
		(
			{ before(grammarAccess.getFirstOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFirstOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getFirstOrderClassAccess().getClassifiersClassCrossReference_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__SuperClassesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__SuperClassesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassCrossReference_3_2_1_0()); }
		(
			{ before(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassCrossReference_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__AssignmentsAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0()); }
		ruleFeatureAssignment
		{ after(grammarAccess.getFirstOrderClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOrderClass__FeaturesAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstOrderClassAccess().getFeaturesFeatureParserRuleCall_4_1_1_0()); }
		ruleFeature
		{ after(grammarAccess.getFirstOrderClassAccess().getFeaturesFeatureParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ClassifiersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getClassifiersClassCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getClassifiersClassQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDataTypeAccess().getClassifiersClassQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getClassifiersClassCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ClassifiersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getClassifiersClassCrossReference_2_2_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDataTypeAccess().getClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getClassifiersClassCrossReference_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__SuperClassesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getSuperClassesClassCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDataTypeAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getSuperClassesClassCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__SuperClassesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getSuperClassesClassCrossReference_3_2_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDataTypeAccess().getSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getSuperClassesClassCrossReference_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__AssignmentsAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0()); }
		ruleFeatureAssignment
		{ after(grammarAccess.getDataTypeAccess().getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FeaturesAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getFeaturesFeatureParserRuleCall_4_1_1_0()); }
		ruleFeature
		{ after(grammarAccess.getDataTypeAccess().getFeaturesFeatureParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__OrderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getOrderINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getHighOrderClassAccess().getOrderINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getHighOrderClassAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__ClassifiersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getClassifiersClassCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_4_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getClassifiersClassCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__ClassifiersAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getClassifiersClassCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_4_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getClassifiersClassQualifiedNameParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getClassifiersClassCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__SuperClassesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getSuperClassesClassCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getSuperClassesClassCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__SuperClassesAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getSuperClassesClassCrossReference_5_2_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_5_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_5_2_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getSuperClassesClassCrossReference_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__SubordinatorsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__SubordinatorsAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassCrossReference_6_2_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_2_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassCrossReference_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__CategorizationTypeAssignment_7_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0()); }
		ruleCategorizationType
		{ after(grammarAccess.getHighOrderClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__CategorizedClassAssignment_7_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getCategorizedClassClassCrossReference_7_0_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getCategorizedClassClassQualifiedNameParserRuleCall_7_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getCategorizedClassClassQualifiedNameParserRuleCall_7_0_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getCategorizedClassClassCrossReference_7_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__PowertypeOfAssignment_7_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getPowertypeOfClassCrossReference_7_1_1_0()); }
		(
			{ before(grammarAccess.getHighOrderClassAccess().getPowertypeOfClassQualifiedNameParserRuleCall_7_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getHighOrderClassAccess().getPowertypeOfClassQualifiedNameParserRuleCall_7_1_1_0_1()); }
		)
		{ after(grammarAccess.getHighOrderClassAccess().getPowertypeOfClassCrossReference_7_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__AssignmentsAssignment_8_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_8_1_0_0()); }
		ruleFeatureAssignment
		{ after(grammarAccess.getHighOrderClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_8_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighOrderClass__FeaturesAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighOrderClassAccess().getFeaturesFeatureParserRuleCall_8_1_1_0()); }
		ruleFeature
		{ after(grammarAccess.getHighOrderClassAccess().getFeaturesFeatureParserRuleCall_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOrderlessClassAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__ClassifiersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getClassifiersClassCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getClassifiersClassQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getClassifiersClassQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getClassifiersClassCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__ClassifiersAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getClassifiersClassCrossReference_3_2_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getClassifiersClassQualifiedNameParserRuleCall_3_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getClassifiersClassQualifiedNameParserRuleCall_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getClassifiersClassCrossReference_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__SuperClassesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getSuperClassesClassCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_4_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getSuperClassesClassCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__SuperClassesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getSuperClassesClassCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_4_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getSuperClassesClassQualifiedNameParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getSuperClassesClassCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__SubordinatorsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__SubordinatorsAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassCrossReference_5_2_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_2_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassCrossReference_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__CategorizationTypeAssignment_6_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0()); }
		ruleCategorizationType
		{ after(grammarAccess.getOrderlessClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__CategorizedClassAssignment_6_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getCategorizedClassClassCrossReference_6_0_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getCategorizedClassClassQualifiedNameParserRuleCall_6_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getCategorizedClassClassQualifiedNameParserRuleCall_6_0_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getCategorizedClassClassCrossReference_6_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__PowertypeOfAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getPowertypeOfClassCrossReference_6_1_1_0()); }
		(
			{ before(grammarAccess.getOrderlessClassAccess().getPowertypeOfClassQualifiedNameParserRuleCall_6_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getOrderlessClassAccess().getPowertypeOfClassQualifiedNameParserRuleCall_6_1_1_0_1()); }
		)
		{ after(grammarAccess.getOrderlessClassAccess().getPowertypeOfClassCrossReference_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__AssignmentsAssignment_7_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_7_1_0_0()); }
		ruleFeatureAssignment
		{ after(grammarAccess.getOrderlessClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_7_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderlessClass__FeaturesAssignment_7_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderlessClassAccess().getFeaturesFeatureParserRuleCall_7_1_1_0()); }
		ruleFeature
		{ after(grammarAccess.getOrderlessClassAccess().getFeaturesFeatureParserRuleCall_7_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__IsDisjointAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
			'disjoint'
			{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__IsCompleteAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
			'complete'
			{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__GeneralAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGeneralClassCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getGeneralClassQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeneralizationSetAccess().getGeneralClassQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getGeneralClassCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__CategorizerAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getCategorizerHigherOrderClassCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getCategorizerHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeneralizationSetAccess().getCategorizerHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getCategorizerHigherOrderClassCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__SpecificsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsClassCrossReference_7_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsClassQualifiedNameParserRuleCall_7_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsClassQualifiedNameParserRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsClassCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__SpecificsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsClassCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getSpecificsClassQualifiedNameParserRuleCall_8_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsClassQualifiedNameParserRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getSpecificsClassCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__LowerBoundAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getLowerBoundCARDINALITYParserRuleCall_1_3_1_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getAttributeAccess().getLowerBoundCARDINALITYParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__UpperBoundAssignment_1_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getUpperBoundCARDINALITYParserRuleCall_1_3_3_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getAttributeAccess().getUpperBoundCARDINALITYParserRuleCall_1_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__PrimitiveTypeAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_1_4_0_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getAttributeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute___typeAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().get_typeDataTypeCrossReference_1_4_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().get_typeDataTypeQualifiedNameParserRuleCall_1_4_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAttributeAccess().get_typeDataTypeQualifiedNameParserRuleCall_1_4_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().get_typeDataTypeCrossReference_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__SubsetOfAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_1_5_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_1_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_1_5_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__SubsetOfAssignment_1_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_1_5_2_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_1_5_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_1_5_2_1_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_1_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRegularityAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__LowerBoundAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getLowerBoundCARDINALITYParserRuleCall_4_1_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getRegularityAttributeAccess().getLowerBoundCARDINALITYParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__UpperBoundAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getUpperBoundCARDINALITYParserRuleCall_4_3_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getRegularityAttributeAccess().getUpperBoundCARDINALITYParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__PrimitiveTypeAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getRegularityAttributeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute___typeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().get_typeDataTypeCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getRegularityAttributeAccess().get_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityAttributeAccess().get_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getRegularityAttributeAccess().get_typeDataTypeCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__SubsetOfAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__SubsetOfAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_2_1_0()); }
		(
			{ before(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1()); }
		)
		{ after(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__RegularityTypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0()); }
		ruleRegularityFeatureType
		{ after(grammarAccess.getRegularityAttributeAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityAttribute__RegulatesAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityAttributeAccess().getRegulatesAttributeCrossReference_8_0()); }
		(
			{ before(grammarAccess.getRegularityAttributeAccess().getRegulatesAttributeQualifiedNameParserRuleCall_8_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityAttributeAccess().getRegulatesAttributeQualifiedNameParserRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getRegularityAttributeAccess().getRegulatesAttributeCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__LowerBoundAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getLowerBoundCARDINALITYParserRuleCall_1_3_1_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getReferenceAccess().getLowerBoundCARDINALITYParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__UpperBoundAssignment_1_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getUpperBoundCARDINALITYParserRuleCall_1_3_3_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getReferenceAccess().getUpperBoundCARDINALITYParserRuleCall_1_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference___typeAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().get_typeClassCrossReference_1_4_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().get_typeClassQualifiedNameParserRuleCall_1_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getReferenceAccess().get_typeClassQualifiedNameParserRuleCall_1_4_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().get_typeClassCrossReference_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__SubsetOfAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_1_5_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_1_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_1_5_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__SubsetOfAssignment_1_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_1_5_2_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_1_5_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_1_5_2_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_1_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__OppositeToAssignment_1_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getOppositeToReferenceCrossReference_1_6_1_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getOppositeToReferenceQualifiedNameParserRuleCall_1_6_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getReferenceAccess().getOppositeToReferenceQualifiedNameParserRuleCall_1_6_1_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getOppositeToReferenceCrossReference_1_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRegularityReferenceAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__LowerBoundAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getLowerBoundCARDINALITYParserRuleCall_4_1_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getRegularityReferenceAccess().getLowerBoundCARDINALITYParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__UpperBoundAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getUpperBoundCARDINALITYParserRuleCall_4_3_0()); }
		ruleCARDINALITY
		{ after(grammarAccess.getRegularityReferenceAccess().getUpperBoundCARDINALITYParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference___typeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().get_typeClassCrossReference_5_0()); }
		(
			{ before(grammarAccess.getRegularityReferenceAccess().get_typeClassQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityReferenceAccess().get_typeClassQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getRegularityReferenceAccess().get_typeClassCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__SubsetOfAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__SubsetOfAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_2_1_0()); }
		(
			{ before(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1()); }
		)
		{ after(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__OppositeToAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getOppositeToReferenceCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getRegularityReferenceAccess().getOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityReferenceAccess().getOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getRegularityReferenceAccess().getOppositeToReferenceCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__RegularityTypeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0()); }
		ruleRegularityFeatureType
		{ after(grammarAccess.getRegularityReferenceAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularityReference__RegulatesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularityReferenceAccess().getRegulatesReferenceCrossReference_9_0()); }
		(
			{ before(grammarAccess.getRegularityReferenceAccess().getRegulatesReferenceQualifiedNameParserRuleCall_9_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRegularityReferenceAccess().getRegulatesReferenceQualifiedNameParserRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getRegularityReferenceAccess().getRegulatesReferenceCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__ReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceReferenceQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceReferenceQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReferenceAssignment__ValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSingleReferenceAssignmentAccess().getValuesEntityDeclarationQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSingleReferenceAssignmentAccess().getValuesEntityDeclarationQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSingleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__ReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceReferenceQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceReferenceQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__ValuesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_4_0()); }
		(
			{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationQualifiedNameParserRuleCall_4_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationQualifiedNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleReferenceAssignment__ValuesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationQualifiedNameParserRuleCall_5_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationQualifiedNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__LiteralValuesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__DatatypeValuesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAttributeAssignment__UnnamedValuesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0()); }
		ruleUnnamedIndividual
		{ after(grammarAccess.getSingleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__LiteralValuesAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_4_0_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__LiteralValuesAssignment_4_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_4_0_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_4_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__DatatypeValuesAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_4_1_0_0()); }
		(
			{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_0_0_1()); }
		)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__DatatypeValuesAssignment_4_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_4_1_1_1_0()); }
		(
			{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_4_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__UnnamedValuesAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_0_0()); }
		ruleUnnamedIndividual
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleAttributeAssignment__UnnamedValuesAssignment_4_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_1_1_0()); }
		ruleUnnamedIndividual
		{ after(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIndividual__AssignmentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnnamedIndividualAccess().getAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0()); }
		ruleSimpleAttributeAssignment
		{ after(grammarAccess.getUnnamedIndividualAccess().getAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__AttributeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__LiteralValuesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_2_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__DatatypeValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSimpleAttributeAssignment__UnnamedValuesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_2_2_0()); }
		ruleUnnamedIndividual
		{ after(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__AttributeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAttributeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__LiteralValuesAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__LiteralValuesAssignment_3_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__DatatypeValuesAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_0_0()); }
		(
			{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_0_1()); }
		)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__DatatypeValuesAssignment_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_1_1_0()); }
		(
			{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_1_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__UnnamedValuesAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0_0()); }
		ruleUnnamedIndividual
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleSimpleAttributeAssignment__UnnamedValuesAssignment_3_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_1_1_0()); }
		ruleUnnamedIndividual
		{ after(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__ContextAliasAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getContextAliasIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInvariantConstraintAccess().getContextAliasIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__ClassContextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getClassContextClassCrossReference_2_0()); }
		(
			{ before(grammarAccess.getInvariantConstraintAccess().getClassContextClassIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInvariantConstraintAccess().getClassContextClassIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getInvariantConstraintAccess().getClassContextClassCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__InvariantAliasAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getInvariantAliasIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getInvariantConstraintAccess().getInvariantAliasIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__ExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getExpressionOclExpressionParserRuleCall_6_0()); }
		ruleOclExpression
		{ after(grammarAccess.getInvariantConstraintAccess().getExpressionOclExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__ClassContextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationConstraintAccess().getClassContextClassCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDerivationConstraintAccess().getClassContextClassIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDerivationConstraintAccess().getClassContextClassIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDerivationConstraintAccess().getClassContextClassCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__FeatureContextAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationConstraintAccess().getFeatureContextFeatureCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDerivationConstraintAccess().getFeatureContextFeatureIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDerivationConstraintAccess().getFeatureContextFeatureIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDerivationConstraintAccess().getFeatureContextFeatureCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__TypenameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationConstraintAccess().getTypenameTypeLiteralExpressionParserRuleCall_5_0()); }
		ruleTypeLiteralExpression
		{ after(grammarAccess.getDerivationConstraintAccess().getTypenameTypeLiteralExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationConstraint__ExpressionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationConstraintAccess().getExpressionOclExpressionParserRuleCall_8_0()); }
		ruleOclExpression
		{ after(grammarAccess.getDerivationConstraintAccess().getExpressionOclExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getLetExpressionAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__VariablesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getVariablesVariableDeclarationParserRuleCall_2_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getLetExpressionAccess().getVariablesVariableDeclarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__InExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getInExpressionOclExpressionParserRuleCall_4_0()); }
		ruleOclExpression
		{ after(grammarAccess.getLetExpressionAccess().getInExpressionOclExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariableNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVariableNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getVariableNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariableTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVariableTypeTypeLiteralExpressionParserRuleCall_2_0()); }
		ruleTypeLiteralExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getVariableTypeTypeLiteralExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__InitialValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getInitialValueLiteralExpressionParserRuleCall_4_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getInitialValueLiteralExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getConditionOclExpressionParserRuleCall_1_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpressionAccess().getConditionOclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpressionAccess().getThenExpressionOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExpressionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); }
		ruleOclExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseExpressionOclExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getLeftXorExpressionParserRuleCall_0_0()); }
		ruleXorExpression
		{ after(grammarAccess.getImpliesExpressionAccess().getLeftXorExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getRightXorExpressionParserRuleCall_1_1_0()); }
		ruleXorExpression
		{ after(grammarAccess.getImpliesExpressionAccess().getRightXorExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getLeftOrExpressionParserRuleCall_0_0()); }
		ruleOrExpression
		{ after(grammarAccess.getXorExpressionAccess().getLeftOrExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getRightOrExpressionParserRuleCall_1_1_0()); }
		ruleOrExpression
		{ after(grammarAccess.getXorExpressionAccess().getRightOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getLeftAndExpressionParserRuleCall_0_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getLeftAndExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getLeftComparisonExpressionParserRuleCall_0_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getAndExpressionAccess().getLeftComparisonExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightComparisonExpressionParserRuleCall_1_1_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightComparisonExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getLeftRelationalExpressionParserRuleCall_0_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getLeftRelationalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRightComparisonOperationParserRuleCall_1_0()); }
		ruleComparisonOperation
		{ after(grammarAccess.getComparisonExpressionAccess().getRightComparisonOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperation__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperationAccess().getOperatorComparisonOperatorEnumRuleCall_0_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getComparisonOperationAccess().getOperatorComparisonOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperation__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperationAccess().getRightRelationalExpressionParserRuleCall_1_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getComparisonOperationAccess().getRightRelationalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getLeftAdditionExpressionParserRuleCall_0_0()); }
		ruleAdditionExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getLeftAdditionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightRelationalOperationParserRuleCall_1_0()); }
		ruleRelationalOperation
		{ after(grammarAccess.getRelationalExpressionAccess().getRightRelationalOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperation__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperationAccess().getOperatorRelationalOperatorEnumRuleCall_0_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getRelationalOperationAccess().getOperatorRelationalOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperation__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperationAccess().getRightAdditionExpressionParserRuleCall_1_0()); }
		ruleAdditionExpression
		{ after(grammarAccess.getRelationalOperationAccess().getRightAdditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getLeftMultiplicationExpressionParserRuleCall_0_0()); }
		ruleMultiplicationExpression
		{ after(grammarAccess.getAdditionExpressionAccess().getLeftMultiplicationExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getRightAdditionOperationParserRuleCall_1_0()); }
		ruleAdditionOperation
		{ after(grammarAccess.getAdditionExpressionAccess().getRightAdditionOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperation__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperationAccess().getOperatorAdditionOperatorEnumRuleCall_0_0()); }
		ruleAdditionOperator
		{ after(grammarAccess.getAdditionOperationAccess().getOperatorAdditionOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperation__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperationAccess().getRightMultiplicationExpressionParserRuleCall_1_0()); }
		ruleMultiplicationExpression
		{ after(grammarAccess.getAdditionOperationAccess().getRightMultiplicationExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getLeftUnaryExpressionParserRuleCall_0_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getMultiplicationExpressionAccess().getLeftUnaryExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getRightTermExpressionParserRuleCall_1_0()); }
		ruleTermExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getRightTermExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getLeftVariableExpressionParserRuleCall_0_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getCallExpressionAccess().getLeftVariableExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpressionAccess().getRightCallOperationParserRuleCall_1_0()); }
		ruleCallOperation
		{ after(grammarAccess.getCallExpressionAccess().getRightCallOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotOperation__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDotOperationAccess().getRightVariableExpressionParserRuleCall_1_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getDotOperationAccess().getRightVariableExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOperation__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrowOperationAccess().getRightBuiltInOperationParserRuleCall_1_0()); }
		ruleBuiltInOperation
		{ after(grammarAccess.getArrowOperationAccess().getRightBuiltInOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnarySetOperation__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnarySetOperationAccess().getOperatorUnarySetOperatorEnumRuleCall_0_0()); }
		ruleUnarySetOperator
		{ after(grammarAccess.getUnarySetOperationAccess().getOperatorUnarySetOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinarySetOperationAccess().getOperatorBinarySetOperatorEnumRuleCall_0_0()); }
		ruleBinarySetOperator
		{ after(grammarAccess.getBinarySetOperationAccess().getOperatorBinarySetOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySetOperation__ArgumentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinarySetOperationAccess().getArgumentOclExpressionParserRuleCall_2_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBinarySetOperationAccess().getArgumentOclExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__IteratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryIterationAccess().getIteratorUnaryIteratorEnumRuleCall_0_0()); }
		ruleUnaryIterator
		{ after(grammarAccess.getUnaryIterationAccess().getIteratorUnaryIteratorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__VariablesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryIterationAccess().getVariablesIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getUnaryIterationAccess().getVariablesIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryIteration__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryIterationAccess().getBodyOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getUnaryIterationAccess().getBodyOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__VariablesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryIterationAccess().getVariablesIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBinaryIterationAccess().getVariablesIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__VariablesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryIterationAccess().getVariablesIDTerminalRuleCall_2_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBinaryIterationAccess().getVariablesIDTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIteration__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryIterationAccess().getBodyOclExpressionParserRuleCall_3_0()); }
		ruleOclExpression
		{ after(grammarAccess.getBinaryIterationAccess().getBodyOclExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteralExpression__NullSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullLiteralExpressionAccess().getNullSymbolNullKeyword_0()); }
		(
			{ before(grammarAccess.getNullLiteralExpressionAccess().getNullSymbolNullKeyword_0()); }
			'null'
			{ after(grammarAccess.getNullLiteralExpressionAccess().getNullSymbolNullKeyword_0()); }
		)
		{ after(grammarAccess.getNullLiteralExpressionAccess().getNullSymbolNullKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpression__BooleanSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpressionAccess().getBooleanSymbolBOOLEAN_LITERALParserRuleCall_0()); }
		ruleBOOLEAN_LITERAL
		{ after(grammarAccess.getBooleanLiteralExpressionAccess().getBooleanSymbolBOOLEAN_LITERALParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteralExpression__NumberSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralExpressionAccess().getNumberSymbolNUMBER_LITERALParserRuleCall_0()); }
		ruleNUMBER_LITERAL
		{ after(grammarAccess.getNumberLiteralExpressionAccess().getNumberSymbolNUMBER_LITERALParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExpression__StringSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralExpressionAccess().getStringSymbolSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralExpressionAccess().getStringSymbolSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__PartsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionLiteralExpressionAccess().getPartsLiteralExpressionParserRuleCall_2_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getCollectionLiteralExpressionAccess().getPartsLiteralExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteralExpression__PartsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionLiteralExpressionAccess().getPartsLiteralExpressionParserRuleCall_3_1_0()); }
		ruleLiteralExpression
		{ after(grammarAccess.getCollectionLiteralExpressionAccess().getPartsLiteralExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__VariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleLiteralExpressionAccess().getVariablesIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTupleLiteralExpressionAccess().getVariablesIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleLiteralExpression__VariablesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleLiteralExpressionAccess().getVariablesIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTupleLiteralExpressionAccess().getVariablesIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__ReferringVariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getReferringVariableIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableExpressionAccess().getReferringVariableIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__ReferringVariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getReferringVariableSelfKeyword_1_0()); }
		(
			{ before(grammarAccess.getVariableExpressionAccess().getReferringVariableSelfKeyword_1_0()); }
			'self'
			{ after(grammarAccess.getVariableExpressionAccess().getReferringVariableSelfKeyword_1_0()); }
		)
		{ after(grammarAccess.getVariableExpressionAccess().getReferringVariableSelfKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeName__TypenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameBooleanKeyword_0_0()); }
		(
			{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameBooleanKeyword_0_0()); }
			'Boolean'
			{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameBooleanKeyword_0_0()); }
		)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameBooleanKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeName__TypenameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameNumberKeyword_1_0()); }
		(
			{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameNumberKeyword_1_0()); }
			'Number'
			{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameNumberKeyword_1_0()); }
		)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameNumberKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeName__TypenameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameStringKeyword_2_0()); }
		(
			{ before(grammarAccess.getPrimitiveTypeNameAccess().getTypenameStringKeyword_2_0()); }
			'String'
			{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameStringKeyword_2_0()); }
		)
		{ after(grammarAccess.getPrimitiveTypeNameAccess().getTypenameStringKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__TypenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeNameAccess().getTypenameSetKeyword_0_0()); }
		(
			{ before(grammarAccess.getCollectionTypeNameAccess().getTypenameSetKeyword_0_0()); }
			'Set'
			{ after(grammarAccess.getCollectionTypeNameAccess().getTypenameSetKeyword_0_0()); }
		)
		{ after(grammarAccess.getCollectionTypeNameAccess().getTypenameSetKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeName__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeNameAccess().getElementTypeTypeLiteralExpressionParserRuleCall_2_0()); }
		ruleTypeLiteralExpression
		{ after(grammarAccess.getCollectionTypeNameAccess().getElementTypeTypeLiteralExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__TypenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeNameAccess().getTypenameTupleKeyword_0_0()); }
		(
			{ before(grammarAccess.getTupleTypeNameAccess().getTypenameTupleKeyword_0_0()); }
			'Tuple'
			{ after(grammarAccess.getTupleTypeNameAccess().getTypenameTupleKeyword_0_0()); }
		)
		{ after(grammarAccess.getTupleTypeNameAccess().getTypenameTupleKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__VariablesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeNameAccess().getVariablesIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTupleTypeNameAccess().getVariablesIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTypeName__VariablesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTypeNameAccess().getVariablesIDTerminalRuleCall_2_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTupleTypeNameAccess().getVariablesIDTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclTypeName__TypenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclTypeNameAccess().getTypenameOclAnyKeyword_0_0()); }
		(
			{ before(grammarAccess.getOclTypeNameAccess().getTypenameOclAnyKeyword_0_0()); }
			'OclAny'
			{ after(grammarAccess.getOclTypeNameAccess().getTypenameOclAnyKeyword_0_0()); }
		)
		{ after(grammarAccess.getOclTypeNameAccess().getTypenameOclAnyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OclTypeName__TypenameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOclTypeNameAccess().getTypenameOclVoidKeyword_1_0()); }
		(
			{ before(grammarAccess.getOclTypeNameAccess().getTypenameOclVoidKeyword_1_0()); }
			'OclVoid'
			{ after(grammarAccess.getOclTypeNameAccess().getTypenameOclVoidKeyword_1_0()); }
		)
		{ after(grammarAccess.getOclTypeNameAccess().getTypenameOclVoidKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeName__TypenameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeNameAccess().getTypenameDataTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getDataTypeNameAccess().getTypenameDataTypeIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeNameAccess().getTypenameDataTypeIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getDataTypeNameAccess().getTypenameDataTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
