/**
 * generated by Xtext 2.20.0
 */
package br.ufes.inf.nemo.ml2.model.impl;

import br.ufes.inf.nemo.ml2.model.ModelPackage;
import br.ufes.inf.nemo.ml2.model.Reference;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.ReferenceImpl#getName <em>Name</em>}</li>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.ReferenceImpl#getLowerBound <em>Lower Bound</em>}</li>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.ReferenceImpl#getUpperBound <em>Upper Bound</em>}</li>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.ReferenceImpl#get_type <em>type</em>}</li>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.ReferenceImpl#getSubsetOf <em>Subset Of</em>}</li>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.ReferenceImpl#getOppositeTo <em>Opposite To</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReferenceImpl extends FeatureImpl implements Reference
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getLowerBound() <em>Lower Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLowerBound()
   * @generated
   * @ordered
   */
  protected static final int LOWER_BOUND_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLowerBound() <em>Lower Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLowerBound()
   * @generated
   * @ordered
   */
  protected int lowerBound = LOWER_BOUND_EDEFAULT;

  /**
   * The default value of the '{@link #getUpperBound() <em>Upper Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpperBound()
   * @generated
   * @ordered
   */
  protected static final int UPPER_BOUND_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getUpperBound() <em>Upper Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpperBound()
   * @generated
   * @ordered
   */
  protected int upperBound = UPPER_BOUND_EDEFAULT;

  /**
   * The cached value of the '{@link #get_type() <em>type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #get_type()
   * @generated
   * @ordered
   */
  protected br.ufes.inf.nemo.ml2.model.Class _type;

  /**
   * The cached value of the '{@link #getSubsetOf() <em>Subset Of</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubsetOf()
   * @generated
   * @ordered
   */
  protected EList<Reference> subsetOf;

  /**
   * The cached value of the '{@link #getOppositeTo() <em>Opposite To</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOppositeTo()
   * @generated
   * @ordered
   */
  protected Reference oppositeTo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelPackage.Literals.REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.REFERENCE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLowerBound()
  {
    return lowerBound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLowerBound(int newLowerBound)
  {
    int oldLowerBound = lowerBound;
    lowerBound = newLowerBound;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.REFERENCE__LOWER_BOUND, oldLowerBound, lowerBound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getUpperBound()
  {
    return upperBound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUpperBound(int newUpperBound)
  {
    int oldUpperBound = upperBound;
    upperBound = newUpperBound;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.REFERENCE__UPPER_BOUND, oldUpperBound, upperBound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public br.ufes.inf.nemo.ml2.model.Class get_type()
  {
    if (_type != null && _type.eIsProxy())
    {
      InternalEObject old_type = (InternalEObject)_type;
      _type = (br.ufes.inf.nemo.ml2.model.Class)eResolveProxy(old_type);
      if (_type != old_type)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ModelPackage.REFERENCE__TYPE, old_type, _type));
      }
    }
    return _type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public br.ufes.inf.nemo.ml2.model.Class basicGet_type()
  {
    return _type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void set_type(br.ufes.inf.nemo.ml2.model.Class new_type)
  {
    br.ufes.inf.nemo.ml2.model.Class old_type = _type;
    _type = new_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.REFERENCE__TYPE, old_type, _type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Reference> getSubsetOf()
  {
    if (subsetOf == null)
    {
      subsetOf = new EObjectResolvingEList<Reference>(Reference.class, this, ModelPackage.REFERENCE__SUBSET_OF);
    }
    return subsetOf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reference getOppositeTo()
  {
    if (oppositeTo != null && oppositeTo.eIsProxy())
    {
      InternalEObject oldOppositeTo = (InternalEObject)oppositeTo;
      oppositeTo = (Reference)eResolveProxy(oldOppositeTo);
      if (oppositeTo != oldOppositeTo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ModelPackage.REFERENCE__OPPOSITE_TO, oldOppositeTo, oppositeTo));
      }
    }
    return oppositeTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reference basicGetOppositeTo()
  {
    return oppositeTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOppositeTo(Reference newOppositeTo)
  {
    Reference oldOppositeTo = oppositeTo;
    oppositeTo = newOppositeTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.REFERENCE__OPPOSITE_TO, oldOppositeTo, oppositeTo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelPackage.REFERENCE__NAME:
        return getName();
      case ModelPackage.REFERENCE__LOWER_BOUND:
        return getLowerBound();
      case ModelPackage.REFERENCE__UPPER_BOUND:
        return getUpperBound();
      case ModelPackage.REFERENCE__TYPE:
        if (resolve) return get_type();
        return basicGet_type();
      case ModelPackage.REFERENCE__SUBSET_OF:
        return getSubsetOf();
      case ModelPackage.REFERENCE__OPPOSITE_TO:
        if (resolve) return getOppositeTo();
        return basicGetOppositeTo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelPackage.REFERENCE__NAME:
        setName((String)newValue);
        return;
      case ModelPackage.REFERENCE__LOWER_BOUND:
        setLowerBound((Integer)newValue);
        return;
      case ModelPackage.REFERENCE__UPPER_BOUND:
        setUpperBound((Integer)newValue);
        return;
      case ModelPackage.REFERENCE__TYPE:
        set_type((br.ufes.inf.nemo.ml2.model.Class)newValue);
        return;
      case ModelPackage.REFERENCE__SUBSET_OF:
        getSubsetOf().clear();
        getSubsetOf().addAll((Collection<? extends Reference>)newValue);
        return;
      case ModelPackage.REFERENCE__OPPOSITE_TO:
        setOppositeTo((Reference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelPackage.REFERENCE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ModelPackage.REFERENCE__LOWER_BOUND:
        setLowerBound(LOWER_BOUND_EDEFAULT);
        return;
      case ModelPackage.REFERENCE__UPPER_BOUND:
        setUpperBound(UPPER_BOUND_EDEFAULT);
        return;
      case ModelPackage.REFERENCE__TYPE:
        set_type((br.ufes.inf.nemo.ml2.model.Class)null);
        return;
      case ModelPackage.REFERENCE__SUBSET_OF:
        getSubsetOf().clear();
        return;
      case ModelPackage.REFERENCE__OPPOSITE_TO:
        setOppositeTo((Reference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelPackage.REFERENCE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ModelPackage.REFERENCE__LOWER_BOUND:
        return lowerBound != LOWER_BOUND_EDEFAULT;
      case ModelPackage.REFERENCE__UPPER_BOUND:
        return upperBound != UPPER_BOUND_EDEFAULT;
      case ModelPackage.REFERENCE__TYPE:
        return _type != null;
      case ModelPackage.REFERENCE__SUBSET_OF:
        return subsetOf != null && !subsetOf.isEmpty();
      case ModelPackage.REFERENCE__OPPOSITE_TO:
        return oppositeTo != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", lowerBound: ");
    result.append(lowerBound);
    result.append(", upperBound: ");
    result.append(upperBound);
    result.append(')');
    return result.toString();
  }

} //ReferenceImpl
