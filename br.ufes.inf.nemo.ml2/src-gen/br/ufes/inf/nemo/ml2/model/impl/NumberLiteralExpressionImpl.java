/**
 * generated by Xtext 2.21.0
 */
package br.ufes.inf.nemo.ml2.model.impl;

import br.ufes.inf.nemo.ml2.model.ModelPackage;
import br.ufes.inf.nemo.ml2.model.NumberLiteralExpression;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Number Literal Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.inf.nemo.ml2.model.impl.NumberLiteralExpressionImpl#getNumberSymbol <em>Number Symbol</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NumberLiteralExpressionImpl extends PrimitiveLiteralExpressionImpl implements NumberLiteralExpression
{
  /**
   * The default value of the '{@link #getNumberSymbol() <em>Number Symbol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumberSymbol()
   * @generated
   * @ordered
   */
  protected static final double NUMBER_SYMBOL_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getNumberSymbol() <em>Number Symbol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumberSymbol()
   * @generated
   * @ordered
   */
  protected double numberSymbol = NUMBER_SYMBOL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NumberLiteralExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelPackage.Literals.NUMBER_LITERAL_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getNumberSymbol()
  {
    return numberSymbol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumberSymbol(double newNumberSymbol)
  {
    double oldNumberSymbol = numberSymbol;
    numberSymbol = newNumberSymbol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.NUMBER_LITERAL_EXPRESSION__NUMBER_SYMBOL, oldNumberSymbol, numberSymbol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelPackage.NUMBER_LITERAL_EXPRESSION__NUMBER_SYMBOL:
        return getNumberSymbol();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelPackage.NUMBER_LITERAL_EXPRESSION__NUMBER_SYMBOL:
        setNumberSymbol((Double)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelPackage.NUMBER_LITERAL_EXPRESSION__NUMBER_SYMBOL:
        setNumberSymbol(NUMBER_SYMBOL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelPackage.NUMBER_LITERAL_EXPRESSION__NUMBER_SYMBOL:
        return numberSymbol != NUMBER_SYMBOL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (numberSymbol: ");
    result.append(numberSymbol);
    result.append(')');
    return result.toString();
  }

} //NumberLiteralExpressionImpl
