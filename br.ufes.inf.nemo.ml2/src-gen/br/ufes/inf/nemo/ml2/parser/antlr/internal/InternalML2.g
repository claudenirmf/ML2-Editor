/*
 * generated by Xtext 2.21.0
 */
grammar InternalML2;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.ufes.inf.nemo.ml2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.ufes.inf.nemo.ml2.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.ufes.inf.nemo.ml2.services.ML2GrammarAccess;

}

@parser::members {

 	private ML2GrammarAccess grammarAccess;

    public InternalML2Parser(TokenStream input, ML2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ML2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='module'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"br.ufes.inf.nemo.ml2.ML2.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				otherlv_3='include'
				{
					newLeafNode(otherlv_3, grammarAccess.getModelAccess().getIncludeKeyword_3_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getModelRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getModelAccess().getIncludesModelCrossReference_3_0_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getModelAccess().getSemicolonKeyword_3_0_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_3_1_0());
					}
					lv_elements_6_0=ruleModelElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"elements",
							lv_elements_6_0,
							"br.ufes.inf.nemo.ml2.ML2.ModelElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"br.ufes.inf.nemo.ml2.ML2.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	iv_ruleModelElement=ruleModelElement
	{ $current=$iv_ruleModelElement.current; }
	EOF;

// Rule ModelElement
ruleModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getImportParserRuleCall_0_0());
			}
			this_Import_0=ruleImport
			{
				$current = $this_Import_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getEntityDeclarationParserRuleCall_0_1());
			}
			this_EntityDeclaration_1=ruleEntityDeclaration
			{
				$current = $this_EntityDeclaration_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_0_2());
			}
			this_GeneralizationSet_2=ruleGeneralizationSet
			{
				$current = $this_GeneralizationSet_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getFeatureParserRuleCall_0_3());
			}
			this_Feature_3=ruleFeature
			{
				$current = $this_Feature_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelElementAccess().getFeatureAssignmentParserRuleCall_0_4());
			}
			this_FeatureAssignment_4=ruleFeatureAssignment
			{
				$current = $this_FeatureAssignment_4.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getModelElementAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleEntityDeclaration
entryRuleEntityDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityDeclarationRule()); }
	iv_ruleEntityDeclaration=ruleEntityDeclaration
	{ $current=$iv_ruleEntityDeclaration.current; }
	EOF;

// Rule EntityDeclaration
ruleEntityDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityDeclarationAccess().getClassParserRuleCall_0());
		}
		this_Class_0=ruleClass
		{
			$current = $this_Class_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityDeclarationAccess().getIndividualParserRuleCall_1());
		}
		this_Individual_1=ruleIndividual
		{
			$current = $this_Individual_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	iv_ruleClass=ruleClass
	{ $current=$iv_ruleClass.current; }
	EOF;

// Rule Class
ruleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassAccess().getFirstOrderClassOrDataTypeParserRuleCall_0());
		}
		this_FirstOrderClassOrDataType_0=ruleFirstOrderClassOrDataType
		{
			$current = $this_FirstOrderClassOrDataType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassAccess().getHigherOrderClassParserRuleCall_1());
		}
		this_HigherOrderClass_1=ruleHigherOrderClass
		{
			$current = $this_HigherOrderClass_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFirstOrderClassOrDataType
entryRuleFirstOrderClassOrDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFirstOrderClassOrDataTypeRule()); }
	iv_ruleFirstOrderClassOrDataType=ruleFirstOrderClassOrDataType
	{ $current=$iv_ruleFirstOrderClassOrDataType.current; }
	EOF;

// Rule FirstOrderClassOrDataType
ruleFirstOrderClassOrDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFirstOrderClassOrDataTypeAccess().getFirstOrderClassParserRuleCall_0());
		}
		this_FirstOrderClass_0=ruleFirstOrderClass
		{
			$current = $this_FirstOrderClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFirstOrderClassOrDataTypeAccess().getDataTypeParserRuleCall_1());
		}
		this_DataType_1=ruleDataType
		{
			$current = $this_DataType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleHigherOrderClass
entryRuleHigherOrderClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHigherOrderClassRule()); }
	iv_ruleHigherOrderClass=ruleHigherOrderClass
	{ $current=$iv_ruleHigherOrderClass.current; }
	EOF;

// Rule HigherOrderClass
ruleHigherOrderClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getHigherOrderClassAccess().getHighOrderClassParserRuleCall_0());
		}
		this_HighOrderClass_0=ruleHighOrderClass
		{
			$current = $this_HighOrderClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHigherOrderClassAccess().getOrderlessClassParserRuleCall_1());
		}
		this_OrderlessClass_1=ruleOrderlessClass
		{
			$current = $this_OrderlessClass_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndividual
entryRuleIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndividualRule()); }
	iv_ruleIndividual=ruleIndividual
	{ $current=$iv_ruleIndividual.current; }
	EOF;

// Rule Individual
ruleIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='individual'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndividualAccess().getIndividualKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIndividualAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndividualRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndividualAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndividualRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getIndividualAccess().getClassifiersClassCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getIndividualAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndividualRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getIndividualAccess().getClassifiersClassCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getIndividualAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIndividualAccess().getAssignmentsFeatureAssignmentParserRuleCall_5_1_0());
					}
					lv_assignments_7_0=ruleFeatureAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIndividualRule());
						}
						add(
							$current,
							"assignments",
							lv_assignments_7_0,
							"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getIndividualAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleOrderedClass
entryRuleOrderedClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderedClassRule()); }
	iv_ruleOrderedClass=ruleOrderedClass
	{ $current=$iv_ruleOrderedClass.current; }
	EOF;

// Rule OrderedClass
ruleOrderedClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrderedClassAccess().getHighOrderClassParserRuleCall_0());
		}
		this_HighOrderClass_0=ruleHighOrderClass
		{
			$current = $this_HighOrderClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOrderedClassAccess().getFirstOrderClassParserRuleCall_1());
		}
		this_FirstOrderClass_1=ruleFirstOrderClass
		{
			$current = $this_FirstOrderClass_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFirstOrderClass
entryRuleFirstOrderClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFirstOrderClassRule()); }
	iv_ruleFirstOrderClass=ruleFirstOrderClass
	{ $current=$iv_ruleFirstOrderClass.current; }
	EOF;

// Rule FirstOrderClass
ruleFirstOrderClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='class'
		{
			newLeafNode(otherlv_0, grammarAccess.getFirstOrderClassAccess().getClassKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFirstOrderClassAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFirstOrderClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getFirstOrderClassAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFirstOrderClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFirstOrderClassAccess().getClassifiersClassCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFirstOrderClassAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFirstOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getFirstOrderClassAccess().getClassifiersClassCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='specializes'
			{
				newLeafNode(otherlv_6, grammarAccess.getFirstOrderClassAccess().getSpecializesKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFirstOrderClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getFirstOrderClassAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFirstOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getFirstOrderClassAccess().getSuperClassesClassCrossReference_3_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getFirstOrderClassAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFirstOrderClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0());
						}
						lv_assignments_11_0=ruleFeatureAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFirstOrderClassRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_11_0,
								"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFirstOrderClassAccess().getFeaturesFeatureParserRuleCall_4_1_1_0());
						}
						lv_features_12_0=ruleFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFirstOrderClassRule());
							}
							add(
								$current,
								"features",
								lv_features_12_0,
								"br.ufes.inf.nemo.ml2.ML2.Feature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getFirstOrderClassAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataTypeAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getClassifiersClassCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDataTypeAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataTypeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDataTypeAccess().getClassifiersClassCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='specializes'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataTypeAccess().getSpecializesKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getSuperClassesClassCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDataTypeAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDataTypeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getDataTypeAccess().getSuperClassesClassCrossReference_3_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeAccess().getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0());
						}
						lv_assignments_11_0=ruleFeatureAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_11_0,
								"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDataTypeAccess().getFeaturesFeatureParserRuleCall_4_1_1_0());
						}
						lv_features_12_0=ruleFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataTypeRule());
							}
							add(
								$current,
								"features",
								lv_features_12_0,
								"br.ufes.inf.nemo.ml2.ML2.Feature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleHighOrderClass
entryRuleHighOrderClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHighOrderClassRule()); }
	iv_ruleHighOrderClass=ruleHighOrderClass
	{ $current=$iv_ruleHighOrderClass.current; }
	EOF;

// Rule HighOrderClass
ruleHighOrderClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='order'
		{
			newLeafNode(otherlv_0, grammarAccess.getHighOrderClassAccess().getOrderKeyword_0());
		}
		(
			(
				lv_order_1_0=RULE_INT
				{
					newLeafNode(lv_order_1_0, grammarAccess.getHighOrderClassAccess().getOrderINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHighOrderClassRule());
					}
					setWithLastConsumed(
						$current,
						"order",
						lv_order_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='class'
		{
			newLeafNode(otherlv_2, grammarAccess.getHighOrderClassAccess().getClassKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getHighOrderClassAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHighOrderClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getHighOrderClassAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHighOrderClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHighOrderClassAccess().getClassifiersClassCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getHighOrderClassAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHighOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getClassifiersClassCrossReference_4_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_8='specializes'
			{
				newLeafNode(otherlv_8, grammarAccess.getHighOrderClassAccess().getSpecializesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHighOrderClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHighOrderClassAccess().getSuperClassesClassCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getHighOrderClassAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHighOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getSuperClassesClassCrossReference_5_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='subordinatedTo'
			{
				newLeafNode(otherlv_12, grammarAccess.getHighOrderClassAccess().getSubordinatedToKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHighOrderClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getHighOrderClassAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHighOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getSubordinatorsHigherOrderClassCrossReference_6_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0());
						}
						lv_categorizationType_16_0=ruleCategorizationType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHighOrderClassRule());
							}
							set(
								$current,
								"categorizationType",
								lv_categorizationType_16_0,
								"br.ufes.inf.nemo.ml2.ML2.CategorizationType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHighOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getCategorizedClassClassCrossReference_7_0_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_18='isPowertypeOf'
				{
					newLeafNode(otherlv_18, grammarAccess.getHighOrderClassAccess().getIsPowertypeOfKeyword_7_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHighOrderClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getPowertypeOfClassCrossReference_7_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getHighOrderClassAccess().getLeftCurlyBracketKeyword_8_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_8_1_0_0());
						}
						lv_assignments_21_0=ruleFeatureAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHighOrderClassRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_21_0,
								"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getHighOrderClassAccess().getFeaturesFeatureParserRuleCall_8_1_1_0());
						}
						lv_features_22_0=ruleFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHighOrderClassRule());
							}
							add(
								$current,
								"features",
								lv_features_22_0,
								"br.ufes.inf.nemo.ml2.ML2.Feature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getHighOrderClassAccess().getRightCurlyBracketKeyword_8_2());
			}
		)?
	)
;

// Entry rule entryRuleOrderlessClass
entryRuleOrderlessClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderlessClassRule()); }
	iv_ruleOrderlessClass=ruleOrderlessClass
	{ $current=$iv_ruleOrderlessClass.current; }
	EOF;

// Rule OrderlessClass
ruleOrderlessClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='orderless'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderlessClassAccess().getOrderlessKeyword_0());
		}
		otherlv_1='class'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderlessClassAccess().getClassKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOrderlessClassAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderlessClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getOrderlessClassAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrderlessClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getOrderlessClassAccess().getClassifiersClassCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getOrderlessClassAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrderlessClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getClassifiersClassCrossReference_3_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_7='specializes'
			{
				newLeafNode(otherlv_7, grammarAccess.getOrderlessClassAccess().getSpecializesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrderlessClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getOrderlessClassAccess().getSuperClassesClassCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getOrderlessClassAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrderlessClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getSuperClassesClassCrossReference_4_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_11='subordinatedTo'
			{
				newLeafNode(otherlv_11, grammarAccess.getOrderlessClassAccess().getSubordinatedToKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrderlessClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getOrderlessClassAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrderlessClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getSubordinatorsHigherOrderClassCrossReference_5_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0());
						}
						lv_categorizationType_15_0=ruleCategorizationType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrderlessClassRule());
							}
							set(
								$current,
								"categorizationType",
								lv_categorizationType_15_0,
								"br.ufes.inf.nemo.ml2.ML2.CategorizationType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrderlessClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getCategorizedClassClassCrossReference_6_0_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_17='isPowertypeOf'
				{
					newLeafNode(otherlv_17, grammarAccess.getOrderlessClassAccess().getIsPowertypeOfKeyword_6_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOrderlessClassRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getPowertypeOfClassCrossReference_6_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getOrderlessClassAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getAssignmentsFeatureAssignmentParserRuleCall_7_1_0_0());
						}
						lv_assignments_20_0=ruleFeatureAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrderlessClassRule());
							}
							add(
								$current,
								"assignments",
								lv_assignments_20_0,
								"br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getOrderlessClassAccess().getFeaturesFeatureParserRuleCall_7_1_1_0());
						}
						lv_features_21_0=ruleFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrderlessClassRule());
							}
							add(
								$current,
								"features",
								lv_features_21_0,
								"br.ufes.inf.nemo.ml2.ML2.Feature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22='}'
			{
				newLeafNode(otherlv_22, grammarAccess.getOrderlessClassAccess().getRightCurlyBracketKeyword_7_2());
			}
		)?
	)
;

// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralizationSetRule()); }
	iv_ruleGeneralizationSet=ruleGeneralizationSet
	{ $current=$iv_ruleGeneralizationSet.current; }
	EOF;

// Rule GeneralizationSet
ruleGeneralizationSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>((
									lv_isDisjoint_1_0='disjoint'
									{
										newLeafNode(lv_isDisjoint_1_0, grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGeneralizationSetRule());
										}
										setWithLastConsumed($current, "isDisjoint", true, "disjoint");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>((
									lv_isComplete_2_0='complete'
									{
										newLeafNode(lv_isComplete_2_0, grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGeneralizationSetRule());
										}
										setWithLastConsumed($current, "isComplete", true, "complete");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
				}
		)
		otherlv_3='genset'
		{
			newLeafNode(otherlv_3, grammarAccess.getGeneralizationSetAccess().getGensetKeyword_1());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_5='general'
		{
			newLeafNode(otherlv_5, grammarAccess.getGeneralizationSetAccess().getGeneralKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationSetAccess().getGeneralClassCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='categorizer'
			{
				newLeafNode(otherlv_7, grammarAccess.getGeneralizationSetAccess().getCategorizerKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGeneralizationSetRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGeneralizationSetAccess().getCategorizerHigherOrderClassCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='specifics'
		{
			newLeafNode(otherlv_9, grammarAccess.getGeneralizationSetAccess().getSpecificsKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationSetAccess().getSpecificsClassCrossReference_7_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getGeneralizationSetAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGeneralizationSetRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGeneralizationSetAccess().getSpecificsClassCrossReference_8_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0());
		}
		this_Attribute_0=ruleAttribute
		{
			$current = $this_Attribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getReferenceParserRuleCall_1());
		}
		this_Reference_1=ruleReference
		{
			$current = $this_Reference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getRegularityAttributeParserRuleCall_0());
		}
		this_RegularityAttribute_0=ruleRegularityAttribute
		{
			$current = $this_RegularityAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				otherlv_1='att'
				{
					newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getAttKeyword_1_0());
				}
			)?
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getColonKeyword_1_2());
			}
			(
				otherlv_4='['
				{
					newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributeAccess().getLowerBoundCARDINALITYParserRuleCall_1_3_1_0());
						}
						lv_lowerBound_5_0=ruleCARDINALITY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributeRule());
							}
							set(
								$current,
								"lowerBound",
								lv_lowerBound_5_0,
								"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6='..'
				{
					newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getFullStopFullStopKeyword_1_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributeAccess().getUpperBoundCARDINALITYParserRuleCall_1_3_3_0());
						}
						lv_upperBound_7_0=ruleCARDINALITY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributeRule());
							}
							set(
								$current,
								"upperBound",
								lv_upperBound_7_0,
								"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=']'
				{
					newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_1_3_4());
				}
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_1_4_0_0());
						}
						lv_primitiveType_9_0=rulePrimitiveType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributeRule());
							}
							set(
								$current,
								"primitiveType",
								lv_primitiveType_9_0,
								"br.ufes.inf.nemo.ml2.ML2.PrimitiveType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getAttributeAccess().get_typeDataTypeCrossReference_1_4_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_11='subsets'
				{
					newLeafNode(otherlv_11, grammarAccess.getAttributeAccess().getSubsetsKeyword_1_5_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_1_5_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_13=','
					{
						newLeafNode(otherlv_13, grammarAccess.getAttributeAccess().getCommaKeyword_1_5_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAttributeRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getAttributeAccess().getSubsetOfAttributeCrossReference_1_5_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
	)
;

// Entry rule entryRuleRegularityAttribute
entryRuleRegularityAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularityAttributeRule()); }
	iv_ruleRegularityAttribute=ruleRegularityAttribute
	{ $current=$iv_ruleRegularityAttribute.current; }
	EOF;

// Rule RegularityAttribute
ruleRegularityAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='regularity'
			{
				newLeafNode(otherlv_0, grammarAccess.getRegularityAttributeAccess().getRegularityKeyword_0());
			}
		)?
		(
			otherlv_1='att'
			{
				newLeafNode(otherlv_1, grammarAccess.getRegularityAttributeAccess().getAttKeyword_1());
			}
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRegularityAttributeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegularityAttributeAccess().getColonKeyword_3());
		}
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getRegularityAttributeAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getLowerBoundCARDINALITYParserRuleCall_4_1_0());
					}
					lv_lowerBound_5_0=ruleCARDINALITY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_5_0,
							"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='..'
			{
				newLeafNode(otherlv_6, grammarAccess.getRegularityAttributeAccess().getFullStopFullStopKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getUpperBoundCARDINALITYParserRuleCall_4_3_0());
					}
					lv_upperBound_7_0=ruleCARDINALITY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_7_0,
							"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getRegularityAttributeAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0());
					}
					lv_primitiveType_9_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_9_0,
							"br.ufes.inf.nemo.ml2.ML2.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityAttributeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().get_typeDataTypeCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_11='subsets'
			{
				newLeafNode(otherlv_11, grammarAccess.getRegularityAttributeAccess().getSubsetsKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityAttributeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getRegularityAttributeAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRegularityAttributeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRegularityAttributeAccess().getSubsetOfAttributeCrossReference_6_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularityAttributeAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0());
				}
				lv_regularityType_15_0=ruleRegularityFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularityAttributeRule());
					}
					set(
						$current,
						"regularityType",
						lv_regularityType_15_0,
						"br.ufes.inf.nemo.ml2.ML2.RegularityFeatureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityAttributeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityAttributeAccess().getRegulatesAttributeCrossReference_8_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReferenceAccess().getRegularityReferenceParserRuleCall_0());
		}
		this_RegularityReference_0=ruleRegularityReference
		{
			$current = $this_RegularityReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='ref'
			{
				newLeafNode(otherlv_1, grammarAccess.getReferenceAccess().getRefKeyword_1_0());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getColonKeyword_1_2());
			}
			(
				otherlv_4='['
				{
					newLeafNode(otherlv_4, grammarAccess.getReferenceAccess().getLeftSquareBracketKeyword_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceAccess().getLowerBoundCARDINALITYParserRuleCall_1_3_1_0());
						}
						lv_lowerBound_5_0=ruleCARDINALITY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceRule());
							}
							set(
								$current,
								"lowerBound",
								lv_lowerBound_5_0,
								"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6='..'
				{
					newLeafNode(otherlv_6, grammarAccess.getReferenceAccess().getFullStopFullStopKeyword_1_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceAccess().getUpperBoundCARDINALITYParserRuleCall_1_3_3_0());
						}
						lv_upperBound_7_0=ruleCARDINALITY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceRule());
							}
							set(
								$current,
								"upperBound",
								lv_upperBound_7_0,
								"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=']'
				{
					newLeafNode(otherlv_8, grammarAccess.getReferenceAccess().getRightSquareBracketKeyword_1_3_4());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getReferenceAccess().get_typeClassCrossReference_1_4_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10='subsets'
				{
					newLeafNode(otherlv_10, grammarAccess.getReferenceAccess().getSubsetsKeyword_1_5_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_1_5_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12=','
					{
						newLeafNode(otherlv_12, grammarAccess.getReferenceAccess().getCommaKeyword_1_5_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getReferenceRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getReferenceAccess().getSubsetOfReferenceCrossReference_1_5_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			(
				otherlv_14='isOppositeTo'
				{
					newLeafNode(otherlv_14, grammarAccess.getReferenceAccess().getIsOppositeToKeyword_1_6_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getReferenceAccess().getOppositeToReferenceCrossReference_1_6_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleRegularityReference
entryRuleRegularityReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularityReferenceRule()); }
	iv_ruleRegularityReference=ruleRegularityReference
	{ $current=$iv_ruleRegularityReference.current; }
	EOF;

// Rule RegularityReference
ruleRegularityReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='regularity'
			{
				newLeafNode(otherlv_0, grammarAccess.getRegularityReferenceAccess().getRegularityKeyword_0());
			}
		)?
		otherlv_1='ref'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegularityReferenceAccess().getRefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRegularityReferenceAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegularityReferenceAccess().getColonKeyword_3());
		}
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getRegularityReferenceAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getLowerBoundCARDINALITYParserRuleCall_4_1_0());
					}
					lv_lowerBound_5_0=ruleCARDINALITY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityReferenceRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_5_0,
							"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='..'
			{
				newLeafNode(otherlv_6, grammarAccess.getRegularityReferenceAccess().getFullStopFullStopKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getUpperBoundCARDINALITYParserRuleCall_4_3_0());
					}
					lv_upperBound_7_0=ruleCARDINALITY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularityReferenceRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_7_0,
							"br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getRegularityReferenceAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityReferenceAccess().get_typeClassCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='subsets'
			{
				newLeafNode(otherlv_10, grammarAccess.getRegularityReferenceAccess().getSubsetsKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getRegularityReferenceAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRegularityReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRegularityReferenceAccess().getSubsetOfReferenceCrossReference_6_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_14='isOppositeTo'
			{
				newLeafNode(otherlv_14, grammarAccess.getRegularityReferenceAccess().getIsOppositeToKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegularityReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegularityReferenceAccess().getOppositeToReferenceCrossReference_7_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularityReferenceAccess().getRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0());
				}
				lv_regularityType_16_0=ruleRegularityFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularityReferenceRule());
					}
					set(
						$current,
						"regularityType",
						lv_regularityType_16_0,
						"br.ufes.inf.nemo.ml2.ML2.RegularityFeatureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularityReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularityReferenceAccess().getRegulatesReferenceCrossReference_9_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRegularityFeature
entryRuleRegularityFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularityFeatureRule()); }
	iv_ruleRegularityFeature=ruleRegularityFeature
	{ $current=$iv_ruleRegularityFeature.current; }
	EOF;

// Rule RegularityFeature
ruleRegularityFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRegularityFeatureAccess().getRegularityAttributeParserRuleCall_0());
		}
		this_RegularityAttribute_0=ruleRegularityAttribute
		{
			$current = $this_RegularityAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularityFeatureAccess().getRegularityReferenceParserRuleCall_1());
		}
		this_RegularityReference_1=ruleRegularityReference
		{
			$current = $this_RegularityReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCARDINALITY
entryRuleCARDINALITY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCARDINALITYRule()); }
	iv_ruleCARDINALITY=ruleCARDINALITY
	{ $current=$iv_ruleCARDINALITY.current.getText(); }
	EOF;

// Rule CARDINALITY
ruleCARDINALITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCARDINALITYAccess().getAsteriskKeyword_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getCARDINALITYAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleFeatureAssignment
entryRuleFeatureAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureAssignmentRule()); }
	iv_ruleFeatureAssignment=ruleFeatureAssignment
	{ $current=$iv_ruleFeatureAssignment.current; }
	EOF;

// Rule FeatureAssignment
ruleFeatureAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getSingleReferenceAssignmentParserRuleCall_0());
		}
		this_SingleReferenceAssignment_0=ruleSingleReferenceAssignment
		{
			$current = $this_SingleReferenceAssignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getMultipleReferenceAssignmentParserRuleCall_1());
		}
		this_MultipleReferenceAssignment_1=ruleMultipleReferenceAssignment
		{
			$current = $this_MultipleReferenceAssignment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getSingleAttributeAssignmentParserRuleCall_2());
		}
		this_SingleAttributeAssignment_2=ruleSingleAttributeAssignment
		{
			$current = $this_SingleAttributeAssignment_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getMultipleAttributeAssignmentParserRuleCall_3());
		}
		this_MultipleAttributeAssignment_3=ruleMultipleAttributeAssignment
		{
			$current = $this_MultipleAttributeAssignment_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleReferenceAssignment
entryRuleSingleReferenceAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleReferenceAssignmentRule()); }
	iv_ruleSingleReferenceAssignment=ruleSingleReferenceAssignment
	{ $current=$iv_ruleSingleReferenceAssignment.current; }
	EOF;

// Rule SingleReferenceAssignment
ruleSingleReferenceAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleReferenceAssignmentAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleReferenceAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSingleReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleReferenceAssignmentAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleReferenceAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSingleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultipleReferenceAssignment
entryRuleMultipleReferenceAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleReferenceAssignmentRule()); }
	iv_ruleMultipleReferenceAssignment=ruleMultipleReferenceAssignment
	{ $current=$iv_ruleMultipleReferenceAssignment.current; }
	EOF;

// Rule MultipleReferenceAssignment
ruleMultipleReferenceAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleReferenceAssignmentAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleReferenceAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMultipleReferenceAssignmentAccess().getReferenceReferenceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getMultipleReferenceAssignmentAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultipleReferenceAssignmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleReferenceAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMultipleReferenceAssignmentAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultipleReferenceAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMultipleReferenceAssignmentAccess().getValuesEntityDeclarationCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMultipleReferenceAssignmentAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSingleAttributeAssignment
entryRuleSingleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleAttributeAssignmentRule()); }
	iv_ruleSingleAttributeAssignment=ruleSingleAttributeAssignment
	{ $current=$iv_ruleSingleAttributeAssignment.current; }
	EOF;

// Rule SingleAttributeAssignment
ruleSingleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='att'
			{
				newLeafNode(otherlv_0, grammarAccess.getSingleAttributeAssignmentAccess().getAttKeyword_0());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleAttributeAssignmentAccess().getEqualsSignKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_0());
					}
					lv_literalValues_3_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAttributeAssignmentRule());
						}
						add(
							$current,
							"literalValues",
							lv_literalValues_3_0,
							"br.ufes.inf.nemo.ml2.ML2.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingleAttributeAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0());
					}
					lv_unnamedValues_5_0=ruleUnnamedIndividual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAttributeAssignmentRule());
						}
						add(
							$current,
							"unnamedValues",
							lv_unnamedValues_5_0,
							"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMultipleAttributeAssignment
entryRuleMultipleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleAttributeAssignmentRule()); }
	iv_ruleMultipleAttributeAssignment=ruleMultipleAttributeAssignment
	{ $current=$iv_ruleMultipleAttributeAssignment.current; }
	EOF;

// Rule MultipleAttributeAssignment
ruleMultipleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='att'
			{
				newLeafNode(otherlv_0, grammarAccess.getMultipleAttributeAssignmentAccess().getAttKeyword_0());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getAttributeAttributeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getMultipleAttributeAssignmentAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultipleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_4_0_0_0());
						}
						lv_literalValues_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
							}
							add(
								$current,
								"literalValues",
								lv_literalValues_4_0,
								"br.ufes.inf.nemo.ml2.ML2.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_4_0_1_1_0());
							}
							lv_literalValues_6_0=ruleLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
								}
								add(
									$current,
									"literalValues",
									lv_literalValues_6_0,
									"br.ufes.inf.nemo.ml2.ML2.Literal");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultipleAttributeAssignmentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_4_1_0_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_8=','
					{
						newLeafNode(otherlv_8, grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_1_1_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultipleAttributeAssignmentRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_4_1_1_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_0_0());
						}
						lv_unnamedValues_10_0=ruleUnnamedIndividual
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
							}
							add(
								$current,
								"unnamedValues",
								lv_unnamedValues_10_0,
								"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_11=','
					{
						newLeafNode(otherlv_11, grammarAccess.getMultipleAttributeAssignmentAccess().getCommaKeyword_4_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMultipleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_1_1_0());
							}
							lv_unnamedValues_12_0=ruleUnnamedIndividual
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultipleAttributeAssignmentRule());
								}
								add(
									$current,
									"unnamedValues",
									lv_unnamedValues_12_0,
									"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getMultipleAttributeAssignmentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			newLeafNode(this_STRING_0, grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getNUMBERParserRuleCall_1());
		}
		ruleNUMBER
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBOOLEANParserRuleCall_2());
		}
		ruleBOOLEAN
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	iv_ruleBOOLEAN=ruleBOOLEAN
	{ $current=$iv_ruleBOOLEAN.current.getText(); }
	EOF;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;

// Entry rule entryRuleUnnamedIndividual
entryRuleUnnamedIndividual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnnamedIndividualRule()); }
	iv_ruleUnnamedIndividual=ruleUnnamedIndividual
	{ $current=$iv_ruleUnnamedIndividual.current; }
	EOF;

// Rule UnnamedIndividual
ruleUnnamedIndividual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnnamedIndividualAccess().getIndividualAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getUnnamedIndividualAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnnamedIndividualAccess().getAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0());
				}
				lv_assignments_2_0=ruleSimpleAttributeAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnnamedIndividualRule());
					}
					add(
						$current,
						"assignments",
						lv_assignments_2_0,
						"br.ufes.inf.nemo.ml2.ML2.SimpleAttributeAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getUnnamedIndividualAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSimpleAttributeAssignment
entryRuleSimpleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleAttributeAssignmentRule()); }
	iv_ruleSimpleAttributeAssignment=ruleSimpleAttributeAssignment
	{ $current=$iv_ruleSimpleAttributeAssignment.current; }
	EOF;

// Rule SimpleAttributeAssignment
ruleSimpleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getSingleSimpleAttributeAssignmentParserRuleCall_0());
		}
		this_SingleSimpleAttributeAssignment_0=ruleSingleSimpleAttributeAssignment
		{
			$current = $this_SingleSimpleAttributeAssignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleAttributeAssignmentAccess().getMultipleSimpleAttributeAssignmentParserRuleCall_1());
		}
		this_MultipleSimpleAttributeAssignment_1=ruleMultipleSimpleAttributeAssignment
		{
			$current = $this_MultipleSimpleAttributeAssignment_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleSimpleAttributeAssignment
entryRuleSingleSimpleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleSimpleAttributeAssignmentRule()); }
	iv_ruleSingleSimpleAttributeAssignment=ruleSingleSimpleAttributeAssignment
	{ $current=$iv_ruleSingleSimpleAttributeAssignment.current; }
	EOF;

// Rule SingleSimpleAttributeAssignment
ruleSingleSimpleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleSimpleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSingleSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_2_0_0());
					}
					lv_literalValues_2_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleSimpleAttributeAssignmentRule());
						}
						add(
							$current,
							"literalValues",
							lv_literalValues_2_0,
							"br.ufes.inf.nemo.ml2.ML2.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingleSimpleAttributeAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_2_2_0());
					}
					lv_unnamedValues_4_0=ruleUnnamedIndividual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleSimpleAttributeAssignmentRule());
						}
						add(
							$current,
							"unnamedValues",
							lv_unnamedValues_4_0,
							"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMultipleSimpleAttributeAssignment
entryRuleMultipleSimpleAttributeAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentRule()); }
	iv_ruleMultipleSimpleAttributeAssignment=ruleMultipleSimpleAttributeAssignment
	{ $current=$iv_ruleMultipleSimpleAttributeAssignment.current; }
	EOF;

// Rule MultipleSimpleAttributeAssignment
ruleMultipleSimpleAttributeAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getAttributeAttributeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_0_0());
						}
						lv_literalValues_3_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
							}
							add(
								$current,
								"literalValues",
								lv_literalValues_3_0,
								"br.ufes.inf.nemo.ml2.ML2.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getLiteralValuesLiteralParserRuleCall_3_0_1_1_0());
							}
							lv_literalValues_5_0=ruleLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
								}
								add(
									$current,
									"literalValues",
									lv_literalValues_5_0,
									"br.ufes.inf.nemo.ml2.ML2.Literal");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_0_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_1_1_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getDatatypeValuesIndividualCrossReference_3_1_1_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0_0());
						}
						lv_unnamedValues_9_0=ruleUnnamedIndividual
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
							}
							add(
								$current,
								"unnamedValues",
								lv_unnamedValues_9_0,
								"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getCommaKeyword_3_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_1_1_0());
							}
							lv_unnamedValues_11_0=ruleUnnamedIndividual
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultipleSimpleAttributeAssignmentRule());
								}
								add(
									$current,
									"unnamedValues",
									lv_unnamedValues_11_0,
									"br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getMultipleSimpleAttributeAssignmentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule CategorizationType
ruleCategorizationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='categorizes'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getCATEGORIZEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCategorizationTypeAccess().getCATEGORIZEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='completeCategorizes'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCategorizationTypeAccess().getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='disjointCategorizes'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCategorizationTypeAccess().getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='partitions'
			{
				$current = grammarAccess.getCategorizationTypeAccess().getPARTITIONEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCategorizationTypeAccess().getPARTITIONEREnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule PrimitiveType
rulePrimitiveType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getPrimitiveTypeAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPrimitiveTypeAccess().getSTRINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Number'
			{
				$current = grammarAccess.getPrimitiveTypeAccess().getNUMBEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPrimitiveTypeAccess().getNUMBEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Boolean'
			{
				$current = grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule RegularityFeatureType
ruleRegularityFeatureType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='determinesMaxValue'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MAX_VALUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MAX_VALUEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='determinesMinValue'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MIN_VALUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_MIN_VALUEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='determinesValue'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_VALUEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_VALUEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='determinesAllowedValues'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='determinesType'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_TYPEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_TYPEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='determinesAllowedTypes'
			{
				$current = grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRegularityFeatureTypeAccess().getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
