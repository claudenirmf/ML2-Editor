/*
 * generated by Xtext 2.21.0
 */
package br.ufes.inf.nemo.ml2.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ML2GrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cIncludeKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cIncludesAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cIncludesModelCrossReference_3_0_1_0 = (CrossReference)cIncludesAssignment_3_0_1.eContents().get(0);
		private final RuleCall cIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1 = (RuleCall)cIncludesModelCrossReference_3_0_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Assignment cElementsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cElementsModelElementParserRuleCall_3_1_0 = (RuleCall)cElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Model:
		//	'module' name=QualifiedName
		//	'{' ('include' includes+=[Model|QualifiedName] ';' | elements+=ModelElement)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=QualifiedName '{' ('include' includes+=[Model|QualifiedName] ';' | elements+=ModelElement)* '}'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('include' includes+=[Model|QualifiedName] ';' | elements+=ModelElement)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'include' includes+=[Model|QualifiedName] ';'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'include'
		public Keyword getIncludeKeyword_3_0_0() { return cIncludeKeyword_3_0_0; }
		
		//includes+=[Model|QualifiedName]
		public Assignment getIncludesAssignment_3_0_1() { return cIncludesAssignment_3_0_1; }
		
		//[Model|QualifiedName]
		public CrossReference getIncludesModelCrossReference_3_0_1_0() { return cIncludesModelCrossReference_3_0_1_0; }
		
		//QualifiedName
		public RuleCall getIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1() { return cIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_0_2() { return cSemicolonKeyword_3_0_2; }
		
		//elements+=ModelElement
		public Assignment getElementsAssignment_3_1() { return cElementsAssignment_3_1; }
		
		//ModelElement
		public RuleCall getElementsModelElementParserRuleCall_3_1_0() { return cElementsModelElementParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.*'?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName '.*'?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//'.*'?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	'import' importedNamespace=QualifiedNameWithWildcard;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}
	public class ModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ModelElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cImportParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cEntityDeclarationParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cGeneralizationSetParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cFeatureParserRuleCall_0_3 = (RuleCall)cAlternatives_0.eContents().get(3);
		private final RuleCall cFeatureAssignmentParserRuleCall_0_4 = (RuleCall)cAlternatives_0.eContents().get(4);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ModelElement:
		//	(Import | EntityDeclaration | GeneralizationSet | Feature | FeatureAssignment) ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(Import | EntityDeclaration | GeneralizationSet | Feature | FeatureAssignment) ';'
		public Group getGroup() { return cGroup; }
		
		//(Import | EntityDeclaration | GeneralizationSet | Feature | FeatureAssignment)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//Import
		public RuleCall getImportParserRuleCall_0_0() { return cImportParserRuleCall_0_0; }
		
		//EntityDeclaration
		public RuleCall getEntityDeclarationParserRuleCall_0_1() { return cEntityDeclarationParserRuleCall_0_1; }
		
		//GeneralizationSet
		public RuleCall getGeneralizationSetParserRuleCall_0_2() { return cGeneralizationSetParserRuleCall_0_2; }
		
		//Feature
		public RuleCall getFeatureParserRuleCall_0_3() { return cFeatureParserRuleCall_0_3; }
		
		//FeatureAssignment
		public RuleCall getFeatureAssignmentParserRuleCall_0_4() { return cFeatureAssignmentParserRuleCall_0_4; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class EntityDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.EntityDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIndividualParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EntityDeclaration:
		//	Class | Individual;
		@Override public ParserRule getRule() { return rule; }
		
		//Class | Individual
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Class
		public RuleCall getClassParserRuleCall_0() { return cClassParserRuleCall_0; }
		
		//Individual
		public RuleCall getIndividualParserRuleCall_1() { return cIndividualParserRuleCall_1; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Class");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFirstOrderClassOrDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHigherOrderClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Class:
		//	FirstOrderClassOrDataType | HigherOrderClass;
		@Override public ParserRule getRule() { return rule; }
		
		//FirstOrderClassOrDataType | HigherOrderClass
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FirstOrderClassOrDataType
		public RuleCall getFirstOrderClassOrDataTypeParserRuleCall_0() { return cFirstOrderClassOrDataTypeParserRuleCall_0; }
		
		//HigherOrderClass
		public RuleCall getHigherOrderClassParserRuleCall_1() { return cHigherOrderClassParserRuleCall_1; }
	}
	public class FirstOrderClassOrDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.FirstOrderClassOrDataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFirstOrderClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//FirstOrderClassOrDataType FirstOrderClass:
		//	FirstOrderClass | DataType;
		@Override public ParserRule getRule() { return rule; }
		
		//FirstOrderClass | DataType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FirstOrderClass
		public RuleCall getFirstOrderClassParserRuleCall_0() { return cFirstOrderClassParserRuleCall_0; }
		
		//DataType
		public RuleCall getDataTypeParserRuleCall_1() { return cDataTypeParserRuleCall_1; }
	}
	public class HigherOrderClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.HigherOrderClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHighOrderClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOrderlessClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//HigherOrderClass:
		//	HighOrderClass | OrderlessClass;
		@Override public ParserRule getRule() { return rule; }
		
		//HighOrderClass | OrderlessClass
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//HighOrderClass
		public RuleCall getHighOrderClassParserRuleCall_0() { return cHighOrderClassParserRuleCall_0; }
		
		//OrderlessClass
		public RuleCall getOrderlessClassParserRuleCall_1() { return cOrderlessClassParserRuleCall_1; }
	}
	public class IndividualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Individual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndividualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassifiersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cClassifiersClassCrossReference_3_0 = (CrossReference)cClassifiersAssignment_3.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cClassifiersClassCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClassifiersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_4_1_0 = (CrossReference)cClassifiersAssignment_4_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cClassifiersClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssignmentsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_5_1_0 = (RuleCall)cAssignmentsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//Individual:
		//	'individual' name=ID
		//	':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])* ('{' assignments+=FeatureAssignment*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'individual' name=ID ':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])* ('{'
		//assignments+=FeatureAssignment* '}')?
		public Group getGroup() { return cGroup; }
		
		//'individual'
		public Keyword getIndividualKeyword_0() { return cIndividualKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_3() { return cClassifiersAssignment_3; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_3_0() { return cClassifiersClassCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_3_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_3_0_1; }
		
		//(',' classifiers+=[Class|QualifiedName])*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_4_1() { return cClassifiersAssignment_4_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_4_1_0() { return cClassifiersClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_4_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//('{' assignments+=FeatureAssignment* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }
		
		//assignments+=FeatureAssignment*
		public Assignment getAssignmentsAssignment_5_1() { return cAssignmentsAssignment_5_1; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_5_1_0() { return cAssignmentsFeatureAssignmentParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_2() { return cRightCurlyBracketKeyword_5_2; }
	}
	public class ClassIntoOrderedOrOrderlessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.ClassIntoOrderedOrOrderless");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOrderlessClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOrderedClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// ParserRule used to enforce specialization only
		//ClassIntoOrderedOrOrderless Class:
		//	OrderlessClass | OrderedClass;
		@Override public ParserRule getRule() { return rule; }
		
		//OrderlessClass | OrderedClass
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OrderlessClass
		public RuleCall getOrderlessClassParserRuleCall_0() { return cOrderlessClassParserRuleCall_0; }
		
		//OrderedClass
		public RuleCall getOrderedClassParserRuleCall_1() { return cOrderedClassParserRuleCall_1; }
	}
	public class OrderedClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.OrderedClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHighOrderClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFirstOrderClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// ParserRule used to enforce specialization only
		//OrderedClass:
		//	HighOrderClass | FirstOrderClass;
		@Override public ParserRule getRule() { return rule; }
		
		//HighOrderClass | FirstOrderClass
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//HighOrderClass
		public RuleCall getHighOrderClassParserRuleCall_0() { return cHighOrderClassParserRuleCall_0; }
		
		//FirstOrderClass
		public RuleCall getFirstOrderClassParserRuleCall_1() { return cFirstOrderClassParserRuleCall_1; }
	}
	public class FirstOrderClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.FirstOrderClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_2_1_0 = (CrossReference)cClassifiersAssignment_2_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cClassifiersClassCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_2_2_1_0 = (CrossReference)cClassifiersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cClassifiersClassCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSpecializesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperClassesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_3_1_0 = (CrossReference)cSuperClassesAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_3_2_1_0 = (CrossReference)cSuperClassesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cAssignmentsAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0 = (RuleCall)cAssignmentsAssignment_4_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_4_1_1_0 = (RuleCall)cFeaturesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//FirstOrderClass:
		//	'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)? ('specializes'
		//	superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('{' (assignments+=FeatureAssignment
		//	| features+=Feature)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)? ('specializes'
		//superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('{' (assignments+=FeatureAssignment |
		//features+=Feature)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'class'
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_2_1() { return cClassifiersAssignment_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_2_1_0() { return cClassifiersClassCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_2_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' classifiers+=[Class|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_2_2_1() { return cClassifiersAssignment_2_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_2_2_1_0() { return cClassifiersClassCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1; }
		
		//('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_3_0() { return cSpecializesKeyword_3_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_3_1() { return cSuperClassesAssignment_3_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_3_1_0() { return cSuperClassesClassCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1; }
		
		//(',' superClasses+=[Class|QualifiedName])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_3_2_1() { return cSuperClassesAssignment_3_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_3_2_1_0() { return cSuperClassesClassCrossReference_3_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1; }
		
		//('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//(assignments+=FeatureAssignment | features+=Feature)*
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//assignments+=FeatureAssignment
		public Assignment getAssignmentsAssignment_4_1_0() { return cAssignmentsAssignment_4_1_0; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0() { return cAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_4_1_1() { return cFeaturesAssignment_4_1_1; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_4_1_1_0() { return cFeaturesFeatureParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_2_1_0 = (CrossReference)cClassifiersAssignment_2_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cClassifiersClassCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_2_2_1_0 = (CrossReference)cClassifiersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cClassifiersClassCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSpecializesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperClassesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_3_1_0 = (CrossReference)cSuperClassesAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_3_2_1_0 = (CrossReference)cSuperClassesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cAssignmentsAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0 = (RuleCall)cAssignmentsAssignment_4_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_4_1_1_0 = (RuleCall)cFeaturesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//DataType:
		//	'datatype' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)? ('specializes'
		//	superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('{' (assignments+=FeatureAssignment
		//	| features+=Feature)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'datatype' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)? ('specializes'
		//superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('{' (assignments+=FeatureAssignment |
		//features+=Feature)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_2_1() { return cClassifiersAssignment_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_2_1_0() { return cClassifiersClassCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_2_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' classifiers+=[Class|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_2_2_1() { return cClassifiersAssignment_2_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_2_2_1_0() { return cClassifiersClassCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_2_2_1_0_1; }
		
		//('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_3_0() { return cSpecializesKeyword_3_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_3_1() { return cSuperClassesAssignment_3_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_3_1_0() { return cSuperClassesClassCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_3_1_0_1; }
		
		//(',' superClasses+=[Class|QualifiedName])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_3_2_1() { return cSuperClassesAssignment_3_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_3_2_1_0() { return cSuperClassesClassCrossReference_3_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_3_2_1_0_1; }
		
		//('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//(assignments+=FeatureAssignment | features+=Feature)*
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//assignments+=FeatureAssignment
		public Assignment getAssignmentsAssignment_4_1_0() { return cAssignmentsAssignment_4_1_0; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0() { return cAssignmentsFeatureAssignmentParserRuleCall_4_1_0_0; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_4_1_1() { return cFeaturesAssignment_4_1_1; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_4_1_1_0() { return cFeaturesFeatureParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}
	public class HighOrderClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.HighOrderClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOrderAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOrderINTTerminalRuleCall_1_0 = (RuleCall)cOrderAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClassifiersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_4_1_0 = (CrossReference)cClassifiersAssignment_4_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cClassifiersClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_4_2_1_0 = (CrossReference)cClassifiersAssignment_4_2_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_4_2_1_0_1 = (RuleCall)cClassifiersClassCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSpecializesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSuperClassesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_5_1_0 = (CrossReference)cSuperClassesAssignment_5_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_5_2_1_0 = (CrossReference)cSuperClassesAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_5_2_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubordinatedToKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSubordinatorsHigherOrderClassCrossReference_6_1_0 = (CrossReference)cSubordinatorsAssignment_6_1.eContents().get(0);
		private final RuleCall cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSubordinatorsHigherOrderClassCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cSubordinatorsHigherOrderClassCrossReference_6_2_1_0 = (CrossReference)cSubordinatorsAssignment_6_2_1.eContents().get(0);
		private final RuleCall cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_2_1_0_1 = (RuleCall)cSubordinatorsHigherOrderClassCrossReference_6_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cAlternatives_7.eContents().get(0);
		private final Assignment cCategorizationTypeAssignment_7_0_0 = (Assignment)cGroup_7_0.eContents().get(0);
		private final RuleCall cCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0 = (RuleCall)cCategorizationTypeAssignment_7_0_0.eContents().get(0);
		private final Assignment cCategorizedClassAssignment_7_0_1 = (Assignment)cGroup_7_0.eContents().get(1);
		private final CrossReference cCategorizedClassClassCrossReference_7_0_1_0 = (CrossReference)cCategorizedClassAssignment_7_0_1.eContents().get(0);
		private final RuleCall cCategorizedClassClassQualifiedNameParserRuleCall_7_0_1_0_1 = (RuleCall)cCategorizedClassClassCrossReference_7_0_1_0.eContents().get(1);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final Keyword cIsPowertypeOfKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cPowertypeOfAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final CrossReference cPowertypeOfClassCrossReference_7_1_1_0 = (CrossReference)cPowertypeOfAssignment_7_1_1.eContents().get(0);
		private final RuleCall cPowertypeOfClassQualifiedNameParserRuleCall_7_1_1_0_1 = (RuleCall)cPowertypeOfClassCrossReference_7_1_1_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Alternatives cAlternatives_8_1 = (Alternatives)cGroup_8.eContents().get(1);
		private final Assignment cAssignmentsAssignment_8_1_0 = (Assignment)cAlternatives_8_1.eContents().get(0);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_8_1_0_0 = (RuleCall)cAssignmentsAssignment_8_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_8_1_1 = (Assignment)cAlternatives_8_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_8_1_1_0 = (RuleCall)cFeaturesAssignment_8_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		
		//HighOrderClass:
		//	'order' order=INT 'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		//	('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('subordinatedTo'
		//	subordinators+=[HigherOrderClass|QualifiedName] (',' subordinators+=[HigherOrderClass|QualifiedName])*)?
		//	(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
		//	powertypeOf=[Class|QualifiedName])? ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'order' order=INT 'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		//('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('subordinatedTo'
		//subordinators+=[HigherOrderClass|QualifiedName] (',' subordinators+=[HigherOrderClass|QualifiedName])*)?
		//(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
		//powertypeOf=[Class|QualifiedName])? ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'order'
		public Keyword getOrderKeyword_0() { return cOrderKeyword_0; }
		
		//order=INT
		public Assignment getOrderAssignment_1() { return cOrderAssignment_1; }
		
		//INT
		public RuleCall getOrderINTTerminalRuleCall_1_0() { return cOrderINTTerminalRuleCall_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//(':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//':'
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_4_1() { return cClassifiersAssignment_4_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_4_1_0() { return cClassifiersClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_4_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//(',' classifiers+=[Class|QualifiedName])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_4_2_1() { return cClassifiersAssignment_4_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_4_2_1_0() { return cClassifiersClassCrossReference_4_2_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_4_2_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_4_2_1_0_1; }
		
		//('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_5_0() { return cSpecializesKeyword_5_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_5_1() { return cSuperClassesAssignment_5_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_5_1_0() { return cSuperClassesClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_5_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' superClasses+=[Class|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_5_2_1() { return cSuperClassesAssignment_5_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_5_2_1_0() { return cSuperClassesClassCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_5_2_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//('subordinatedTo' subordinators+=[HigherOrderClass|QualifiedName] (','
		//subordinators+=[HigherOrderClass|QualifiedName])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'subordinatedTo'
		public Keyword getSubordinatedToKeyword_6_0() { return cSubordinatedToKeyword_6_0; }
		
		//subordinators+=[HigherOrderClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_6_1() { return cSubordinatorsAssignment_6_1; }
		
		//[HigherOrderClass|QualifiedName]
		public CrossReference getSubordinatorsHigherOrderClassCrossReference_6_1_0() { return cSubordinatorsHigherOrderClassCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_1_0_1() { return cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_1_0_1; }
		
		//(',' subordinators+=[HigherOrderClass|QualifiedName])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//subordinators+=[HigherOrderClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_6_2_1() { return cSubordinatorsAssignment_6_2_1; }
		
		//[HigherOrderClass|QualifiedName]
		public CrossReference getSubordinatorsHigherOrderClassCrossReference_6_2_1_0() { return cSubordinatorsHigherOrderClassCrossReference_6_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_2_1_0_1() { return cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_6_2_1_0_1; }
		
		//(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
		//powertypeOf=[Class|QualifiedName])?
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//categorizationType=CategorizationType categorizedClass=[Class|QualifiedName]
		public Group getGroup_7_0() { return cGroup_7_0; }
		
		//categorizationType=CategorizationType
		public Assignment getCategorizationTypeAssignment_7_0_0() { return cCategorizationTypeAssignment_7_0_0; }
		
		//CategorizationType
		public RuleCall getCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0() { return cCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0; }
		
		//categorizedClass=[Class|QualifiedName]
		public Assignment getCategorizedClassAssignment_7_0_1() { return cCategorizedClassAssignment_7_0_1; }
		
		//[Class|QualifiedName]
		public CrossReference getCategorizedClassClassCrossReference_7_0_1_0() { return cCategorizedClassClassCrossReference_7_0_1_0; }
		
		//QualifiedName
		public RuleCall getCategorizedClassClassQualifiedNameParserRuleCall_7_0_1_0_1() { return cCategorizedClassClassQualifiedNameParserRuleCall_7_0_1_0_1; }
		
		//'isPowertypeOf' powertypeOf=[Class|QualifiedName]
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//'isPowertypeOf'
		public Keyword getIsPowertypeOfKeyword_7_1_0() { return cIsPowertypeOfKeyword_7_1_0; }
		
		//powertypeOf=[Class|QualifiedName]
		public Assignment getPowertypeOfAssignment_7_1_1() { return cPowertypeOfAssignment_7_1_1; }
		
		//[Class|QualifiedName]
		public CrossReference getPowertypeOfClassCrossReference_7_1_1_0() { return cPowertypeOfClassCrossReference_7_1_1_0; }
		
		//QualifiedName
		public RuleCall getPowertypeOfClassQualifiedNameParserRuleCall_7_1_1_0_1() { return cPowertypeOfClassQualifiedNameParserRuleCall_7_1_1_0_1; }
		
		//('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_0() { return cLeftCurlyBracketKeyword_8_0; }
		
		//(assignments+=FeatureAssignment | features+=Feature)*
		public Alternatives getAlternatives_8_1() { return cAlternatives_8_1; }
		
		//assignments+=FeatureAssignment
		public Assignment getAssignmentsAssignment_8_1_0() { return cAssignmentsAssignment_8_1_0; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_8_1_0_0() { return cAssignmentsFeatureAssignmentParserRuleCall_8_1_0_0; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_8_1_1() { return cFeaturesAssignment_8_1_1; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_8_1_1_0() { return cFeaturesFeatureParserRuleCall_8_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_2() { return cRightCurlyBracketKeyword_8_2; }
	}
	public class OrderlessClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.OrderlessClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderlessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClassifiersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_3_1_0 = (CrossReference)cClassifiersAssignment_3_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cClassifiersClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cClassifiersClassCrossReference_3_2_1_0 = (CrossReference)cClassifiersAssignment_3_2_1.eContents().get(0);
		private final RuleCall cClassifiersClassQualifiedNameParserRuleCall_3_2_1_0_1 = (RuleCall)cClassifiersClassCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSpecializesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperClassesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_4_1_0 = (CrossReference)cSuperClassesAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cSuperClassesClassCrossReference_4_2_1_0 = (CrossReference)cSuperClassesAssignment_4_2_1.eContents().get(0);
		private final RuleCall cSuperClassesClassQualifiedNameParserRuleCall_4_2_1_0_1 = (RuleCall)cSuperClassesClassCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubordinatedToKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubordinatorsHigherOrderClassCrossReference_5_1_0 = (CrossReference)cSubordinatorsAssignment_5_1.eContents().get(0);
		private final RuleCall cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSubordinatorsHigherOrderClassCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSubordinatorsHigherOrderClassCrossReference_5_2_1_0 = (CrossReference)cSubordinatorsAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSubordinatorsHigherOrderClassCrossReference_5_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Assignment cCategorizationTypeAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0 = (RuleCall)cCategorizationTypeAssignment_6_0_0.eContents().get(0);
		private final Assignment cCategorizedClassAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final CrossReference cCategorizedClassClassCrossReference_6_0_1_0 = (CrossReference)cCategorizedClassAssignment_6_0_1.eContents().get(0);
		private final RuleCall cCategorizedClassClassQualifiedNameParserRuleCall_6_0_1_0_1 = (RuleCall)cCategorizedClassClassCrossReference_6_0_1_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cIsPowertypeOfKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cPowertypeOfAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final CrossReference cPowertypeOfClassCrossReference_6_1_1_0 = (CrossReference)cPowertypeOfAssignment_6_1_1.eContents().get(0);
		private final RuleCall cPowertypeOfClassQualifiedNameParserRuleCall_6_1_1_0_1 = (RuleCall)cPowertypeOfClassCrossReference_6_1_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Alternatives cAlternatives_7_1 = (Alternatives)cGroup_7.eContents().get(1);
		private final Assignment cAssignmentsAssignment_7_1_0 = (Assignment)cAlternatives_7_1.eContents().get(0);
		private final RuleCall cAssignmentsFeatureAssignmentParserRuleCall_7_1_0_0 = (RuleCall)cAssignmentsAssignment_7_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_7_1_1 = (Assignment)cAlternatives_7_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_7_1_1_0 = (RuleCall)cFeaturesAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//OrderlessClass:
		//	'orderless' 'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		//	('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('subordinatedTo'
		//	subordinators+=[HigherOrderClass|QualifiedName] (',' subordinators+=[HigherOrderClass|QualifiedName])*)?
		//	(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
		//	powertypeOf=[Class|QualifiedName])? ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'orderless' 'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		//('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('subordinatedTo'
		//subordinators+=[HigherOrderClass|QualifiedName] (',' subordinators+=[HigherOrderClass|QualifiedName])*)?
		//(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
		//powertypeOf=[Class|QualifiedName])? ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'orderless'
		public Keyword getOrderlessKeyword_0() { return cOrderlessKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_3_1() { return cClassifiersAssignment_3_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_3_1_0() { return cClassifiersClassCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_3_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_3_1_0_1; }
		
		//(',' classifiers+=[Class|QualifiedName])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//classifiers+=[Class|QualifiedName]
		public Assignment getClassifiersAssignment_3_2_1() { return cClassifiersAssignment_3_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getClassifiersClassCrossReference_3_2_1_0() { return cClassifiersClassCrossReference_3_2_1_0; }
		
		//QualifiedName
		public RuleCall getClassifiersClassQualifiedNameParserRuleCall_3_2_1_0_1() { return cClassifiersClassQualifiedNameParserRuleCall_3_2_1_0_1; }
		
		//('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_4_0() { return cSpecializesKeyword_4_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_4_1() { return cSuperClassesAssignment_4_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_4_1_0() { return cSuperClassesClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_4_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//(',' superClasses+=[Class|QualifiedName])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//superClasses+=[Class|QualifiedName]
		public Assignment getSuperClassesAssignment_4_2_1() { return cSuperClassesAssignment_4_2_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSuperClassesClassCrossReference_4_2_1_0() { return cSuperClassesClassCrossReference_4_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesClassQualifiedNameParserRuleCall_4_2_1_0_1() { return cSuperClassesClassQualifiedNameParserRuleCall_4_2_1_0_1; }
		
		//('subordinatedTo' subordinators+=[HigherOrderClass|QualifiedName] (','
		//subordinators+=[HigherOrderClass|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subordinatedTo'
		public Keyword getSubordinatedToKeyword_5_0() { return cSubordinatedToKeyword_5_0; }
		
		//subordinators+=[HigherOrderClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_5_1() { return cSubordinatorsAssignment_5_1; }
		
		//[HigherOrderClass|QualifiedName]
		public CrossReference getSubordinatorsHigherOrderClassCrossReference_5_1_0() { return cSubordinatorsHigherOrderClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1() { return cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' subordinators+=[HigherOrderClass|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//subordinators+=[HigherOrderClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_5_2_1() { return cSubordinatorsAssignment_5_2_1; }
		
		//[HigherOrderClass|QualifiedName]
		public CrossReference getSubordinatorsHigherOrderClassCrossReference_5_2_1_0() { return cSubordinatorsHigherOrderClassCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_2_1_0_1() { return cSubordinatorsHigherOrderClassQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
		//powertypeOf=[Class|QualifiedName])?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//categorizationType=CategorizationType categorizedClass=[Class|QualifiedName]
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//categorizationType=CategorizationType
		public Assignment getCategorizationTypeAssignment_6_0_0() { return cCategorizationTypeAssignment_6_0_0; }
		
		//CategorizationType
		public RuleCall getCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0() { return cCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0; }
		
		//categorizedClass=[Class|QualifiedName]
		public Assignment getCategorizedClassAssignment_6_0_1() { return cCategorizedClassAssignment_6_0_1; }
		
		//[Class|QualifiedName]
		public CrossReference getCategorizedClassClassCrossReference_6_0_1_0() { return cCategorizedClassClassCrossReference_6_0_1_0; }
		
		//QualifiedName
		public RuleCall getCategorizedClassClassQualifiedNameParserRuleCall_6_0_1_0_1() { return cCategorizedClassClassQualifiedNameParserRuleCall_6_0_1_0_1; }
		
		//'isPowertypeOf' powertypeOf=[Class|QualifiedName]
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'isPowertypeOf'
		public Keyword getIsPowertypeOfKeyword_6_1_0() { return cIsPowertypeOfKeyword_6_1_0; }
		
		//powertypeOf=[Class|QualifiedName]
		public Assignment getPowertypeOfAssignment_6_1_1() { return cPowertypeOfAssignment_6_1_1; }
		
		//[Class|QualifiedName]
		public CrossReference getPowertypeOfClassCrossReference_6_1_1_0() { return cPowertypeOfClassCrossReference_6_1_1_0; }
		
		//QualifiedName
		public RuleCall getPowertypeOfClassQualifiedNameParserRuleCall_6_1_1_0_1() { return cPowertypeOfClassQualifiedNameParserRuleCall_6_1_1_0_1; }
		
		//('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_0() { return cLeftCurlyBracketKeyword_7_0; }
		
		//(assignments+=FeatureAssignment | features+=Feature)*
		public Alternatives getAlternatives_7_1() { return cAlternatives_7_1; }
		
		//assignments+=FeatureAssignment
		public Assignment getAssignmentsAssignment_7_1_0() { return cAssignmentsAssignment_7_1_0; }
		
		//FeatureAssignment
		public RuleCall getAssignmentsFeatureAssignmentParserRuleCall_7_1_0_0() { return cAssignmentsFeatureAssignmentParserRuleCall_7_1_0_0; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_7_1_1() { return cFeaturesAssignment_7_1_1; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_7_1_1_0() { return cFeaturesFeatureParserRuleCall_7_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_2() { return cRightCurlyBracketKeyword_7_2; }
	}
	public class GeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.GeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cIsDisjointAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cIsDisjointDisjointKeyword_0_0_0 = (Keyword)cIsDisjointAssignment_0_0.eContents().get(0);
		private final Assignment cIsCompleteAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final Keyword cIsCompleteCompleteKeyword_0_1_0 = (Keyword)cIsCompleteAssignment_0_1.eContents().get(0);
		private final Keyword cGensetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cGeneralKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGeneralAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cGeneralClassCrossReference_4_0 = (CrossReference)cGeneralAssignment_4.eContents().get(0);
		private final RuleCall cGeneralClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cGeneralClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCategorizerKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCategorizerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cCategorizerHigherOrderClassCrossReference_5_1_0 = (CrossReference)cCategorizerAssignment_5_1.eContents().get(0);
		private final RuleCall cCategorizerHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cCategorizerHigherOrderClassCrossReference_5_1_0.eContents().get(1);
		private final Keyword cSpecificsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSpecificsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSpecificsClassCrossReference_7_0 = (CrossReference)cSpecificsAssignment_7.eContents().get(0);
		private final RuleCall cSpecificsClassQualifiedNameParserRuleCall_7_0_1 = (RuleCall)cSpecificsClassCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cSpecificsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cSpecificsClassCrossReference_8_1_0 = (CrossReference)cSpecificsAssignment_8_1.eContents().get(0);
		private final RuleCall cSpecificsClassQualifiedNameParserRuleCall_8_1_0_1 = (RuleCall)cSpecificsClassCrossReference_8_1_0.eContents().get(1);
		
		//GeneralizationSet:
		//	(isDisjoint?='disjoint'? & isComplete?='complete'?) 'genset' name=ID?
		//	'general' general=[Class|QualifiedName] ('categorizer' categorizer=[HigherOrderClass|QualifiedName])?
		//	'specifics' specifics+=[Class|QualifiedName] (',' specifics+=[Class|QualifiedName])+;
		@Override public ParserRule getRule() { return rule; }
		
		//(isDisjoint?='disjoint'? & isComplete?='complete'?) 'genset' name=ID? 'general' general=[Class|QualifiedName]
		//('categorizer' categorizer=[HigherOrderClass|QualifiedName])? 'specifics' specifics+=[Class|QualifiedName] (','
		//specifics+=[Class|QualifiedName])+
		public Group getGroup() { return cGroup; }
		
		//(isDisjoint?='disjoint'? & isComplete?='complete'?)
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//isDisjoint?='disjoint'?
		public Assignment getIsDisjointAssignment_0_0() { return cIsDisjointAssignment_0_0; }
		
		//'disjoint'
		public Keyword getIsDisjointDisjointKeyword_0_0_0() { return cIsDisjointDisjointKeyword_0_0_0; }
		
		//isComplete?='complete'?
		public Assignment getIsCompleteAssignment_0_1() { return cIsCompleteAssignment_0_1; }
		
		//'complete'
		public Keyword getIsCompleteCompleteKeyword_0_1_0() { return cIsCompleteCompleteKeyword_0_1_0; }
		
		//'genset'
		public Keyword getGensetKeyword_1() { return cGensetKeyword_1; }
		
		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'general'
		public Keyword getGeneralKeyword_3() { return cGeneralKeyword_3; }
		
		//general=[Class|QualifiedName]
		public Assignment getGeneralAssignment_4() { return cGeneralAssignment_4; }
		
		//[Class|QualifiedName]
		public CrossReference getGeneralClassCrossReference_4_0() { return cGeneralClassCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getGeneralClassQualifiedNameParserRuleCall_4_0_1() { return cGeneralClassQualifiedNameParserRuleCall_4_0_1; }
		
		//('categorizer' categorizer=[HigherOrderClass|QualifiedName])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'categorizer'
		public Keyword getCategorizerKeyword_5_0() { return cCategorizerKeyword_5_0; }
		
		//categorizer=[HigherOrderClass|QualifiedName]
		public Assignment getCategorizerAssignment_5_1() { return cCategorizerAssignment_5_1; }
		
		//[HigherOrderClass|QualifiedName]
		public CrossReference getCategorizerHigherOrderClassCrossReference_5_1_0() { return cCategorizerHigherOrderClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getCategorizerHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1() { return cCategorizerHigherOrderClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//'specifics'
		public Keyword getSpecificsKeyword_6() { return cSpecificsKeyword_6; }
		
		//specifics+=[Class|QualifiedName]
		public Assignment getSpecificsAssignment_7() { return cSpecificsAssignment_7; }
		
		//[Class|QualifiedName]
		public CrossReference getSpecificsClassCrossReference_7_0() { return cSpecificsClassCrossReference_7_0; }
		
		//QualifiedName
		public RuleCall getSpecificsClassQualifiedNameParserRuleCall_7_0_1() { return cSpecificsClassQualifiedNameParserRuleCall_7_0_1; }
		
		//(',' specifics+=[Class|QualifiedName])+
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//specifics+=[Class|QualifiedName]
		public Assignment getSpecificsAssignment_8_1() { return cSpecificsAssignment_8_1; }
		
		//[Class|QualifiedName]
		public CrossReference getSpecificsClassCrossReference_8_1_0() { return cSpecificsClassCrossReference_8_1_0; }
		
		//QualifiedName
		public RuleCall getSpecificsClassQualifiedNameParserRuleCall_8_1_0_1() { return cSpecificsClassQualifiedNameParserRuleCall_8_1_0_1; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Feature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Feature:
		//	Attribute | Reference;
		@Override public ParserRule getRule() { return rule; }
		
		//Attribute | Reference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }
		
		//Reference
		public RuleCall getReferenceParserRuleCall_1() { return cReferenceParserRuleCall_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Attribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularityAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAttKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cLowerBoundCARDINALITYParserRuleCall_1_3_1_0 = (RuleCall)cLowerBoundAssignment_1_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_3_2 = (Keyword)cGroup_1_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_1_3_3 = (Assignment)cGroup_1_3.eContents().get(3);
		private final RuleCall cUpperBoundCARDINALITYParserRuleCall_1_3_3_0 = (RuleCall)cUpperBoundAssignment_1_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3_4 = (Keyword)cGroup_1_3.eContents().get(4);
		private final Alternatives cAlternatives_1_4 = (Alternatives)cGroup_1.eContents().get(4);
		private final Assignment cPrimitiveTypeAssignment_1_4_0 = (Assignment)cAlternatives_1_4.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeEnumRuleCall_1_4_0_0 = (RuleCall)cPrimitiveTypeAssignment_1_4_0.eContents().get(0);
		private final Assignment c_typeAssignment_1_4_1 = (Assignment)cAlternatives_1_4.eContents().get(1);
		private final CrossReference c_typeDataTypeCrossReference_1_4_1_0 = (CrossReference)c_typeAssignment_1_4_1.eContents().get(0);
		private final RuleCall c_typeDataTypeQualifiedNameParserRuleCall_1_4_1_0_1 = (RuleCall)c_typeDataTypeCrossReference_1_4_1_0.eContents().get(1);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cSubsetsKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cSubsetOfAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_1_5_1_0 = (CrossReference)cSubsetOfAssignment_1_5_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_1_5_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_1_5_1_0.eContents().get(1);
		private final Group cGroup_1_5_2 = (Group)cGroup_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_1_5_2_0 = (Keyword)cGroup_1_5_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_1_5_2_1 = (Assignment)cGroup_1_5_2.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_1_5_2_1_0 = (CrossReference)cSubsetOfAssignment_1_5_2_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_1_5_2_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_1_5_2_1_0.eContents().get(1);
		
		//Attribute:
		//	RegularityAttribute |
		//	'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')? (primitiveType=PrimitiveType |
		//	_type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//	subsetOf+=[Attribute|QualifiedName])*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//RegularityAttribute | 'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//subsetOf+=[Attribute|QualifiedName])*)?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RegularityAttribute
		public RuleCall getRegularityAttributeParserRuleCall_0() { return cRegularityAttributeParserRuleCall_0; }
		
		//'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')? (primitiveType=PrimitiveType |
		//_type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'att'?
		public Keyword getAttKeyword_1_0() { return cAttKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_3_0() { return cLeftSquareBracketKeyword_1_3_0; }
		
		//lowerBound=CARDINALITY
		public Assignment getLowerBoundAssignment_1_3_1() { return cLowerBoundAssignment_1_3_1; }
		
		//CARDINALITY
		public RuleCall getLowerBoundCARDINALITYParserRuleCall_1_3_1_0() { return cLowerBoundCARDINALITYParserRuleCall_1_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_3_2() { return cFullStopFullStopKeyword_1_3_2; }
		
		//upperBound=CARDINALITY
		public Assignment getUpperBoundAssignment_1_3_3() { return cUpperBoundAssignment_1_3_3; }
		
		//CARDINALITY
		public RuleCall getUpperBoundCARDINALITYParserRuleCall_1_3_3_0() { return cUpperBoundCARDINALITYParserRuleCall_1_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3_4() { return cRightSquareBracketKeyword_1_3_4; }
		
		//(primitiveType=PrimitiveType | _type=[DataType|QualifiedName])
		public Alternatives getAlternatives_1_4() { return cAlternatives_1_4; }
		
		//primitiveType=PrimitiveType
		public Assignment getPrimitiveTypeAssignment_1_4_0() { return cPrimitiveTypeAssignment_1_4_0; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypePrimitiveTypeEnumRuleCall_1_4_0_0() { return cPrimitiveTypePrimitiveTypeEnumRuleCall_1_4_0_0; }
		
		//_type=[DataType|QualifiedName]
		public Assignment get_typeAssignment_1_4_1() { return c_typeAssignment_1_4_1; }
		
		//[DataType|QualifiedName]
		public CrossReference get_typeDataTypeCrossReference_1_4_1_0() { return c_typeDataTypeCrossReference_1_4_1_0; }
		
		//QualifiedName
		public RuleCall get_typeDataTypeQualifiedNameParserRuleCall_1_4_1_0_1() { return c_typeDataTypeQualifiedNameParserRuleCall_1_4_1_0_1; }
		
		//('subsets' subsetOf+=[Attribute|QualifiedName] (',' subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_1_5_0() { return cSubsetsKeyword_1_5_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_1_5_1() { return cSubsetOfAssignment_1_5_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_1_5_1_0() { return cSubsetOfAttributeCrossReference_1_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_1_5_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_1_5_1_0_1; }
		
		//(',' subsetOf+=[Attribute|QualifiedName])*
		public Group getGroup_1_5_2() { return cGroup_1_5_2; }
		
		//','
		public Keyword getCommaKeyword_1_5_2_0() { return cCommaKeyword_1_5_2_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_1_5_2_1() { return cSubsetOfAssignment_1_5_2_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_1_5_2_1_0() { return cSubsetOfAttributeCrossReference_1_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_1_5_2_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_1_5_2_1_0_1; }
	}
	public class RegularityAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegularityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAttKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerBoundCARDINALITYParserRuleCall_4_1_0 = (RuleCall)cLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cUpperBoundCARDINALITYParserRuleCall_4_3_0 = (RuleCall)cUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cPrimitiveTypeAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0 = (RuleCall)cPrimitiveTypeAssignment_5_0.eContents().get(0);
		private final Assignment c_typeAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final CrossReference c_typeDataTypeCrossReference_5_1_0 = (CrossReference)c_typeAssignment_5_1.eContents().get(0);
		private final RuleCall c_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)c_typeDataTypeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubsetsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_6_1_0 = (CrossReference)cSubsetOfAssignment_6_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_6_2_1_0 = (CrossReference)cSubsetOfAssignment_6_2_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_6_2_1_0.eContents().get(1);
		private final Assignment cRegularityTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0 = (RuleCall)cRegularityTypeAssignment_7.eContents().get(0);
		private final Assignment cRegulatesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cRegulatesAttributeCrossReference_8_0 = (CrossReference)cRegulatesAssignment_8.eContents().get(0);
		private final RuleCall cRegulatesAttributeQualifiedNameParserRuleCall_8_0_1 = (RuleCall)cRegulatesAttributeCrossReference_8_0.eContents().get(1);
		
		//RegularityAttribute:
		//	'regularity'? 'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//	(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//	subsetOf+=[Attribute|QualifiedName])*)?
		//	regularityType=RegularityFeatureType regulates=[Attribute|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'regularity'? 'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//subsetOf+=[Attribute|QualifiedName])*)? regularityType=RegularityFeatureType regulates=[Attribute|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'regularity'?
		public Keyword getRegularityKeyword_0() { return cRegularityKeyword_0; }
		
		//'att'?
		public Keyword getAttKeyword_1() { return cAttKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//lowerBound=CARDINALITY
		public Assignment getLowerBoundAssignment_4_1() { return cLowerBoundAssignment_4_1; }
		
		//CARDINALITY
		public RuleCall getLowerBoundCARDINALITYParserRuleCall_4_1_0() { return cLowerBoundCARDINALITYParserRuleCall_4_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }
		
		//upperBound=CARDINALITY
		public Assignment getUpperBoundAssignment_4_3() { return cUpperBoundAssignment_4_3; }
		
		//CARDINALITY
		public RuleCall getUpperBoundCARDINALITYParserRuleCall_4_3_0() { return cUpperBoundCARDINALITYParserRuleCall_4_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
		
		//(primitiveType=PrimitiveType | _type=[DataType|QualifiedName])
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//primitiveType=PrimitiveType
		public Assignment getPrimitiveTypeAssignment_5_0() { return cPrimitiveTypeAssignment_5_0; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0() { return cPrimitiveTypePrimitiveTypeEnumRuleCall_5_0_0; }
		
		//_type=[DataType|QualifiedName]
		public Assignment get_typeAssignment_5_1() { return c_typeAssignment_5_1; }
		
		//[DataType|QualifiedName]
		public CrossReference get_typeDataTypeCrossReference_5_1_0() { return c_typeDataTypeCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall get_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1() { return c_typeDataTypeQualifiedNameParserRuleCall_5_1_0_1; }
		
		//('subsets' subsetOf+=[Attribute|QualifiedName] (',' subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_6_0() { return cSubsetsKeyword_6_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_6_1() { return cSubsetOfAssignment_6_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_6_1_0() { return cSubsetOfAttributeCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_6_1_0_1; }
		
		//(',' subsetOf+=[Attribute|QualifiedName])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_6_2_1() { return cSubsetOfAssignment_6_2_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_6_2_1_0() { return cSubsetOfAttributeCrossReference_6_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_6_2_1_0_1; }
		
		//regularityType=RegularityFeatureType
		public Assignment getRegularityTypeAssignment_7() { return cRegularityTypeAssignment_7; }
		
		//RegularityFeatureType
		public RuleCall getRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0() { return cRegularityTypeRegularityFeatureTypeEnumRuleCall_7_0; }
		
		//regulates=[Attribute|QualifiedName]
		public Assignment getRegulatesAssignment_8() { return cRegulatesAssignment_8; }
		
		//[Attribute|QualifiedName]
		public CrossReference getRegulatesAttributeCrossReference_8_0() { return cRegulatesAttributeCrossReference_8_0; }
		
		//QualifiedName
		public RuleCall getRegulatesAttributeQualifiedNameParserRuleCall_8_0_1() { return cRegulatesAttributeQualifiedNameParserRuleCall_8_0_1; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Reference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularityReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cRefKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cLowerBoundCARDINALITYParserRuleCall_1_3_1_0 = (RuleCall)cLowerBoundAssignment_1_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_3_2 = (Keyword)cGroup_1_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_1_3_3 = (Assignment)cGroup_1_3.eContents().get(3);
		private final RuleCall cUpperBoundCARDINALITYParserRuleCall_1_3_3_0 = (RuleCall)cUpperBoundAssignment_1_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3_4 = (Keyword)cGroup_1_3.eContents().get(4);
		private final Assignment c_typeAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final CrossReference c_typeClassCrossReference_1_4_0 = (CrossReference)c_typeAssignment_1_4.eContents().get(0);
		private final RuleCall c_typeClassQualifiedNameParserRuleCall_1_4_0_1 = (RuleCall)c_typeClassCrossReference_1_4_0.eContents().get(1);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cSubsetsKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cSubsetOfAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_1_5_1_0 = (CrossReference)cSubsetOfAssignment_1_5_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_1_5_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_1_5_1_0.eContents().get(1);
		private final Group cGroup_1_5_2 = (Group)cGroup_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_1_5_2_0 = (Keyword)cGroup_1_5_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_1_5_2_1 = (Assignment)cGroup_1_5_2.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_1_5_2_1_0 = (CrossReference)cSubsetOfAssignment_1_5_2_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_1_5_2_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_1_5_2_1_0.eContents().get(1);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cIsOppositeToKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cOppositeToAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final CrossReference cOppositeToReferenceCrossReference_1_6_1_0 = (CrossReference)cOppositeToAssignment_1_6_1.eContents().get(0);
		private final RuleCall cOppositeToReferenceQualifiedNameParserRuleCall_1_6_1_0_1 = (RuleCall)cOppositeToReferenceCrossReference_1_6_1_0.eContents().get(1);
		
		//Reference:
		//	RegularityReference |
		//	'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//	_type=[Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
		//	subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//RegularityReference | 'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//_type=[Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		//('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RegularityReference
		public RuleCall getRegularityReferenceParserRuleCall_0() { return cRegularityReferenceParserRuleCall_0; }
		
		//'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')? _type=[Class|QualifiedName] ('subsets'
		//subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo'
		//oppositeTo=[Reference|QualifiedName])?
		public Group getGroup_1() { return cGroup_1; }
		
		//'ref'
		public Keyword getRefKeyword_1_0() { return cRefKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_3_0() { return cLeftSquareBracketKeyword_1_3_0; }
		
		//lowerBound=CARDINALITY
		public Assignment getLowerBoundAssignment_1_3_1() { return cLowerBoundAssignment_1_3_1; }
		
		//CARDINALITY
		public RuleCall getLowerBoundCARDINALITYParserRuleCall_1_3_1_0() { return cLowerBoundCARDINALITYParserRuleCall_1_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_3_2() { return cFullStopFullStopKeyword_1_3_2; }
		
		//upperBound=CARDINALITY
		public Assignment getUpperBoundAssignment_1_3_3() { return cUpperBoundAssignment_1_3_3; }
		
		//CARDINALITY
		public RuleCall getUpperBoundCARDINALITYParserRuleCall_1_3_3_0() { return cUpperBoundCARDINALITYParserRuleCall_1_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3_4() { return cRightSquareBracketKeyword_1_3_4; }
		
		//_type=[Class|QualifiedName]
		public Assignment get_typeAssignment_1_4() { return c_typeAssignment_1_4; }
		
		//[Class|QualifiedName]
		public CrossReference get_typeClassCrossReference_1_4_0() { return c_typeClassCrossReference_1_4_0; }
		
		//QualifiedName
		public RuleCall get_typeClassQualifiedNameParserRuleCall_1_4_0_1() { return c_typeClassQualifiedNameParserRuleCall_1_4_0_1; }
		
		//('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_1_5_0() { return cSubsetsKeyword_1_5_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_1_5_1() { return cSubsetOfAssignment_1_5_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_1_5_1_0() { return cSubsetOfReferenceCrossReference_1_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_1_5_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_1_5_1_0_1; }
		
		//(',' subsetOf+=[Reference|QualifiedName])*
		public Group getGroup_1_5_2() { return cGroup_1_5_2; }
		
		//','
		public Keyword getCommaKeyword_1_5_2_0() { return cCommaKeyword_1_5_2_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_1_5_2_1() { return cSubsetOfAssignment_1_5_2_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_1_5_2_1_0() { return cSubsetOfReferenceCrossReference_1_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_1_5_2_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_1_5_2_1_0_1; }
		
		//('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'isOppositeTo'
		public Keyword getIsOppositeToKeyword_1_6_0() { return cIsOppositeToKeyword_1_6_0; }
		
		//oppositeTo=[Reference|QualifiedName]
		public Assignment getOppositeToAssignment_1_6_1() { return cOppositeToAssignment_1_6_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getOppositeToReferenceCrossReference_1_6_1_0() { return cOppositeToReferenceCrossReference_1_6_1_0; }
		
		//QualifiedName
		public RuleCall getOppositeToReferenceQualifiedNameParserRuleCall_1_6_1_0_1() { return cOppositeToReferenceQualifiedNameParserRuleCall_1_6_1_0_1; }
	}
	public class RegularityReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegularityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerBoundCARDINALITYParserRuleCall_4_1_0 = (RuleCall)cLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cUpperBoundCARDINALITYParserRuleCall_4_3_0 = (RuleCall)cUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Assignment c_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference c_typeClassCrossReference_5_0 = (CrossReference)c_typeAssignment_5.eContents().get(0);
		private final RuleCall c_typeClassQualifiedNameParserRuleCall_5_0_1 = (RuleCall)c_typeClassCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubsetsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_6_1_0 = (CrossReference)cSubsetOfAssignment_6_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_6_2_1_0 = (CrossReference)cSubsetOfAssignment_6_2_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_6_2_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIsOppositeToKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOppositeToAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cOppositeToReferenceCrossReference_7_1_0 = (CrossReference)cOppositeToAssignment_7_1.eContents().get(0);
		private final RuleCall cOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cOppositeToReferenceCrossReference_7_1_0.eContents().get(1);
		private final Assignment cRegularityTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0 = (RuleCall)cRegularityTypeAssignment_8.eContents().get(0);
		private final Assignment cRegulatesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cRegulatesReferenceCrossReference_9_0 = (CrossReference)cRegulatesAssignment_9.eContents().get(0);
		private final RuleCall cRegulatesReferenceQualifiedNameParserRuleCall_9_0_1 = (RuleCall)cRegulatesReferenceCrossReference_9_0.eContents().get(1);
		
		//RegularityReference:
		//	'regularity'? 'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//	_type=[Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
		//	subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		//	regularityType=RegularityFeatureType regulates=[Reference|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'regularity'? 'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		//_type=[Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		//('isOppositeTo' oppositeTo=[Reference|QualifiedName])? regularityType=RegularityFeatureType
		//regulates=[Reference|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'regularity'?
		public Keyword getRegularityKeyword_0() { return cRegularityKeyword_0; }
		
		//'ref'
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//lowerBound=CARDINALITY
		public Assignment getLowerBoundAssignment_4_1() { return cLowerBoundAssignment_4_1; }
		
		//CARDINALITY
		public RuleCall getLowerBoundCARDINALITYParserRuleCall_4_1_0() { return cLowerBoundCARDINALITYParserRuleCall_4_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }
		
		//upperBound=CARDINALITY
		public Assignment getUpperBoundAssignment_4_3() { return cUpperBoundAssignment_4_3; }
		
		//CARDINALITY
		public RuleCall getUpperBoundCARDINALITYParserRuleCall_4_3_0() { return cUpperBoundCARDINALITYParserRuleCall_4_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }
		
		//_type=[Class|QualifiedName]
		public Assignment get_typeAssignment_5() { return c_typeAssignment_5; }
		
		//[Class|QualifiedName]
		public CrossReference get_typeClassCrossReference_5_0() { return c_typeClassCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall get_typeClassQualifiedNameParserRuleCall_5_0_1() { return c_typeClassQualifiedNameParserRuleCall_5_0_1; }
		
		//('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_6_0() { return cSubsetsKeyword_6_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_6_1() { return cSubsetOfAssignment_6_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_6_1_0() { return cSubsetOfReferenceCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_6_1_0_1; }
		
		//(',' subsetOf+=[Reference|QualifiedName])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_6_2_1() { return cSubsetOfAssignment_6_2_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_6_2_1_0() { return cSubsetOfReferenceCrossReference_6_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_6_2_1_0_1; }
		
		//('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'isOppositeTo'
		public Keyword getIsOppositeToKeyword_7_0() { return cIsOppositeToKeyword_7_0; }
		
		//oppositeTo=[Reference|QualifiedName]
		public Assignment getOppositeToAssignment_7_1() { return cOppositeToAssignment_7_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getOppositeToReferenceCrossReference_7_1_0() { return cOppositeToReferenceCrossReference_7_1_0; }
		
		//QualifiedName
		public RuleCall getOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1() { return cOppositeToReferenceQualifiedNameParserRuleCall_7_1_0_1; }
		
		//regularityType=RegularityFeatureType
		public Assignment getRegularityTypeAssignment_8() { return cRegularityTypeAssignment_8; }
		
		//RegularityFeatureType
		public RuleCall getRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0() { return cRegularityTypeRegularityFeatureTypeEnumRuleCall_8_0; }
		
		//regulates=[Reference|QualifiedName]
		public Assignment getRegulatesAssignment_9() { return cRegulatesAssignment_9; }
		
		//[Reference|QualifiedName]
		public CrossReference getRegulatesReferenceCrossReference_9_0() { return cRegulatesReferenceCrossReference_9_0; }
		
		//QualifiedName
		public RuleCall getRegulatesReferenceQualifiedNameParserRuleCall_9_0_1() { return cRegulatesReferenceQualifiedNameParserRuleCall_9_0_1; }
	}
	public class FeatureIntoRegularityFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.FeatureIntoRegularityFeature");
		private final RuleCall cRegularityFeatureParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// ParserRule used to enforce specialization only
		//FeatureIntoRegularityFeature Feature:
		//	RegularityFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//RegularityFeature
		public RuleCall getRegularityFeatureParserRuleCall() { return cRegularityFeatureParserRuleCall; }
	}
	public class RegularityFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularityAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRegularityReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// ParserRule used to enforce specialization only
		//RegularityFeature:
		//	RegularityAttribute | RegularityReference;
		@Override public ParserRule getRule() { return rule; }
		
		//RegularityAttribute | RegularityReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RegularityAttribute
		public RuleCall getRegularityAttributeParserRuleCall_0() { return cRegularityAttributeParserRuleCall_0; }
		
		//RegularityReference
		public RuleCall getRegularityReferenceParserRuleCall_1() { return cRegularityReferenceParserRuleCall_1; }
	}
	public class CARDINALITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.CARDINALITY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CARDINALITY ecore::EInt:
		//	'*' | INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class FeatureAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.FeatureAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSingleReferenceAssignmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultipleReferenceAssignmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSingleAttributeAssignmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMultipleAttributeAssignmentParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//FeatureAssignment:
		//	SingleReferenceAssignment
		//	| MultipleReferenceAssignment
		//	| SingleAttributeAssignment
		//	| MultipleAttributeAssignment;
		@Override public ParserRule getRule() { return rule; }
		
		//SingleReferenceAssignment | MultipleReferenceAssignment | SingleAttributeAssignment | MultipleAttributeAssignment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SingleReferenceAssignment
		public RuleCall getSingleReferenceAssignmentParserRuleCall_0() { return cSingleReferenceAssignmentParserRuleCall_0; }
		
		//MultipleReferenceAssignment
		public RuleCall getMultipleReferenceAssignmentParserRuleCall_1() { return cMultipleReferenceAssignmentParserRuleCall_1; }
		
		//SingleAttributeAssignment
		public RuleCall getSingleAttributeAssignmentParserRuleCall_2() { return cSingleAttributeAssignmentParserRuleCall_2; }
		
		//MultipleAttributeAssignment
		public RuleCall getMultipleAttributeAssignmentParserRuleCall_3() { return cMultipleAttributeAssignmentParserRuleCall_3; }
	}
	public class SingleReferenceAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SingleReferenceAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceReferenceCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceReferenceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cReferenceReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cValuesEntityDeclarationCrossReference_3_0 = (CrossReference)cValuesAssignment_3.eContents().get(0);
		private final RuleCall cValuesEntityDeclarationQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cValuesEntityDeclarationCrossReference_3_0.eContents().get(1);
		
		//SingleReferenceAssignment ReferenceAssignment:
		//	'ref' reference=[Reference|QualifiedName] '=' values+=[EntityDeclaration|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' reference=[Reference|QualifiedName] '=' values+=[EntityDeclaration|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//reference=[Reference|QualifiedName]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getReferenceReferenceCrossReference_1_0() { return cReferenceReferenceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getReferenceReferenceQualifiedNameParserRuleCall_1_0_1() { return cReferenceReferenceQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//values+=[EntityDeclaration|QualifiedName]
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getValuesEntityDeclarationCrossReference_3_0() { return cValuesEntityDeclarationCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getValuesEntityDeclarationQualifiedNameParserRuleCall_3_0_1() { return cValuesEntityDeclarationQualifiedNameParserRuleCall_3_0_1; }
	}
	public class MultipleReferenceAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.MultipleReferenceAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceReferenceCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceReferenceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cReferenceReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cValuesEntityDeclarationCrossReference_4_0 = (CrossReference)cValuesAssignment_4.eContents().get(0);
		private final RuleCall cValuesEntityDeclarationQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cValuesEntityDeclarationCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cValuesEntityDeclarationCrossReference_5_1_0 = (CrossReference)cValuesAssignment_5_1.eContents().get(0);
		private final RuleCall cValuesEntityDeclarationQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cValuesEntityDeclarationCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MultipleReferenceAssignment ReferenceAssignment:
		//	'ref' reference=[Reference|QualifiedName] '='
		//	'{'
		//	values+=[EntityDeclaration|QualifiedName] (',' values+=[EntityDeclaration|QualifiedName])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' reference=[Reference|QualifiedName] '=' '{' values+=[EntityDeclaration|QualifiedName] (','
		//values+=[EntityDeclaration|QualifiedName])* '}'
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//reference=[Reference|QualifiedName]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getReferenceReferenceCrossReference_1_0() { return cReferenceReferenceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getReferenceReferenceQualifiedNameParserRuleCall_1_0_1() { return cReferenceReferenceQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//values+=[EntityDeclaration|QualifiedName]
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getValuesEntityDeclarationCrossReference_4_0() { return cValuesEntityDeclarationCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getValuesEntityDeclarationQualifiedNameParserRuleCall_4_0_1() { return cValuesEntityDeclarationQualifiedNameParserRuleCall_4_0_1; }
		
		//(',' values+=[EntityDeclaration|QualifiedName])*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//values+=[EntityDeclaration|QualifiedName]
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getValuesEntityDeclarationCrossReference_5_1_0() { return cValuesEntityDeclarationCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getValuesEntityDeclarationQualifiedNameParserRuleCall_5_1_0_1() { return cValuesEntityDeclarationQualifiedNameParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class SingleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SingleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cLiteralValuesAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cLiteralValuesLiteralParserRuleCall_3_0_0 = (RuleCall)cLiteralValuesAssignment_3_0.eContents().get(0);
		private final Assignment cDatatypeValuesAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final CrossReference cDatatypeValuesIndividualCrossReference_3_1_0 = (CrossReference)cDatatypeValuesAssignment_3_1.eContents().get(0);
		private final RuleCall cDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cDatatypeValuesIndividualCrossReference_3_1_0.eContents().get(1);
		private final Assignment cUnnamedValuesAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0 = (RuleCall)cUnnamedValuesAssignment_3_2.eContents().get(0);
		
		//SingleAttributeAssignment AttributeAssignment:
		//	'att'? attribute=[Attribute|QualifiedName] '=' (literalValues+=Literal
		//	| datatypeValues+=[Individual|QualifiedName] | unnamedValues+=UnnamedIndividual);
		@Override public ParserRule getRule() { return rule; }
		
		//'att'? attribute=[Attribute|QualifiedName] '=' (literalValues+=Literal | datatypeValues+=[Individual|QualifiedName] |
		//unnamedValues+=UnnamedIndividual)
		public Group getGroup() { return cGroup; }
		
		//'att'?
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//(literalValues+=Literal | datatypeValues+=[Individual|QualifiedName] | unnamedValues+=UnnamedIndividual)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//literalValues+=Literal
		public Assignment getLiteralValuesAssignment_3_0() { return cLiteralValuesAssignment_3_0; }
		
		//Literal
		public RuleCall getLiteralValuesLiteralParserRuleCall_3_0_0() { return cLiteralValuesLiteralParserRuleCall_3_0_0; }
		
		//datatypeValues+=[Individual|QualifiedName]
		public Assignment getDatatypeValuesAssignment_3_1() { return cDatatypeValuesAssignment_3_1; }
		
		//[Individual|QualifiedName]
		public CrossReference getDatatypeValuesIndividualCrossReference_3_1_0() { return cDatatypeValuesIndividualCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_1() { return cDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_1; }
		
		//unnamedValues+=UnnamedIndividual
		public Assignment getUnnamedValuesAssignment_3_2() { return cUnnamedValuesAssignment_3_2; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0() { return cUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0; }
	}
	public class MultipleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.MultipleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cLiteralValuesAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cLiteralValuesLiteralParserRuleCall_4_0_0_0 = (RuleCall)cLiteralValuesAssignment_4_0_0.eContents().get(0);
		private final Group cGroup_4_0_1 = (Group)cGroup_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_0_1_0 = (Keyword)cGroup_4_0_1.eContents().get(0);
		private final Assignment cLiteralValuesAssignment_4_0_1_1 = (Assignment)cGroup_4_0_1.eContents().get(1);
		private final RuleCall cLiteralValuesLiteralParserRuleCall_4_0_1_1_0 = (RuleCall)cLiteralValuesAssignment_4_0_1_1.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cDatatypeValuesAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final CrossReference cDatatypeValuesIndividualCrossReference_4_1_0_0 = (CrossReference)cDatatypeValuesAssignment_4_1_0.eContents().get(0);
		private final RuleCall cDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_0_0_1 = (RuleCall)cDatatypeValuesIndividualCrossReference_4_1_0_0.eContents().get(1);
		private final Group cGroup_4_1_1 = (Group)cGroup_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Assignment cDatatypeValuesAssignment_4_1_1_1 = (Assignment)cGroup_4_1_1.eContents().get(1);
		private final CrossReference cDatatypeValuesIndividualCrossReference_4_1_1_1_0 = (CrossReference)cDatatypeValuesAssignment_4_1_1_1.eContents().get(0);
		private final RuleCall cDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_1_1_0_1 = (RuleCall)cDatatypeValuesIndividualCrossReference_4_1_1_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cAlternatives_4.eContents().get(2);
		private final Assignment cUnnamedValuesAssignment_4_2_0 = (Assignment)cGroup_4_2.eContents().get(0);
		private final RuleCall cUnnamedValuesUnnamedIndividualParserRuleCall_4_2_0_0 = (RuleCall)cUnnamedValuesAssignment_4_2_0.eContents().get(0);
		private final Group cGroup_4_2_1 = (Group)cGroup_4_2.eContents().get(1);
		private final Keyword cCommaKeyword_4_2_1_0 = (Keyword)cGroup_4_2_1.eContents().get(0);
		private final Assignment cUnnamedValuesAssignment_4_2_1_1 = (Assignment)cGroup_4_2_1.eContents().get(1);
		private final RuleCall cUnnamedValuesUnnamedIndividualParserRuleCall_4_2_1_1_0 = (RuleCall)cUnnamedValuesAssignment_4_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MultipleAttributeAssignment AttributeAssignment:
		//	'att'? attribute=[Attribute|QualifiedName] '='
		//	'{' (literalValues+=Literal (',' literalValues+=Literal)*
		//	| datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])*
		//	| unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'att'? attribute=[Attribute|QualifiedName] '=' '{' (literalValues+=Literal (',' literalValues+=Literal)* |
		//datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])* |
		//unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*) '}'
		public Group getGroup() { return cGroup; }
		
		//'att'?
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(literalValues+=Literal (',' literalValues+=Literal)* | datatypeValues+=[Individual|QualifiedName] (','
		//datatypeValues+=[Individual|QualifiedName])* | unnamedValues+=UnnamedIndividual (','
		//unnamedValues+=UnnamedIndividual)*)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//literalValues+=Literal (',' literalValues+=Literal)*
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//literalValues+=Literal
		public Assignment getLiteralValuesAssignment_4_0_0() { return cLiteralValuesAssignment_4_0_0; }
		
		//Literal
		public RuleCall getLiteralValuesLiteralParserRuleCall_4_0_0_0() { return cLiteralValuesLiteralParserRuleCall_4_0_0_0; }
		
		//(',' literalValues+=Literal)*
		public Group getGroup_4_0_1() { return cGroup_4_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_0_1_0() { return cCommaKeyword_4_0_1_0; }
		
		//literalValues+=Literal
		public Assignment getLiteralValuesAssignment_4_0_1_1() { return cLiteralValuesAssignment_4_0_1_1; }
		
		//Literal
		public RuleCall getLiteralValuesLiteralParserRuleCall_4_0_1_1_0() { return cLiteralValuesLiteralParserRuleCall_4_0_1_1_0; }
		
		//datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//datatypeValues+=[Individual|QualifiedName]
		public Assignment getDatatypeValuesAssignment_4_1_0() { return cDatatypeValuesAssignment_4_1_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getDatatypeValuesIndividualCrossReference_4_1_0_0() { return cDatatypeValuesIndividualCrossReference_4_1_0_0; }
		
		//QualifiedName
		public RuleCall getDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_0_0_1() { return cDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_0_0_1; }
		
		//(',' datatypeValues+=[Individual|QualifiedName])*
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//','
		public Keyword getCommaKeyword_4_1_1_0() { return cCommaKeyword_4_1_1_0; }
		
		//datatypeValues+=[Individual|QualifiedName]
		public Assignment getDatatypeValuesAssignment_4_1_1_1() { return cDatatypeValuesAssignment_4_1_1_1; }
		
		//[Individual|QualifiedName]
		public CrossReference getDatatypeValuesIndividualCrossReference_4_1_1_1_0() { return cDatatypeValuesIndividualCrossReference_4_1_1_1_0; }
		
		//QualifiedName
		public RuleCall getDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_1_1_0_1() { return cDatatypeValuesIndividualQualifiedNameParserRuleCall_4_1_1_1_0_1; }
		
		//unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//unnamedValues+=UnnamedIndividual
		public Assignment getUnnamedValuesAssignment_4_2_0() { return cUnnamedValuesAssignment_4_2_0; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_0_0() { return cUnnamedValuesUnnamedIndividualParserRuleCall_4_2_0_0; }
		
		//(',' unnamedValues+=UnnamedIndividual)*
		public Group getGroup_4_2_1() { return cGroup_4_2_1; }
		
		//','
		public Keyword getCommaKeyword_4_2_1_0() { return cCommaKeyword_4_2_1_0; }
		
		//unnamedValues+=UnnamedIndividual
		public Assignment getUnnamedValuesAssignment_4_2_1_1() { return cUnnamedValuesAssignment_4_2_1_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedValuesUnnamedIndividualParserRuleCall_4_2_1_1_0() { return cUnnamedValuesUnnamedIndividualParserRuleCall_4_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class LiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.Literal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBOOLEANParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Literal ecore::EObject:
		//	STRING
		//	| NUMBER
		//	| BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | NUMBER | BOOLEAN
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//NUMBER
		public RuleCall getNUMBERParserRuleCall_1() { return cNUMBERParserRuleCall_1; }
		
		//BOOLEAN
		public RuleCall getBOOLEANParserRuleCall_2() { return cBOOLEANParserRuleCall_2; }
	}
	public class BOOLEANElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.BOOLEAN");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BOOLEAN ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.NUMBER");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//NUMBER ecore::EDouble:
		//	'-'? INT ('.' INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT ('.' INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//('.' INT)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2_1() { return cINTTerminalRuleCall_2_1; }
	}
	public class UnnamedIndividualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.UnnamedIndividual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIndividualAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAssignmentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0 = (RuleCall)cAssignmentsAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//UnnamedIndividual Individual:
		//	{Individual} '[' assignments+=SimpleAttributeAssignment* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{Individual} '[' assignments+=SimpleAttributeAssignment* ']'
		public Group getGroup() { return cGroup; }
		
		//{Individual}
		public Action getIndividualAction_0() { return cIndividualAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//assignments+=SimpleAttributeAssignment*
		public Assignment getAssignmentsAssignment_2() { return cAssignmentsAssignment_2; }
		
		//SimpleAttributeAssignment
		public RuleCall getAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0() { return cAssignmentsSimpleAttributeAssignmentParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SimpleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SimpleAttributeAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSingleSimpleAttributeAssignmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultipleSimpleAttributeAssignmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SimpleAttributeAssignment AttributeAssignment:
		//	SingleSimpleAttributeAssignment
		//	| MultipleSimpleAttributeAssignment;
		@Override public ParserRule getRule() { return rule; }
		
		//SingleSimpleAttributeAssignment | MultipleSimpleAttributeAssignment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SingleSimpleAttributeAssignment
		public RuleCall getSingleSimpleAttributeAssignmentParserRuleCall_0() { return cSingleSimpleAttributeAssignmentParserRuleCall_0; }
		
		//MultipleSimpleAttributeAssignment
		public RuleCall getMultipleSimpleAttributeAssignmentParserRuleCall_1() { return cMultipleSimpleAttributeAssignmentParserRuleCall_1; }
	}
	public class SingleSimpleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.SingleSimpleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cLiteralValuesAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cLiteralValuesLiteralParserRuleCall_2_0_0 = (RuleCall)cLiteralValuesAssignment_2_0.eContents().get(0);
		private final Assignment cDatatypeValuesAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cDatatypeValuesIndividualCrossReference_2_1_0 = (CrossReference)cDatatypeValuesAssignment_2_1.eContents().get(0);
		private final RuleCall cDatatypeValuesIndividualQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cDatatypeValuesIndividualCrossReference_2_1_0.eContents().get(1);
		private final Assignment cUnnamedValuesAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cUnnamedValuesUnnamedIndividualParserRuleCall_2_2_0 = (RuleCall)cUnnamedValuesAssignment_2_2.eContents().get(0);
		
		//SingleSimpleAttributeAssignment AttributeAssignment:
		//	attribute=[Attribute|QualifiedName] '=' (literalValues+=Literal
		//	| datatypeValues+=[Individual|QualifiedName] | unnamedValues+=UnnamedIndividual);
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|QualifiedName] '=' (literalValues+=Literal | datatypeValues+=[Individual|QualifiedName] |
		//unnamedValues+=UnnamedIndividual)
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(literalValues+=Literal | datatypeValues+=[Individual|QualifiedName] | unnamedValues+=UnnamedIndividual)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//literalValues+=Literal
		public Assignment getLiteralValuesAssignment_2_0() { return cLiteralValuesAssignment_2_0; }
		
		//Literal
		public RuleCall getLiteralValuesLiteralParserRuleCall_2_0_0() { return cLiteralValuesLiteralParserRuleCall_2_0_0; }
		
		//datatypeValues+=[Individual|QualifiedName]
		public Assignment getDatatypeValuesAssignment_2_1() { return cDatatypeValuesAssignment_2_1; }
		
		//[Individual|QualifiedName]
		public CrossReference getDatatypeValuesIndividualCrossReference_2_1_0() { return cDatatypeValuesIndividualCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getDatatypeValuesIndividualQualifiedNameParserRuleCall_2_1_0_1() { return cDatatypeValuesIndividualQualifiedNameParserRuleCall_2_1_0_1; }
		
		//unnamedValues+=UnnamedIndividual
		public Assignment getUnnamedValuesAssignment_2_2() { return cUnnamedValuesAssignment_2_2; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedValuesUnnamedIndividualParserRuleCall_2_2_0() { return cUnnamedValuesUnnamedIndividualParserRuleCall_2_2_0; }
	}
	public class MultipleSimpleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.MultipleSimpleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cLiteralValuesAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cLiteralValuesLiteralParserRuleCall_3_0_0_0 = (RuleCall)cLiteralValuesAssignment_3_0_0.eContents().get(0);
		private final Group cGroup_3_0_1 = (Group)cGroup_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_3_0_1_0 = (Keyword)cGroup_3_0_1.eContents().get(0);
		private final Assignment cLiteralValuesAssignment_3_0_1_1 = (Assignment)cGroup_3_0_1.eContents().get(1);
		private final RuleCall cLiteralValuesLiteralParserRuleCall_3_0_1_1_0 = (RuleCall)cLiteralValuesAssignment_3_0_1_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cDatatypeValuesAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cDatatypeValuesIndividualCrossReference_3_1_0_0 = (CrossReference)cDatatypeValuesAssignment_3_1_0.eContents().get(0);
		private final RuleCall cDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cDatatypeValuesIndividualCrossReference_3_1_0_0.eContents().get(1);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cDatatypeValuesAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final CrossReference cDatatypeValuesIndividualCrossReference_3_1_1_1_0 = (CrossReference)cDatatypeValuesAssignment_3_1_1_1.eContents().get(0);
		private final RuleCall cDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_1_1_0_1 = (RuleCall)cDatatypeValuesIndividualCrossReference_3_1_1_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cUnnamedValuesAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final RuleCall cUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0_0 = (RuleCall)cUnnamedValuesAssignment_3_2_0.eContents().get(0);
		private final Group cGroup_3_2_1 = (Group)cGroup_3_2.eContents().get(1);
		private final Keyword cCommaKeyword_3_2_1_0 = (Keyword)cGroup_3_2_1.eContents().get(0);
		private final Assignment cUnnamedValuesAssignment_3_2_1_1 = (Assignment)cGroup_3_2_1.eContents().get(1);
		private final RuleCall cUnnamedValuesUnnamedIndividualParserRuleCall_3_2_1_1_0 = (RuleCall)cUnnamedValuesAssignment_3_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MultipleSimpleAttributeAssignment AttributeAssignment:
		//	attribute=[Attribute|QualifiedName] '='
		//	'{' (literalValues+=Literal (',' literalValues+=Literal)*
		//	| datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])*
		//	| unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|QualifiedName] '=' '{' (literalValues+=Literal (',' literalValues+=Literal)* |
		//datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])* |
		//unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*) '}'
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(literalValues+=Literal (',' literalValues+=Literal)* | datatypeValues+=[Individual|QualifiedName] (','
		//datatypeValues+=[Individual|QualifiedName])* | unnamedValues+=UnnamedIndividual (','
		//unnamedValues+=UnnamedIndividual)*)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//literalValues+=Literal (',' literalValues+=Literal)*
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//literalValues+=Literal
		public Assignment getLiteralValuesAssignment_3_0_0() { return cLiteralValuesAssignment_3_0_0; }
		
		//Literal
		public RuleCall getLiteralValuesLiteralParserRuleCall_3_0_0_0() { return cLiteralValuesLiteralParserRuleCall_3_0_0_0; }
		
		//(',' literalValues+=Literal)*
		public Group getGroup_3_0_1() { return cGroup_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_3_0_1_0() { return cCommaKeyword_3_0_1_0; }
		
		//literalValues+=Literal
		public Assignment getLiteralValuesAssignment_3_0_1_1() { return cLiteralValuesAssignment_3_0_1_1; }
		
		//Literal
		public RuleCall getLiteralValuesLiteralParserRuleCall_3_0_1_1_0() { return cLiteralValuesLiteralParserRuleCall_3_0_1_1_0; }
		
		//datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//datatypeValues+=[Individual|QualifiedName]
		public Assignment getDatatypeValuesAssignment_3_1_0() { return cDatatypeValuesAssignment_3_1_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getDatatypeValuesIndividualCrossReference_3_1_0_0() { return cDatatypeValuesIndividualCrossReference_3_1_0_0; }
		
		//QualifiedName
		public RuleCall getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_0_1() { return cDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//(',' datatypeValues+=[Individual|QualifiedName])*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_1_0() { return cCommaKeyword_3_1_1_0; }
		
		//datatypeValues+=[Individual|QualifiedName]
		public Assignment getDatatypeValuesAssignment_3_1_1_1() { return cDatatypeValuesAssignment_3_1_1_1; }
		
		//[Individual|QualifiedName]
		public CrossReference getDatatypeValuesIndividualCrossReference_3_1_1_1_0() { return cDatatypeValuesIndividualCrossReference_3_1_1_1_0; }
		
		//QualifiedName
		public RuleCall getDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_1_1_0_1() { return cDatatypeValuesIndividualQualifiedNameParserRuleCall_3_1_1_1_0_1; }
		
		//unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//unnamedValues+=UnnamedIndividual
		public Assignment getUnnamedValuesAssignment_3_2_0() { return cUnnamedValuesAssignment_3_2_0; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0_0() { return cUnnamedValuesUnnamedIndividualParserRuleCall_3_2_0_0; }
		
		//(',' unnamedValues+=UnnamedIndividual)*
		public Group getGroup_3_2_1() { return cGroup_3_2_1; }
		
		//','
		public Keyword getCommaKeyword_3_2_1_0() { return cCommaKeyword_3_2_1_0; }
		
		//unnamedValues+=UnnamedIndividual
		public Assignment getUnnamedValuesAssignment_3_2_1_1() { return cUnnamedValuesAssignment_3_2_1_1; }
		
		//UnnamedIndividual
		public RuleCall getUnnamedValuesUnnamedIndividualParserRuleCall_3_2_1_1_0() { return cUnnamedValuesUnnamedIndividualParserRuleCall_3_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	public class CategorizationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.CategorizationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCATEGORIZEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCATEGORIZERCategorizesKeyword_0_0 = (Keyword)cCATEGORIZEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPLETE_CATEGORIZERCompleteCategorizesKeyword_1_0 = (Keyword)cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDISJOINT_CATEGORIZERDisjointCategorizesKeyword_2_0 = (Keyword)cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPARTITIONEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPARTITIONERPartitionsKeyword_3_0 = (Keyword)cPARTITIONEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum CategorizationType:
		//	CATEGORIZER='categorizes'
		//	| COMPLETE_CATEGORIZER='completeCategorizes'
		//	| DISJOINT_CATEGORIZER='disjointCategorizes'
		//	| PARTITIONER='partitions';
		public EnumRule getRule() { return rule; }
		
		//CATEGORIZER='categorizes' | COMPLETE_CATEGORIZER='completeCategorizes' | DISJOINT_CATEGORIZER='disjointCategorizes' |
		//PARTITIONER='partitions'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CATEGORIZER='categorizes'
		public EnumLiteralDeclaration getCATEGORIZEREnumLiteralDeclaration_0() { return cCATEGORIZEREnumLiteralDeclaration_0; }
		
		//'categorizes'
		public Keyword getCATEGORIZERCategorizesKeyword_0_0() { return cCATEGORIZERCategorizesKeyword_0_0; }
		
		//COMPLETE_CATEGORIZER='completeCategorizes'
		public EnumLiteralDeclaration getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1() { return cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1; }
		
		//'completeCategorizes'
		public Keyword getCOMPLETE_CATEGORIZERCompleteCategorizesKeyword_1_0() { return cCOMPLETE_CATEGORIZERCompleteCategorizesKeyword_1_0; }
		
		//DISJOINT_CATEGORIZER='disjointCategorizes'
		public EnumLiteralDeclaration getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2() { return cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2; }
		
		//'disjointCategorizes'
		public Keyword getDISJOINT_CATEGORIZERDisjointCategorizesKeyword_2_0() { return cDISJOINT_CATEGORIZERDisjointCategorizesKeyword_2_0; }
		
		//PARTITIONER='partitions'
		public EnumLiteralDeclaration getPARTITIONEREnumLiteralDeclaration_3() { return cPARTITIONEREnumLiteralDeclaration_3; }
		
		//'partitions'
		public Keyword getPARTITIONERPartitionsKeyword_3_0() { return cPARTITIONERPartitionsKeyword_3_0; }
	}
	public class PrimitiveTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.PrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGStringKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNUMBEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNUMBERNumberKeyword_1_0 = (Keyword)cNUMBEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOOLEANBooleanKeyword_2_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PrimitiveType:
		//	STRING='String'
		//	| NUMBER='Number'
		//	| BOOLEAN='Boolean';
		public EnumRule getRule() { return rule; }
		
		//STRING='String' | NUMBER='Number' | BOOLEAN='Boolean'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING='String'
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getSTRINGStringKeyword_0_0() { return cSTRINGStringKeyword_0_0; }
		
		//NUMBER='Number'
		public EnumLiteralDeclaration getNUMBEREnumLiteralDeclaration_1() { return cNUMBEREnumLiteralDeclaration_1; }
		
		//'Number'
		public Keyword getNUMBERNumberKeyword_1_0() { return cNUMBERNumberKeyword_1_0; }
		
		//BOOLEAN='Boolean'
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_2() { return cBOOLEANEnumLiteralDeclaration_2; }
		
		//'Boolean'
		public Keyword getBOOLEANBooleanKeyword_2_0() { return cBOOLEANBooleanKeyword_2_0; }
	}
	public class RegularityFeatureTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ml2.ML2.RegularityFeatureType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDETERMINES_MAX_VALUEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDETERMINES_MAX_VALUEDeterminesMaxValueKeyword_0_0 = (Keyword)cDETERMINES_MAX_VALUEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_MIN_VALUEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDETERMINES_MIN_VALUEDeterminesMinValueKeyword_1_0 = (Keyword)cDETERMINES_MIN_VALUEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_VALUEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDETERMINES_VALUEDeterminesValueKeyword_2_0 = (Keyword)cDETERMINES_VALUEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDETERMINES_ALLOWED_VALUESDeterminesAllowedValuesKeyword_3_0 = (Keyword)cDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_TYPEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDETERMINES_TYPEDeterminesTypeKeyword_4_0 = (Keyword)cDETERMINES_TYPEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDETERMINES_ALLOWED_TYPESDeterminesAllowedTypesKeyword_5_0 = (Keyword)cDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum RegularityFeatureType:
		//	DETERMINES_MAX_VALUE="determinesMaxValue"
		//	| DETERMINES_MIN_VALUE="determinesMinValue"
		//	| DETERMINES_VALUE="determinesValue"
		//	| DETERMINES_ALLOWED_VALUES="determinesAllowedValues"
		//	| DETERMINES_TYPE="determinesType"
		//	| DETERMINES_ALLOWED_TYPES="determinesAllowedTypes";
		public EnumRule getRule() { return rule; }
		
		//DETERMINES_MAX_VALUE="determinesMaxValue" | DETERMINES_MIN_VALUE="determinesMinValue" |
		//DETERMINES_VALUE="determinesValue" | DETERMINES_ALLOWED_VALUES="determinesAllowedValues" |
		//DETERMINES_TYPE="determinesType" | DETERMINES_ALLOWED_TYPES="determinesAllowedTypes"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DETERMINES_MAX_VALUE="determinesMaxValue"
		public EnumLiteralDeclaration getDETERMINES_MAX_VALUEEnumLiteralDeclaration_0() { return cDETERMINES_MAX_VALUEEnumLiteralDeclaration_0; }
		
		//"determinesMaxValue"
		public Keyword getDETERMINES_MAX_VALUEDeterminesMaxValueKeyword_0_0() { return cDETERMINES_MAX_VALUEDeterminesMaxValueKeyword_0_0; }
		
		//DETERMINES_MIN_VALUE="determinesMinValue"
		public EnumLiteralDeclaration getDETERMINES_MIN_VALUEEnumLiteralDeclaration_1() { return cDETERMINES_MIN_VALUEEnumLiteralDeclaration_1; }
		
		//"determinesMinValue"
		public Keyword getDETERMINES_MIN_VALUEDeterminesMinValueKeyword_1_0() { return cDETERMINES_MIN_VALUEDeterminesMinValueKeyword_1_0; }
		
		//DETERMINES_VALUE="determinesValue"
		public EnumLiteralDeclaration getDETERMINES_VALUEEnumLiteralDeclaration_2() { return cDETERMINES_VALUEEnumLiteralDeclaration_2; }
		
		//"determinesValue"
		public Keyword getDETERMINES_VALUEDeterminesValueKeyword_2_0() { return cDETERMINES_VALUEDeterminesValueKeyword_2_0; }
		
		//DETERMINES_ALLOWED_VALUES="determinesAllowedValues"
		public EnumLiteralDeclaration getDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3() { return cDETERMINES_ALLOWED_VALUESEnumLiteralDeclaration_3; }
		
		//"determinesAllowedValues"
		public Keyword getDETERMINES_ALLOWED_VALUESDeterminesAllowedValuesKeyword_3_0() { return cDETERMINES_ALLOWED_VALUESDeterminesAllowedValuesKeyword_3_0; }
		
		//DETERMINES_TYPE="determinesType"
		public EnumLiteralDeclaration getDETERMINES_TYPEEnumLiteralDeclaration_4() { return cDETERMINES_TYPEEnumLiteralDeclaration_4; }
		
		//"determinesType"
		public Keyword getDETERMINES_TYPEDeterminesTypeKeyword_4_0() { return cDETERMINES_TYPEDeterminesTypeKeyword_4_0; }
		
		//DETERMINES_ALLOWED_TYPES="determinesAllowedTypes"
		public EnumLiteralDeclaration getDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5() { return cDETERMINES_ALLOWED_TYPESEnumLiteralDeclaration_5; }
		
		//"determinesAllowedTypes"
		public Keyword getDETERMINES_ALLOWED_TYPESDeterminesAllowedTypesKeyword_5_0() { return cDETERMINES_ALLOWED_TYPESDeterminesAllowedTypesKeyword_5_0; }
	}
	
	private final ModelElements pModel;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final ImportElements pImport;
	private final ModelElementElements pModelElement;
	private final EntityDeclarationElements pEntityDeclaration;
	private final ClassElements pClass;
	private final FirstOrderClassOrDataTypeElements pFirstOrderClassOrDataType;
	private final HigherOrderClassElements pHigherOrderClass;
	private final IndividualElements pIndividual;
	private final ClassIntoOrderedOrOrderlessElements pClassIntoOrderedOrOrderless;
	private final OrderedClassElements pOrderedClass;
	private final FirstOrderClassElements pFirstOrderClass;
	private final DataTypeElements pDataType;
	private final HighOrderClassElements pHighOrderClass;
	private final OrderlessClassElements pOrderlessClass;
	private final CategorizationTypeElements eCategorizationType;
	private final GeneralizationSetElements pGeneralizationSet;
	private final FeatureElements pFeature;
	private final AttributeElements pAttribute;
	private final RegularityAttributeElements pRegularityAttribute;
	private final ReferenceElements pReference;
	private final RegularityReferenceElements pRegularityReference;
	private final FeatureIntoRegularityFeatureElements pFeatureIntoRegularityFeature;
	private final RegularityFeatureElements pRegularityFeature;
	private final CARDINALITYElements pCARDINALITY;
	private final PrimitiveTypeElements ePrimitiveType;
	private final RegularityFeatureTypeElements eRegularityFeatureType;
	private final FeatureAssignmentElements pFeatureAssignment;
	private final SingleReferenceAssignmentElements pSingleReferenceAssignment;
	private final MultipleReferenceAssignmentElements pMultipleReferenceAssignment;
	private final SingleAttributeAssignmentElements pSingleAttributeAssignment;
	private final MultipleAttributeAssignmentElements pMultipleAttributeAssignment;
	private final LiteralElements pLiteral;
	private final BOOLEANElements pBOOLEAN;
	private final NUMBERElements pNUMBER;
	private final UnnamedIndividualElements pUnnamedIndividual;
	private final SimpleAttributeAssignmentElements pSimpleAttributeAssignment;
	private final SingleSimpleAttributeAssignmentElements pSingleSimpleAttributeAssignment;
	private final MultipleSimpleAttributeAssignmentElements pMultipleSimpleAttributeAssignment;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ML2GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.pImport = new ImportElements();
		this.pModelElement = new ModelElementElements();
		this.pEntityDeclaration = new EntityDeclarationElements();
		this.pClass = new ClassElements();
		this.pFirstOrderClassOrDataType = new FirstOrderClassOrDataTypeElements();
		this.pHigherOrderClass = new HigherOrderClassElements();
		this.pIndividual = new IndividualElements();
		this.pClassIntoOrderedOrOrderless = new ClassIntoOrderedOrOrderlessElements();
		this.pOrderedClass = new OrderedClassElements();
		this.pFirstOrderClass = new FirstOrderClassElements();
		this.pDataType = new DataTypeElements();
		this.pHighOrderClass = new HighOrderClassElements();
		this.pOrderlessClass = new OrderlessClassElements();
		this.eCategorizationType = new CategorizationTypeElements();
		this.pGeneralizationSet = new GeneralizationSetElements();
		this.pFeature = new FeatureElements();
		this.pAttribute = new AttributeElements();
		this.pRegularityAttribute = new RegularityAttributeElements();
		this.pReference = new ReferenceElements();
		this.pRegularityReference = new RegularityReferenceElements();
		this.pFeatureIntoRegularityFeature = new FeatureIntoRegularityFeatureElements();
		this.pRegularityFeature = new RegularityFeatureElements();
		this.pCARDINALITY = new CARDINALITYElements();
		this.ePrimitiveType = new PrimitiveTypeElements();
		this.eRegularityFeatureType = new RegularityFeatureTypeElements();
		this.pFeatureAssignment = new FeatureAssignmentElements();
		this.pSingleReferenceAssignment = new SingleReferenceAssignmentElements();
		this.pMultipleReferenceAssignment = new MultipleReferenceAssignmentElements();
		this.pSingleAttributeAssignment = new SingleAttributeAssignmentElements();
		this.pMultipleAttributeAssignment = new MultipleAttributeAssignmentElements();
		this.pLiteral = new LiteralElements();
		this.pBOOLEAN = new BOOLEANElements();
		this.pNUMBER = new NUMBERElements();
		this.pUnnamedIndividual = new UnnamedIndividualElements();
		this.pSimpleAttributeAssignment = new SimpleAttributeAssignmentElements();
		this.pSingleSimpleAttributeAssignment = new SingleSimpleAttributeAssignmentElements();
		this.pMultipleSimpleAttributeAssignment = new MultipleSimpleAttributeAssignmentElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufes.inf.nemo.ml2.ML2".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	'module' name=QualifiedName
	//	'{' ('include' includes+=[Model|QualifiedName] ';' | elements+=ModelElement)*
	//	'}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	QualifiedName '.*'?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//Import:
	//	'import' importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//ModelElement:
	//	(Import | EntityDeclaration | GeneralizationSet | Feature | FeatureAssignment) ';';
	public ModelElementElements getModelElementAccess() {
		return pModelElement;
	}
	
	public ParserRule getModelElementRule() {
		return getModelElementAccess().getRule();
	}
	
	//EntityDeclaration:
	//	Class | Individual;
	public EntityDeclarationElements getEntityDeclarationAccess() {
		return pEntityDeclaration;
	}
	
	public ParserRule getEntityDeclarationRule() {
		return getEntityDeclarationAccess().getRule();
	}
	
	//Class:
	//	FirstOrderClassOrDataType | HigherOrderClass;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//FirstOrderClassOrDataType FirstOrderClass:
	//	FirstOrderClass | DataType;
	public FirstOrderClassOrDataTypeElements getFirstOrderClassOrDataTypeAccess() {
		return pFirstOrderClassOrDataType;
	}
	
	public ParserRule getFirstOrderClassOrDataTypeRule() {
		return getFirstOrderClassOrDataTypeAccess().getRule();
	}
	
	//HigherOrderClass:
	//	HighOrderClass | OrderlessClass;
	public HigherOrderClassElements getHigherOrderClassAccess() {
		return pHigherOrderClass;
	}
	
	public ParserRule getHigherOrderClassRule() {
		return getHigherOrderClassAccess().getRule();
	}
	
	//Individual:
	//	'individual' name=ID
	//	':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])* ('{' assignments+=FeatureAssignment*
	//	'}')?;
	public IndividualElements getIndividualAccess() {
		return pIndividual;
	}
	
	public ParserRule getIndividualRule() {
		return getIndividualAccess().getRule();
	}
	
	//// ParserRule used to enforce specialization only
	//ClassIntoOrderedOrOrderless Class:
	//	OrderlessClass | OrderedClass;
	public ClassIntoOrderedOrOrderlessElements getClassIntoOrderedOrOrderlessAccess() {
		return pClassIntoOrderedOrOrderless;
	}
	
	public ParserRule getClassIntoOrderedOrOrderlessRule() {
		return getClassIntoOrderedOrOrderlessAccess().getRule();
	}
	
	//// ParserRule used to enforce specialization only
	//OrderedClass:
	//	HighOrderClass | FirstOrderClass;
	public OrderedClassElements getOrderedClassAccess() {
		return pOrderedClass;
	}
	
	public ParserRule getOrderedClassRule() {
		return getOrderedClassAccess().getRule();
	}
	
	//FirstOrderClass:
	//	'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)? ('specializes'
	//	superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('{' (assignments+=FeatureAssignment
	//	| features+=Feature)* '}')?;
	public FirstOrderClassElements getFirstOrderClassAccess() {
		return pFirstOrderClass;
	}
	
	public ParserRule getFirstOrderClassRule() {
		return getFirstOrderClassAccess().getRule();
	}
	
	//DataType:
	//	'datatype' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)? ('specializes'
	//	superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('{' (assignments+=FeatureAssignment
	//	| features+=Feature)* '}')?;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//HighOrderClass:
	//	'order' order=INT 'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
	//	('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('subordinatedTo'
	//	subordinators+=[HigherOrderClass|QualifiedName] (',' subordinators+=[HigherOrderClass|QualifiedName])*)?
	//	(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
	//	powertypeOf=[Class|QualifiedName])? ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?;
	public HighOrderClassElements getHighOrderClassAccess() {
		return pHighOrderClass;
	}
	
	public ParserRule getHighOrderClassRule() {
		return getHighOrderClassAccess().getRule();
	}
	
	//OrderlessClass:
	//	'orderless' 'class' name=ID (':' classifiers+=[Class|QualifiedName] (',' classifiers+=[Class|QualifiedName])*)?
	//	('specializes' superClasses+=[Class|QualifiedName] (',' superClasses+=[Class|QualifiedName])*)? ('subordinatedTo'
	//	subordinators+=[HigherOrderClass|QualifiedName] (',' subordinators+=[HigherOrderClass|QualifiedName])*)?
	//	(categorizationType=CategorizationType categorizedClass=[Class|QualifiedName] | 'isPowertypeOf'
	//	powertypeOf=[Class|QualifiedName])? ('{' (assignments+=FeatureAssignment | features+=Feature)* '}')?;
	public OrderlessClassElements getOrderlessClassAccess() {
		return pOrderlessClass;
	}
	
	public ParserRule getOrderlessClassRule() {
		return getOrderlessClassAccess().getRule();
	}
	
	//enum CategorizationType:
	//	CATEGORIZER='categorizes'
	//	| COMPLETE_CATEGORIZER='completeCategorizes'
	//	| DISJOINT_CATEGORIZER='disjointCategorizes'
	//	| PARTITIONER='partitions';
	public CategorizationTypeElements getCategorizationTypeAccess() {
		return eCategorizationType;
	}
	
	public EnumRule getCategorizationTypeRule() {
		return getCategorizationTypeAccess().getRule();
	}
	
	//GeneralizationSet:
	//	(isDisjoint?='disjoint'? & isComplete?='complete'?) 'genset' name=ID?
	//	'general' general=[Class|QualifiedName] ('categorizer' categorizer=[HigherOrderClass|QualifiedName])?
	//	'specifics' specifics+=[Class|QualifiedName] (',' specifics+=[Class|QualifiedName])+;
	public GeneralizationSetElements getGeneralizationSetAccess() {
		return pGeneralizationSet;
	}
	
	public ParserRule getGeneralizationSetRule() {
		return getGeneralizationSetAccess().getRule();
	}
	
	//Feature:
	//	Attribute | Reference;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//Attribute:
	//	RegularityAttribute |
	//	'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')? (primitiveType=PrimitiveType |
	//	_type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
	//	subsetOf+=[Attribute|QualifiedName])*)?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//RegularityAttribute:
	//	'regularity'? 'att'? name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
	//	(primitiveType=PrimitiveType | _type=[DataType|QualifiedName]) ('subsets' subsetOf+=[Attribute|QualifiedName] (','
	//	subsetOf+=[Attribute|QualifiedName])*)?
	//	regularityType=RegularityFeatureType regulates=[Attribute|QualifiedName];
	public RegularityAttributeElements getRegularityAttributeAccess() {
		return pRegularityAttribute;
	}
	
	public ParserRule getRegularityAttributeRule() {
		return getRegularityAttributeAccess().getRule();
	}
	
	//Reference:
	//	RegularityReference |
	//	'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
	//	_type=[Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
	//	subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//RegularityReference:
	//	'regularity'? 'ref' name=ID ':' ('[' lowerBound=CARDINALITY '..' upperBound=CARDINALITY ']')?
	//	_type=[Class|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
	//	subsetOf+=[Reference|QualifiedName])*)? ('isOppositeTo' oppositeTo=[Reference|QualifiedName])?
	//	regularityType=RegularityFeatureType regulates=[Reference|QualifiedName];
	public RegularityReferenceElements getRegularityReferenceAccess() {
		return pRegularityReference;
	}
	
	public ParserRule getRegularityReferenceRule() {
		return getRegularityReferenceAccess().getRule();
	}
	
	//// ParserRule used to enforce specialization only
	//FeatureIntoRegularityFeature Feature:
	//	RegularityFeature;
	public FeatureIntoRegularityFeatureElements getFeatureIntoRegularityFeatureAccess() {
		return pFeatureIntoRegularityFeature;
	}
	
	public ParserRule getFeatureIntoRegularityFeatureRule() {
		return getFeatureIntoRegularityFeatureAccess().getRule();
	}
	
	//// ParserRule used to enforce specialization only
	//RegularityFeature:
	//	RegularityAttribute | RegularityReference;
	public RegularityFeatureElements getRegularityFeatureAccess() {
		return pRegularityFeature;
	}
	
	public ParserRule getRegularityFeatureRule() {
		return getRegularityFeatureAccess().getRule();
	}
	
	//CARDINALITY ecore::EInt:
	//	'*' | INT;
	public CARDINALITYElements getCARDINALITYAccess() {
		return pCARDINALITY;
	}
	
	public ParserRule getCARDINALITYRule() {
		return getCARDINALITYAccess().getRule();
	}
	
	//enum PrimitiveType:
	//	STRING='String'
	//	| NUMBER='Number'
	//	| BOOLEAN='Boolean';
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return ePrimitiveType;
	}
	
	public EnumRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//enum RegularityFeatureType:
	//	DETERMINES_MAX_VALUE="determinesMaxValue"
	//	| DETERMINES_MIN_VALUE="determinesMinValue"
	//	| DETERMINES_VALUE="determinesValue"
	//	| DETERMINES_ALLOWED_VALUES="determinesAllowedValues"
	//	| DETERMINES_TYPE="determinesType"
	//	| DETERMINES_ALLOWED_TYPES="determinesAllowedTypes";
	public RegularityFeatureTypeElements getRegularityFeatureTypeAccess() {
		return eRegularityFeatureType;
	}
	
	public EnumRule getRegularityFeatureTypeRule() {
		return getRegularityFeatureTypeAccess().getRule();
	}
	
	//FeatureAssignment:
	//	SingleReferenceAssignment
	//	| MultipleReferenceAssignment
	//	| SingleAttributeAssignment
	//	| MultipleAttributeAssignment;
	public FeatureAssignmentElements getFeatureAssignmentAccess() {
		return pFeatureAssignment;
	}
	
	public ParserRule getFeatureAssignmentRule() {
		return getFeatureAssignmentAccess().getRule();
	}
	
	//SingleReferenceAssignment ReferenceAssignment:
	//	'ref' reference=[Reference|QualifiedName] '=' values+=[EntityDeclaration|QualifiedName];
	public SingleReferenceAssignmentElements getSingleReferenceAssignmentAccess() {
		return pSingleReferenceAssignment;
	}
	
	public ParserRule getSingleReferenceAssignmentRule() {
		return getSingleReferenceAssignmentAccess().getRule();
	}
	
	//MultipleReferenceAssignment ReferenceAssignment:
	//	'ref' reference=[Reference|QualifiedName] '='
	//	'{'
	//	values+=[EntityDeclaration|QualifiedName] (',' values+=[EntityDeclaration|QualifiedName])*
	//	'}';
	public MultipleReferenceAssignmentElements getMultipleReferenceAssignmentAccess() {
		return pMultipleReferenceAssignment;
	}
	
	public ParserRule getMultipleReferenceAssignmentRule() {
		return getMultipleReferenceAssignmentAccess().getRule();
	}
	
	//SingleAttributeAssignment AttributeAssignment:
	//	'att'? attribute=[Attribute|QualifiedName] '=' (literalValues+=Literal
	//	| datatypeValues+=[Individual|QualifiedName] | unnamedValues+=UnnamedIndividual);
	public SingleAttributeAssignmentElements getSingleAttributeAssignmentAccess() {
		return pSingleAttributeAssignment;
	}
	
	public ParserRule getSingleAttributeAssignmentRule() {
		return getSingleAttributeAssignmentAccess().getRule();
	}
	
	//MultipleAttributeAssignment AttributeAssignment:
	//	'att'? attribute=[Attribute|QualifiedName] '='
	//	'{' (literalValues+=Literal (',' literalValues+=Literal)*
	//	| datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])*
	//	| unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*)
	//	'}';
	public MultipleAttributeAssignmentElements getMultipleAttributeAssignmentAccess() {
		return pMultipleAttributeAssignment;
	}
	
	public ParserRule getMultipleAttributeAssignmentRule() {
		return getMultipleAttributeAssignmentAccess().getRule();
	}
	
	//Literal ecore::EObject:
	//	STRING
	//	| NUMBER
	//	| BOOLEAN;
	public LiteralElements getLiteralAccess() {
		return pLiteral;
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}
	
	//BOOLEAN ecore::EBoolean:
	//	'true' | 'false';
	public BOOLEANElements getBOOLEANAccess() {
		return pBOOLEAN;
	}
	
	public ParserRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//NUMBER ecore::EDouble:
	//	'-'? INT ('.' INT)?;
	public NUMBERElements getNUMBERAccess() {
		return pNUMBER;
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}
	
	//UnnamedIndividual Individual:
	//	{Individual} '[' assignments+=SimpleAttributeAssignment* ']';
	public UnnamedIndividualElements getUnnamedIndividualAccess() {
		return pUnnamedIndividual;
	}
	
	public ParserRule getUnnamedIndividualRule() {
		return getUnnamedIndividualAccess().getRule();
	}
	
	//SimpleAttributeAssignment AttributeAssignment:
	//	SingleSimpleAttributeAssignment
	//	| MultipleSimpleAttributeAssignment;
	public SimpleAttributeAssignmentElements getSimpleAttributeAssignmentAccess() {
		return pSimpleAttributeAssignment;
	}
	
	public ParserRule getSimpleAttributeAssignmentRule() {
		return getSimpleAttributeAssignmentAccess().getRule();
	}
	
	//SingleSimpleAttributeAssignment AttributeAssignment:
	//	attribute=[Attribute|QualifiedName] '=' (literalValues+=Literal
	//	| datatypeValues+=[Individual|QualifiedName] | unnamedValues+=UnnamedIndividual);
	public SingleSimpleAttributeAssignmentElements getSingleSimpleAttributeAssignmentAccess() {
		return pSingleSimpleAttributeAssignment;
	}
	
	public ParserRule getSingleSimpleAttributeAssignmentRule() {
		return getSingleSimpleAttributeAssignmentAccess().getRule();
	}
	
	//MultipleSimpleAttributeAssignment AttributeAssignment:
	//	attribute=[Attribute|QualifiedName] '='
	//	'{' (literalValues+=Literal (',' literalValues+=Literal)*
	//	| datatypeValues+=[Individual|QualifiedName] (',' datatypeValues+=[Individual|QualifiedName])*
	//	| unnamedValues+=UnnamedIndividual (',' unnamedValues+=UnnamedIndividual)*)
	//	'}';
	public MultipleSimpleAttributeAssignmentElements getMultipleSimpleAttributeAssignmentAccess() {
		return pMultipleSimpleAttributeAssignment;
	}
	
	public ParserRule getMultipleSimpleAttributeAssignmentRule() {
		return getMultipleSimpleAttributeAssignmentAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
