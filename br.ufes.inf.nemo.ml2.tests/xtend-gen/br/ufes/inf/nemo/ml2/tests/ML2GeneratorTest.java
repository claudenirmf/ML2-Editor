/**
 * generated by Xtext 2.21.0
 */
package br.ufes.inf.nemo.ml2.tests;

import br.ufes.inf.nemo.ml2.model.Model;
import br.ufes.inf.nemo.ml2.tests.ML2InjectorProvider;
import com.google.inject.Inject;
import org.eclipse.xtext.generator.IGenerator2;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.testing.CompilationTestHelper;
import org.eclipse.xtext.xbase.testing.TemporaryFolder;
import org.junit.Rule;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(InjectionExtension.class)/* 
@InjectWith(ML2InjectorProvider.class) */
public class ML2GeneratorTest {
  @Inject
  @Extension
  private /* ParseHelper<Model> */Object _parseHelper;
  
  @Inject
  @Extension
  private IGenerator2 gen;
  
  @Rule
  @Inject
  public TemporaryFolder tempFolder;
  
  @Inject
  @Extension
  private CompilationTestHelper _compilationTestHelper;
  
  @Test
  public void emptyTest() {
  }
  
  @Test
  public void testGenerateRegularity() {
    throw new Error("Unresolved compilation problems:"
      + "\nString cannot be resolved to a type."
      + "\nHashSet cannot be resolved."
      + "\nThe method or field textFiles is undefined for the type InMemoryFileSystemAccess"
      + "\nThe method newFile(java.lang.String) is undefined for the type TemporaryFolder"
      + "\nBufferedWriter cannot be resolved."
      + "\nFileWriter cannot be resolved."
      + "\nThe method or field printStackTrace is undefined for the type ErrorWarning"
      + "\nThe method or field System is undefined"
      + "\nThe method toString() is undefined for the type ErrorWarning"
      + "\nThe method or field System is undefined"
      + "\nString cannot be resolved to a type."
      + "\nThe method println(T) from the type InputOutput refers to the missing type Object"
      + "\nThe method println(T) from the type InputOutput refers to the missing type Object"
      + "\nThe method println(T) from the type InputOutput refers to the missing type Object"
      + "\nNo exception of type ErrorWarning can be thrown; an exception type must be a subclass of Throwable"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nvalues cannot be resolved"
      + "\nget cannot be resolved"
      + "\nwrite cannot be resolved"
      + "\ntoString cannot be resolved"
      + "\nadd cannot be resolved"
      + "\nabsolutePath cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nparseEverything_fromFile cannot be resolved"
      + "\nout cannot be resolved"
      + "\nprint cannot be resolved"
      + "\n+ cannot be resolved"
      + "\ntrim cannot be resolved"
      + "\n+ cannot be resolved"
      + "\nout cannot be resolved"
      + "\nflush cannot be resolved");
  }
}
